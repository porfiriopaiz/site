<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>porfirio's blog - fedora</title><link>https://porfiriopaiz.github.io/site/</link><description></description><lastBuildDate>Wed, 25 Dec 2019 18:03:00 -0600</lastBuildDate><item><title>Flatpak</title><link>https://porfiriopaiz.github.io/site/posts/2019/12/25/flatpak.html</link><description>&lt;p&gt;I don't like Flatpaks, Flatpaks are heavy, take up a lot of space and consume a
lot of resources in RAM. But when it comes to installing proprietary software
that is not available in the official Fedora repositories, Flatpaks are a good
option as some type of isolation is added.&lt;/p&gt;
&lt;div class="section" id="flatpak-installation"&gt;
&lt;h2&gt;Flatpak installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install flatpak&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enable-flathub-repo"&gt;
&lt;h2&gt;Enable Flathub repo&lt;/h2&gt;
&lt;p&gt;Add the Flathub repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some good examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/im.riot.Riot"&gt;Riot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/com.skype.Client"&gt;Skype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/org.signal.Signal"&gt;Signal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/com.slack.Slack"&gt;Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/com.spotify.Client"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flathub.org/apps/details/com.wire.WireDesktop"&gt;Wire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't like to install Flatpaks on my root directory, so I always add the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--user&lt;/span&gt;&lt;/tt&gt; flag to make sure Flatpaks are installed under my &lt;tt class="docutils literal"&gt;~/&lt;/tt&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;flatpak --user install flathub im.riot.Riot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Wed, 25 Dec 2019 18:03:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2019-12-25:/site/posts/2019/12/25/flatpak.html</guid><category>floss</category><category>fc30</category><category>fedora</category><category>flathub</category><category>flatpak</category></item><item><title>Fedora 30 Mate Desktop post-install</title><link>https://porfiriopaiz.github.io/site/posts/2019/12/24/mate-desktop.html</link><description>&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;dnf configuration&lt;/h2&gt;
&lt;div class="section" id="dnf-conf"&gt;
&lt;h3&gt;dnf.conf&lt;/h3&gt;
&lt;p&gt;Enable Fastest Mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable deltarpm's for future updates:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable dnf packages caching:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-dnf-makecache-systemd-service-and-timer"&gt;
&lt;h3&gt;Disable dnf makecache systemd service and timer&lt;/h3&gt;
&lt;p&gt;To disable the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable the timer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regenerate-the-cache-and-install-available-updates"&gt;
&lt;h3&gt;Regenerate the cache and install available updates&lt;/h3&gt;
&lt;p&gt;As a normal non-root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="check-for-available-upgrades-and-enter-your-root-password"&gt;
&lt;h2&gt;Check for available upgrades and enter your root password:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are upgrades available, we apply them with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mate-desktop-tips-and-tricks"&gt;
&lt;h2&gt;Mate Desktop Tips and Tricks&lt;/h2&gt;
&lt;p&gt;Enable windows composing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general compositing-manager true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable new window centering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general center-new-windows true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable window snapping&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general allow-tiling true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hide all desktop icons:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.background show-desktop-icons false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change window decoration button order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general button-layout &amp;#39;close,maximize,minimize:menu&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automount-open:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount-open false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caja default prefereces for sorting order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-some-working-directories"&gt;
&lt;h2&gt;Create some working directories&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir ~/git_repos&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir ~/projects&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="remove-unneeded-software"&gt;
&lt;h2&gt;Remove unneeded software&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove xfburn&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove exaile&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove parole&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove hexchat&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove dnfdragora&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove filezilla&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="software-repositories"&gt;
&lt;h2&gt;Software Repositories&lt;/h2&gt;
&lt;p&gt;Enable software repositories.&lt;/p&gt;
&lt;div class="section" id="rpmfusion"&gt;
&lt;h3&gt;RPMFusion&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-workstation-repositories"&gt;
&lt;h3&gt;Fedora Workstation Repositories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-workstation-repositories&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-rawhide-s-repositories"&gt;
&lt;h3&gt;Fedora Rawhide's Repositories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-repos-rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="copr"&gt;
&lt;h3&gt;COPR&lt;/h3&gt;
&lt;p&gt;Copr is an easy-to-use automatic build system providing a package repository as
its output.&lt;/p&gt;
&lt;p&gt;Here are some of the repos I rely on for some packages:&lt;/p&gt;
&lt;div class="section" id="neteler-remarkable"&gt;
&lt;h4&gt;neteler/remarkable&lt;/h4&gt;
&lt;p&gt;Remarkable is a free fully featured markdown editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable neteler/remarkable&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="philfry-gajim"&gt;
&lt;h4&gt;philfry/gajim&lt;/h4&gt;
&lt;p&gt;Gajim is a Jabber client written in PyGTK, currently it provides support for
the OMEMO encryption method which I use. This repo provides tools and
dependencies not available in the official Fedora repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable philfry/gajim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dani-qgis"&gt;
&lt;h4&gt;dani/qgis&lt;/h4&gt;
&lt;p&gt;QGIS is a user friendly Open Source Geographic Information System.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable dani/qgis&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="donet-sig-dotnet"&gt;
&lt;h4&gt;donet-sig/dotnet&lt;/h4&gt;
&lt;p&gt;This provides the .NET CLI tools and runtime for Fedora.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf copr enable @dotnet-sig/dotnet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="vscodium"&gt;
&lt;h3&gt;VSCodium&lt;/h3&gt;
&lt;p&gt;Import the gpg key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now create the vscodium.repo file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;tee -a /etc/yum.repos.d/vscodium.repo &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[gitlab.com_paulcarroty_vscodium_repo]&lt;/span&gt;
&lt;span class="go"&gt;name=gitlab.com_paulcarroty_vscodium_repo&lt;/span&gt;
&lt;span class="go"&gt;baseurl=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/&lt;/span&gt;
&lt;span class="go"&gt;enabled=1&lt;/span&gt;
&lt;span class="go"&gt;gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;repo_gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;gpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&lt;/span&gt;
&lt;span class="go"&gt;EOF&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Tue, 24 Dec 2019 12:28:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2019-12-24:/site/posts/2019/12/24/mate-desktop.html</guid><category>floss</category><category>fc30</category><category>fedora</category><category>mate</category><category>postinstall</category></item><item><title>repos</title><link>https://porfiriopaiz.github.io/site/posts/2019/07/11/repos.html</link><description>&lt;div class="section" id="software-repositories"&gt;
&lt;h2&gt;Software Repositories&lt;/h2&gt;
&lt;p&gt;Once we solved the problem of getting connected to the Internet and how to
launch a terminal, you might want to install all the software you use.&lt;/p&gt;
&lt;p&gt;The software comes from somewhere, on Fedora these are called &lt;em&gt;Software
Repositories&lt;/em&gt;, next I detail which are the ones I enable on all my Fedora
installs apart of the officials that comes preinstalled and enabled by default.&lt;/p&gt;
&lt;p&gt;Open a terminal and enable some of these.&lt;/p&gt;
&lt;div class="section" id="rpmfusion"&gt;
&lt;h3&gt;RPMFusion&lt;/h3&gt;
&lt;p&gt;RPM Fusion is a repository of add-on packages for Fedora and EL+EPEL maintained
by a group of volunteers. RPM Fusion is not a standalone repository, but an
extension of Fedora. RPM Fusion distributes packages that have been deemed
unacceptable to Fedora.&lt;/p&gt;
&lt;p&gt;More about RPMFusion on its official website: &lt;a class="reference external" href="https://rpmfusion.org/FAQ"&gt;https://rpmfusion.org/FAQ&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-workstation-repositories"&gt;
&lt;h3&gt;Fedora Workstation Repositories&lt;/h3&gt;
&lt;p&gt;From the Fedora wiki page corresponding to Fedora Workstation Repositories:&lt;/p&gt;
&lt;p&gt;The Fedora community strongly promotes free and open source resources. The
Fedora Workstation, in its out of the box configuration, therefore, only
includes free and open source software. To make the Fedora Workstation more
usable, we've made it possible to easily install a curated set of third party
(external) sources that supply software not included in Fedora via an
additional package.&lt;/p&gt;
&lt;p&gt;Read more at: &lt;a class="reference external" href="https://fedoraproject.org/wiki/Workstation/Third_Party_Software_Repositories"&gt;https://fedoraproject.org/wiki/Workstation/Third_Party_Software_Repositories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that this will only install the *.repo files, it will not enable
the provided repos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-workstation-repositories&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-rawhide-s-repositories"&gt;
&lt;h3&gt;Fedora Rawhide's Repositories&lt;/h3&gt;
&lt;p&gt;Rawhide is the name given to the current development version of Fedora. It
consists of a package repository called &amp;quot;rawhide&amp;quot; and contains the latest build
of all Fedora packages updated on a daily basis. Each day, an attempt is made
to create a full set of 'deliverables' (installation images and so on), and all
that compose successfully are included in the Rawhide tree for that day.&lt;/p&gt;
&lt;p&gt;It is possible to install its repository files and just temporarily enable it
for just a single transaction, let us say, to simple install or upgrade a
single package and its dependencies, maybe, to give a try to its new version
that is not currently available on any of the stable and maintained versions of
Fedora.&lt;/p&gt;
&lt;p&gt;This is useful when a bug was fixed on Rawhide but it has not landed yet on the
stable branch of Fedora and the urge for it cannot wait.&lt;/p&gt;
&lt;p&gt;Again, this will just install the *.repo file under &lt;tt class="docutils literal"&gt;/etc/yum.repos.d/&lt;/tt&gt;,
this will not enable it. Later we will see how to handle, disable and enable
this repositories for just one transaction.&lt;/p&gt;
&lt;p&gt;More on Rawhide on its wiki page: &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;https://fedoraproject.org/wiki/Releases/Rawhide&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-repos-rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="copr"&gt;
&lt;h3&gt;COPR&lt;/h3&gt;
&lt;p&gt;Copr is an easy-to-use automatic build system providing a package repository as
its output.&lt;/p&gt;
&lt;p&gt;Here are some of the repos I rely on for some packages:&lt;/p&gt;
&lt;div class="section" id="neteler-remarkable"&gt;
&lt;h4&gt;neteler/remarkable&lt;/h4&gt;
&lt;p&gt;Remarkable is a free fully featured markdown editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable neteler/remarkable&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="philfry-gajim"&gt;
&lt;h4&gt;philfry/gajim&lt;/h4&gt;
&lt;p&gt;Gajim is a Jabber client written in PyGTK, currently it provides support for
the OMEMO encryption method which I use. This repo provides tools and
dependencies not available in the official Fedora repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable philfry/gajim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dani-qgis"&gt;
&lt;h4&gt;dani/qgis&lt;/h4&gt;
&lt;p&gt;QGIS is a user friendly Open Source Geographic Information System.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable dani/qgis&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="donet-sig-dotnet"&gt;
&lt;h4&gt;donet-sig/dotnet&lt;/h4&gt;
&lt;p&gt;This provides the .NET CLI tools and runtime for Fedora.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf copr enable @dotnet-sig/dotnet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="vscodium"&gt;
&lt;h3&gt;VSCodium&lt;/h3&gt;
&lt;p&gt;Few weeks ago I decided to give a try to VSCodium, a fork of VSCode, here is
how to enable its repo for Fedora.&lt;/p&gt;
&lt;p&gt;First import its gpg key, so you can check the packages retrieved from the
repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now create the vscodium.repo file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;tee -a /etc/yum.repos.d/vscodium.repo &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[gitlab.com_paulcarroty_vscodium_repo]&lt;/span&gt;
&lt;span class="go"&gt;name=gitlab.com_paulcarroty_vscodium_repo&lt;/span&gt;
&lt;span class="go"&gt;baseurl=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/&lt;/span&gt;
&lt;span class="go"&gt;enabled=1&lt;/span&gt;
&lt;span class="go"&gt;gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;repo_gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;gpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&lt;/span&gt;
&lt;span class="go"&gt;EOF&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verification"&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;p&gt;Now check that all the repos has been successfully installed and some of them
enabled by refreshing the &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; metadata.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thats all, in the next post will see how to enable some of this repos, how
temporarilly disable  and enable some other for just a single transaction, how
to install or upgrade certain packages from an specific repo and many repo
administration tasks.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 11 Jul 2019 23:32:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2019-07-11:/site/posts/2019/07/11/repos.html</guid><category>floss</category><category>fc30</category><category>fedora</category><category>postinstall</category><category>repositories</category></item><item><title>i3 post install</title><link>https://porfiriopaiz.github.io/site/posts/2018/12/09/i3-post-install.html</link><description>&lt;p&gt;After installing Fedora 29 with i3 window manager, we need to install many
other programs that will ease our user experience.&lt;/p&gt;
&lt;p&gt;The first problem we have to solve is how are we going to connect to Internet,
you might have noticed that we don't have any program or applet that allows us
to activate the Wi-Fi card or even the NetworkManager service to use the wired
wetwork card or manage the different networks that are within our reach.&lt;/p&gt;
&lt;p&gt;Assuming that you are already logged in and that your hardware is supported by
Fedora, the wireless network card should be activated, but how do we connect to
any of the networks we have available?&lt;/p&gt;
&lt;div class="section" id="nmcli"&gt;
&lt;h2&gt;nmcli&lt;/h2&gt;
&lt;p&gt;In the previous post we installed a set of packages provided by the group
&amp;quot;Hardware Support&amp;quot;, this group provides support for a wide variety of
networking hardware.  We also install the group of packages corresponding to
NetworkManager.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt; is a command-line program that will allow us to activate by software
the network hardware of our device, scan the networks that are around us and
connect to them.&lt;/p&gt;
&lt;p&gt;We will need a terminal, by pressing &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; we get a Terminal.&lt;/p&gt;
&lt;p&gt;If our device has a switch that allows to activate or deactivate the
network card, we make sure it is activated.&lt;/p&gt;
&lt;p&gt;Then on the terminal we execute the following command to verify that it is
already activated by software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli networking on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate the wired network connection of our device in case we were
accessing one and we wanted to use it.&lt;/p&gt;
&lt;p&gt;To activate the wireless network hardware from the terminal, we execute the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli radio wifi on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate our network card, then we verify which are the networks
that we have available at our reach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;IN-USE  SSID           MODE   CHAN  RATE        SIGNAL  BARS  SECURITY&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  5     130 Mbit/s  100     ââââ  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  1     130 Mbit/s  29      â___  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_3     Infra  1     54 Mbit/s   17      â___  WPA1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case you need to scan again to verify other connections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi rescan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming that &lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; does not require an access password, to get
connected we just execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case that we might need to provide a password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1 password &amp;quot;1234567890&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; is the task we want to accomplish.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; this argument tells the network we want to get connected.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;password&lt;/tt&gt; a parameter that tells we are going to provide a password to
get authenticated.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;1234567890&lt;/tt&gt; this is the argument passed for the previous parameter, the
password of the nextwork. Here you must provided the password that works for
you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By now, you should be connected to the network. Now proceed to install any
other program that will help you to ease you user experience with i3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networks"&gt;
&lt;h2&gt;Networks&lt;/h2&gt;
&lt;div class="section" id="mn-applet"&gt;
&lt;h3&gt;mn-applet&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; is a very simple applet for NetworkManager that allows us to do
in a very easy and intuitive way what we did with &lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt;, but in a graphical
way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-applet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; press &amp;lt;Start&amp;gt; + &amp;lt;d&amp;gt; and type &lt;cite&gt;nm-applet&lt;/cite&gt; and press
&amp;lt;Enter&amp;gt;. In the lower right corner of our screen should appear an icon
corresponding to this &lt;cite&gt;applet&lt;/cite&gt; from where we can manage our connection to the
different networks that we have available to around us.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networkmanager-tui"&gt;
&lt;h3&gt;NetworkManager-tui&lt;/h3&gt;
&lt;p&gt;This is an alternative for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; that make use of &lt;tt class="docutils literal"&gt;ncurses&lt;/tt&gt; to create
a very friendly &lt;cite&gt;Text User Interface&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install NetworkManager-tui&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nm-connecion-editor"&gt;
&lt;h3&gt;nm-connecion-editor&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;NetworkManager Connection Editor&lt;/cite&gt; allows us to edit in a friendly way and
intuitively the different networks to which we have accessed, or Well, create
Hotspots in case our network card supports it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-connection-editor&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="terminal-emulator"&gt;
&lt;h2&gt;Terminal Emulator&lt;/h2&gt;
&lt;p&gt;You may have noticed that the emulator that is installed by default with i3 is
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rxvt-unicode&lt;/span&gt;&lt;/tt&gt; and that is not very friendly to say, it is not very
intuitive to first sight and it has a certain learning curve that we do not
want to go through, possibly...&lt;/p&gt;
&lt;p&gt;Ironically, my favorite terminal emulator is GNOME Terminal, you can install
the one you prefer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; has the key combination &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; assigned to the emulator
&lt;tt class="docutils literal"&gt;urxvt&lt;/tt&gt;, to launch GNOME Terminal instead, you need to edit the configuration
file for  &lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.config/i3/config&lt;/span&gt;&lt;/tt&gt;), look for the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec i3-sensible-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And replace with the command that calls our terminal emulator, in my case,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-terminal&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec gnome-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the following post I will share what other programs I use in my setup Fedora
29 with i3wm. At the moment you already have the necessary to install other
interesting programs such as Web browser and others.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Sun, 09 Dec 2018 21:26:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2018-12-09:/site/posts/2018/12/09/i3-post-install.html</guid><category>floss</category><category>dnf</category><category>fc29</category><category>fedora</category><category>postinstall</category></item><item><title>i3</title><link>https://porfiriopaiz.github.io/site/posts/2018/11/29/i3.html</link><description>&lt;p&gt;In this post I will explain how to do a Fedora 29 installation with the i3
window manager. It is common to see installation guides for i3, but they assume
that you already have another desktop environment previously installed.&lt;/p&gt;
&lt;p&gt;In this post we will see how to build a fully functional environment from a
minimal installation as I have explained in other publications.&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-medium"&gt;
&lt;h2&gt;Creating an installation medium&lt;/h2&gt;
&lt;div class="section" id="download-the-iso-fedora-everything-netinstall"&gt;
&lt;h3&gt;Download the ISO Fedora Everything Netinstall&lt;/h3&gt;
&lt;p&gt;From the site: &lt;a class="reference external" href="https://alt.fedoraproject.org/"&gt;https://alt.fedoraproject.org/&lt;/a&gt; download the file of the All
section, this is an ISO that works as a means of installation by network that
downloads all the packages that will be part of the system from the Internet,
as well as gives the option to choose which package collections to install,
unlike Lives media whose software selection has been previously defined.&lt;/p&gt;
&lt;p&gt;Download the ISO with wget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-29-1.2.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also download the integrity check file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check the integrity of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-the-installation-media-with-fedora-media-writer"&gt;
&lt;h3&gt;Create the installation media with Fedora Media Writer&lt;/h3&gt;
&lt;p&gt;Fedora Media Writer is available for different operating systems, download the
corresponding one.&lt;/p&gt;
&lt;p&gt;It is very important to create the installation medium with Fedora Media Writer
since this tool guarantees that the installation medium will have support to
boot on computers that have both UEFI or BIOS.&lt;/p&gt;
&lt;p&gt;How it will start will depend on which of the two has the highest priority
during startup. I always use UEFI only, so all my systems are installed in UEFI
mode.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1"&gt;https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Fedora Media Writer is installed on our computer, we connect our USB
memory, run Fedora Media Writer and use the Custom Image option to navigate to
the path where the ISO is, the one we just downloaded, select it, select
carefully the USB memory we will use and record the image in the USB memory.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;I have followed the installation steps described in this previous post, making
sure I have access to a wireless network or a wired network.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html"&gt;https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time I had to use my mobile phone, although it is true I had access to a
wireless network during the installation of the base system (Fedora Custom
Install), after installation the packages collection of does not provide the
network drivers required to access wireless networks since they are not
included in the Custom Install selection.&lt;/p&gt;
&lt;p&gt;That's why I created a wired network via USB with my mobile phone. To make it
work you have to make sure of the following right after the first boot once the
installation finishes:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Log in in the system.&lt;/li&gt;
&lt;li&gt;Connect the USB cable to the computer.&lt;/li&gt;
&lt;li&gt;Connect the other end to the mobile phone.&lt;/li&gt;
&lt;li&gt;Make sure the phone is connected to a wireless network or that the data plan
is activated. As a note, consider that you need at least 800MB of data in
RPM packages that must be downloaded for a minimum installation of Fedora
with support for the graphical environment with i3wm.&lt;/li&gt;
&lt;li&gt;Make sure the phone is in USB or MTP data transfer mode.&lt;/li&gt;
&lt;li&gt;Activate a wired network or Tethered Wired Network from your mobile phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After this, you should have access to the Internet. Check it by pinging Google:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ping 8.8.8.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-configurations"&gt;
&lt;h2&gt;Basic configurations&lt;/h2&gt;
&lt;div class="section" id="configuring-dnf"&gt;
&lt;h3&gt;Configuring dnf&lt;/h3&gt;
&lt;p&gt;The next step is optional, as root, the first thing I do is configure dnf, so
that it uses the most efficient packages mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I disable the use of deltarpm's for future updates. If you prefer to
reduce the amount of data to be downloaded in each of the future updates, skip
this step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I always keep each of the packages from which any program is installed on my
system, including those that are downloaded as part of the updates and to
maintain the packages cache throughout the period I use a Fedora release. This
step is optional and you can skip it if you want:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I proceed to disable a service and a dnf timer. The service makes sure to
refresh the metadata cache to be able to make checks on the versions of the
packages that are in the repos and then check if there are updates available.
The timer is responsible for executing the service periodically.&lt;/p&gt;
&lt;p&gt;I always disable both to avoid annoying bandwidth consumptions and dnf locks
while the cache is refreshed. If you have a limited bandwidth or data plan this
will help you reduce the consumption of it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally to make sure that the changes take effect we must restart:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regenerate-the-cache-and-install-available-updates"&gt;
&lt;h3&gt;Regenerate the cache and install available updates&lt;/h3&gt;
&lt;p&gt;During the installation, you may have omitted to check the option that allows
you to install the most recent version of the mirrors packages, so your system
could be outdated even if you have used the network installation medium.&lt;/p&gt;
&lt;p&gt;To apply the most recent updates and use the most efficient mirrors it is
necessary to regenerate the metadata cache.&lt;/p&gt;
&lt;p&gt;Fedora maintains a cache for each user, one for the root user, another for the
normal user, in my case pionen. So we must regenerate both caches if you want
to perform tasks as administrator or simple queries that do not require
administrator privileges:&lt;/p&gt;
&lt;p&gt;As a normal non-root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, as a normal non-root user, we execute the following commands, where we
pass the statement in quotes as a parameter to the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We check for available updates and enter our root password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are updates available, we apply them with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If updates have been applied, it is recommended to restart the system in order
to make use of the most recent version of all the programs, for example the
kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-i3"&gt;
&lt;h2&gt;Installing i3&lt;/h2&gt;
&lt;p&gt;Now, the step by step with all the requirements for a Fedora 29 minimal
installation with i3wm.&lt;/p&gt;
&lt;p&gt;For it we will make use of packages collections that have been grouped in a
very specialized way. Next commands must be executed as root user.&lt;/p&gt;
&lt;div class="section" id="common-networkmanager-submodules"&gt;
&lt;h3&gt;Common NetworkManager Submodules&lt;/h3&gt;
&lt;p&gt;This group contains NetworkManager submodules that are commonly used, but may
not be wanted in some streamlined configurations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install networkmanager-submodules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="core"&gt;
&lt;h3&gt;Core&lt;/h3&gt;
&lt;p&gt;Smallest possible installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install core&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dial-up-networking-support"&gt;
&lt;h3&gt;Dial-up Networking Support&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install dial-up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fonts"&gt;
&lt;h3&gt;Fonts&lt;/h3&gt;
&lt;p&gt;Fonts packages for rendering text on the desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install fonts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="guest-desktop-agents"&gt;
&lt;h3&gt;Guest Desktop Agents&lt;/h3&gt;
&lt;p&gt;Agents used when running as a virtualized desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install guest-desktop-agents&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hardware-support"&gt;
&lt;h3&gt;Hardware Support&lt;/h3&gt;
&lt;p&gt;This group is a collection of tools for various hardware specific utilities.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install hardware-support&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="multimedia"&gt;
&lt;h3&gt;Multimedia&lt;/h3&gt;
&lt;p&gt;Audio/video framework common to desktops.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install multimedia&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="standard"&gt;
&lt;h3&gt;Standard&lt;/h3&gt;
&lt;p&gt;Common set of utilities that extend the minimal installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install standard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="base-x"&gt;
&lt;h3&gt;base-x&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install base-x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="input-methods"&gt;
&lt;h3&gt;Input Methods&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install input-methods&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-icons-theme"&gt;
&lt;h3&gt;Fedora Icons Theme&lt;/h3&gt;
&lt;p&gt;This package provides the Fedora icons theme.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install fedora-icon-theme&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-icons-theme"&gt;
&lt;h3&gt;GNOME Icons Theme&lt;/h3&gt;
&lt;p&gt;This package provides the default icon theme used by the GNOME Desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install gnome-icon-theme&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-icons-theme-extra"&gt;
&lt;h3&gt;GNOME Icons Theme extra&lt;/h3&gt;
&lt;p&gt;This package provides additional mime type and devices icons for the GNOME
Desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install gnome-icon-theme-extras&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="i3-window-manager"&gt;
&lt;h3&gt;i3 Window Manager&lt;/h3&gt;
&lt;p&gt;Finally we can install the i3 window manager.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install i3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-the-graphical-login-manager"&gt;
&lt;h3&gt;Installing the graphical login manager&lt;/h3&gt;
&lt;p&gt;We will need a graphical login manager where we can pick our user and type our
password so we can get authenticated. From here we can also select other
desktop environments that we might install in the future.&lt;/p&gt;
&lt;p&gt;LightDM is a display manager that welcomes the user and uses the GTK3 tool kit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install lightdm-gtk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xdg-user-dirs"&gt;
&lt;h3&gt;xdg-user-dirs&lt;/h3&gt;
&lt;p&gt;Contains xdg-user-dirs-update that updates and creates the directories at
/home/, according to the predefined values configured by the administrator.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install xdg-user-dirs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-the-graphical-mode-boot"&gt;
&lt;h3&gt;Enabling the graphical mode boot&lt;/h3&gt;
&lt;p&gt;Our system already has all the requirements to work as a graphical environment
using i3 as a window manager. But before it, we need to change some
configurations that make our system boot from runlevel 3 mode or
multi-user.target to runlevel 5 or graphical.target.&lt;/p&gt;
&lt;p&gt;We can fix that with the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl set-default graphical.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also we must enable the system service that provides the option to access the
system via a graphical loging that we just installed, lightdm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl enable lightdm.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we can reboot our system and then after we should be able to get logged
in makeing use of the graphical session manager and our window manager i3.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="first-graphical-session"&gt;
&lt;h2&gt;First graphical session&lt;/h2&gt;
&lt;p&gt;Once logged in, i3 will ask if you want to generate a new config file for i3,
press Enter to answer affirmatively.&lt;/p&gt;
&lt;p&gt;Next it ask which key you want to use as modifier key to trigger the i3
keyboard shortcuts, I always pick the &lt;cite&gt;Win&lt;/cite&gt; or the Windows key, also known as
&lt;cite&gt;Meta key&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="terminal-command-line"&gt;
&lt;h2&gt;Terminal command line&lt;/h2&gt;
&lt;p&gt;This setup does not provides any presintalled tool for web browsing, file
manager, image viewer or pdf reader.&lt;/p&gt;
&lt;p&gt;It is up to you what to use and install.&lt;/p&gt;
&lt;p&gt;â But, how do I install those?&lt;/p&gt;
&lt;p&gt;If you selected the Windows key as modifier for i3, pressing:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + Enter&lt;/p&gt;
&lt;p&gt;You will be able to run a command line terminal. I prefer to use GNOME
Terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then by pressing:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + d&lt;/p&gt;
&lt;p&gt;Trigger &lt;cite&gt;dmenu&lt;/cite&gt; from where you can invoke GNOME Terminal by typing
&lt;cite&gt;gnome-terminal&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;In the next post I will explain my i3 post-install.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="login-out-and-powering-off"&gt;
&lt;h2&gt;Login out and powering off&lt;/h2&gt;
&lt;p&gt;To log out from our session:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + &amp;lt;Shift&amp;gt; + e&lt;/p&gt;
&lt;p&gt;This triggers a dialogue asking for if you want to end your i3 user session.
Click on &lt;cite&gt;Yes, exit i3&lt;/cite&gt; and then while on &lt;cite&gt;lightdm&lt;/cite&gt; press:&lt;/p&gt;
&lt;p&gt;&amp;lt;Alt&amp;gt; + &amp;lt;F4&amp;gt;&lt;/p&gt;
&lt;p&gt;To turn off your system.&lt;/p&gt;
&lt;p&gt;I hope this post help you to achive a minimal install. This is a good and cheap
way to setup virtual machines, without expending lot of resources or even for a
working environemt for ancient devices with minimum and limited resources.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 29 Nov 2018 02:53:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2018-11-29:/site/posts/2018/11/29/i3.html</guid><category>floss</category><category>dnf</category><category>fc29</category><category>fedora</category><category>postinstall</category></item><item><title>KeePassXC, the password manager</title><link>https://porfiriopaiz.github.io/site/posts/2017/11/17/keepassxc-password-manager.html</link><description>&lt;p&gt;KeePassXC is one of the first programs that I install after the first boot of
any fresh install.&lt;/p&gt;
&lt;p&gt;In the next post I will show how to install KeePassXC on Fedora and Debian, its
use and how it makes easier the management of hundreds of accounts and the
associated passwords, and how to generate secure passwords with the highest
levels of entropy.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="section" id="fedora"&gt;
&lt;h3&gt;Fedora&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install keepassxc&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install keepassx&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-password-database"&gt;
&lt;h2&gt;Create a password database&lt;/h2&gt;
&lt;p&gt;The first thing we must do is create our first database in which we will keep
all the passwords that we generate for each account.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Execute KeePassXC:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-38-49.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a new database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-31-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Assign a name to the &lt;cite&gt;*.kdbx&lt;/cite&gt; file, our database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-02-29.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It is time to assign a password, this will be the master password that We
will use to decrypt the file &lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, we click on &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-09-07.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To add a new account and its respective password, click on the icon of the
&lt;cite&gt;Key&lt;/cite&gt; with a green arrow:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-20_16-37-51.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add a title to identify what this password corresponds to, add the username
to which the password We are going to create will belong:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-15-14.png" /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Then click on the black dots icon, notice how a new menu with options is
displayed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Click on the password tab, increase the amount of characters desired for
our password, the more characters the higher the entropy level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In the &lt;strong&gt;Characters Types&lt;/strong&gt; section, We can select the different groups of
characters We want to be present in our password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Characters from &lt;cite&gt;A&lt;/cite&gt; to &lt;cite&gt;Z&lt;/cite&gt;, in capital letters: &lt;cite&gt;A-Z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;cite&gt;a&lt;/cite&gt; to &lt;cite&gt;z&lt;/cite&gt;, in lower case: &lt;cite&gt;a-z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Numbers: &lt;cite&gt;0-9&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Special characters: &lt;cite&gt;/*_ ...&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Extended_ASCII"&gt;Extended ASCII&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I marked them all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;With the mouse scroll go down and mark with a check:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Exclude look alike characters&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pick characters from every group&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Finally click &lt;tt class="docutils literal"&gt;Generate&lt;/tt&gt; to generate the password with the combination
of selected characters and then &lt;tt class="docutils literal"&gt;Copy&lt;/tt&gt; to copy the password to the
clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-17-30.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Now pressing &lt;cite&gt;Ctrl-v&lt;/cite&gt; paste the password in the &lt;strong&gt;Password&lt;/strong&gt; field and
&lt;cite&gt;Ctrl-V&lt;/cite&gt; in &lt;strong&gt;Repeat&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;By clicking on the &lt;cite&gt;eye&lt;/cite&gt; icon we can reveal the password we have generated,
copied and pasted in the &lt;strong&gt;Password&lt;/strong&gt; and &lt;strong&gt;Repeat&lt;/strong&gt; fields, click &lt;cite&gt;Apply&lt;/cite&gt;
and then &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-31.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note the asterisk in the upper border of the window at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, this means that the changes have not been saved in the
database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-58.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Click on the icon of the blue file to save the changes in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-21-04.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note that the asterisk at the top edge of the screen at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt; has disappeared, this means that the changes have already
been saved in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-19-03.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="useful-keyboard-shortcuts"&gt;
&lt;h2&gt;Useful keyboard shortcuts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;b&lt;/strong&gt; Copy the user to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;c&lt;/strong&gt; Copy the user's password to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;e&lt;/strong&gt; Open the menu to make modifications to the different accounts
that we have in our database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;n&lt;/strong&gt; Allows you to add a new account to the database.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="self-writing-shortcut"&gt;
&lt;h2&gt;Self-writing shortcut&lt;/h2&gt;
&lt;p&gt;This keyboard shortcut is my favorite. It allows you to write the user and
password of an entry in our database directly to the page where that user and
password is used, so it is not necessary to use three shortcuts to achieve the
same result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order for it to work as it should, both KeePassXC and the field where the
user and password are introduced, must be a shot away from &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By this I mean that if you press &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; you should move from the
&lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window to the browser window, for example:&lt;/p&gt;
&lt;p&gt;Note that the account has a URL linked:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-56-04.png" /&gt;
&lt;p&gt;Go to our &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt;, we select the entry of our database that corresponds
to the account in which we want to log in.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;u&lt;/strong&gt; to open the tab in which you will log in, this will open the
browser that we have configured as our default Web Browser, this page is
configured to locate the keyboard entry in the user field.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-35-24.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atl&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; to select the &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window back:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;And then, making sure We still have selected the same entry in the database,
press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_17-01-06.png" /&gt;
&lt;p&gt;The final result should make &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; return to the browser, insert the
user, jump to the next field, insert the password, to finally and automatically
&amp;quot;press&amp;quot; &lt;tt class="docutils literal"&gt;Log In&lt;/tt&gt; and log in.&lt;/p&gt;
&lt;p&gt;I hope this post is useful for you.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Fri, 17 Nov 2017 19:10:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-11-17:/site/posts/2017/11/17/keepassxc-password-manager.html</guid><category>floss</category><category>debian</category><category>fc27</category><category>fedora</category><category>keepassxc</category><category>password</category></item><item><title>Fedora 26 Custom Operating System post install</title><link>https://porfiriopaiz.github.io/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</link><description>&lt;p&gt;On the last post I explained how make a Minimal install of Fedora 25, months
has passed by since the last post and Fedora 26 was released, following the
same steps I installed it on my laptop and next I will document my postinstall.&lt;/p&gt;
&lt;p&gt;Given this is a minimal install, the set of packages installed does not
provides support for Wireless Network Cards. It is true that during the
installation process Anaconda provides such support, but once you have
installed the minimal set of packages, these does not provides the required
drivers, for this matter I must get my laptop connected to a Wired Network.&lt;/p&gt;
&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration&lt;/h2&gt;
&lt;p&gt;After checking the Wired Network, first I did was to edit dnf's configuration
file and add the next lines to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way I make sure &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; will always use the more efficient mirror; will
not use &lt;cite&gt;*.drpm's&lt;/cite&gt; for upgrades, instead it will always download &lt;cite&gt;*.rpm's&lt;/cite&gt;; and
will keep any package it downloads in its cache.&lt;/p&gt;
&lt;p&gt;Now let's reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disablle-dnf-makecache-service-and-dnf-makecache-timer"&gt;
&lt;h2&gt;Disablle dnf-makecache.service and dnf-makecache.timer&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; has this service and timer that annoys me, both makes sure of keeping
the package metadata cache up to date with a certain frequence, this is
something I like to do when I want and when I need it, not at &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; please,
so this behaviour is fixed with the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.timer&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's reboot again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rebuilding-packages-metadata-cache-s"&gt;
&lt;h2&gt;Rebuilding packages metadata cache's&lt;/h2&gt;
&lt;p&gt;Once &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration file is customized, service and timer are disabled,
I clean the old cache and rebuild it. This time the commands are run as normal
user, Fedora keeps two differents cache: one for the normal user and other for
the root user:&lt;/p&gt;
&lt;p&gt;This will rebuild packages metadata cache for my normal user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will rebuild packages metadata cache for the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="available-upgrades"&gt;
&lt;h2&gt;Available Upgrades&lt;/h2&gt;
&lt;p&gt;During the installation it is possible to mark a checkbox for the option to
download and install the packages with the most recent version, to verify if
there aren't any upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To download and apply the upgrades if availables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the upgrade let's reboot to make use of latest version of any package if
upgraded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="workstation-product-environment-installation"&gt;
&lt;h2&gt;Workstation Product Environment Installation&lt;/h2&gt;
&lt;p&gt;On my laptop I use GNOME Shell as desktop environment, to install it I make use
of a package group that provides all the required packages to make of this
Fedora Custom Operating System install a Fedora Workstation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf group install workstation-product-environment&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="graphical-boot-mode"&gt;
&lt;h2&gt;Graphical Boot Mode&lt;/h2&gt;
&lt;p&gt;After downloading and installing all the packages, We must change the default
&lt;cite&gt;init&lt;/cite&gt; mode from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;multi-user.target&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;graphical.target&lt;/tt&gt;, otherwise, when
We reboot our system will not start in graphical mode.&lt;/p&gt;
&lt;p&gt;Also We must enable the service for the graphical login manager, if no, despite
enabling the graphical mode our login will still a text based prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl set-default graphical.target&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl enable gdm.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If nothing goes wrong, you might be running Fedora 26 Workstation with GNONE
Shell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fixing-nautilus-behaviour"&gt;
&lt;h2&gt;Fixing Nautilus Behaviour&lt;/h2&gt;
&lt;p&gt;Before opening any other application, I like to fix how Nautilus sorts files, I
like to have them sorted by type or file extension:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.nautilus.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way when opening Nautilus it will show the files sorted by extension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repositories"&gt;
&lt;h2&gt;Repositories&lt;/h2&gt;
&lt;div class="section" id="enabling-rpmfusion"&gt;
&lt;h3&gt;Enabling RPMFusion:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refresh the cache, this will download the RPMFusion packages metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-google-chrome-s-repository"&gt;
&lt;h3&gt;Enabling Google Chrome's repository:&lt;/h3&gt;
&lt;p&gt;I used to enable Google Chrome repository as explained on this post:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/"&gt;https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But Mayorga presented me a more simple method, basically you just have to
download Google Chrome &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package, install it from the command line
indicating the path to the &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package and this by itself will add the
&lt;cite&gt;*.repo&lt;/cite&gt; file to the path &lt;tt class="docutils literal"&gt;/etc/yum.repos.d/&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/Downloads&lt;/span&gt;

&lt;span class="go"&gt;wget -N -t 0 -c https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install google-chrome-stable_current_x86_64.rpm&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-tracker"&gt;
&lt;h2&gt;Disabling Tracker&lt;/h2&gt;
&lt;p&gt;Before copying back any file from my back up's, hay must disable the annoying
&lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; and all his friends:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install tracker-preferences&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;mkdir ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cp /etc/xdg/autostart/tracker* ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cd ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;sed -i &amp;#39;s/X-GNOME-Autostart-enabled=true/X-GNOME-Autostart-enabled=false/&amp;#39; tracker*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's check &lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we make a &lt;tt class="docutils literal"&gt;hard reset&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker reset --hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-gnome-software-and-packagekit-download-updates"&gt;
&lt;h2&gt;Disabling GNOME Software and PackageKit download-updates&lt;/h2&gt;
&lt;p&gt;GNOME Software downloads metadata and upgrades for the system in background, to
disable it We execute the next commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.software download-updates false&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl mask packagekit.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should stop the autodownload upgrades and the PackageKit service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="libraries-and-development-tools"&gt;
&lt;h2&gt;Libraries and Development Tools&lt;/h2&gt;
&lt;p&gt;Now install the package groups that provides the required software and
libraries for compiling other software from source code, as well as making of
&lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; and &lt;cite&gt;IDE&lt;/cite&gt;, on another post I will explain how to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install c-development&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-libs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install fedora-packager&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install rpm-development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install automake gcc gcc-c++ kernel-devel cmake&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python-devel python3-devel&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install monodevelop&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install golang&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install nodejs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install rust&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install cargo&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-virtualenv&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-pip&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally the spellcheckers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-en&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the next post I will make shorts reviews on the other tools I use on Fedora.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 31 Aug 2017 16:26:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-08-31:/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</guid><category>floss</category><category>dnf</category><category>fc26</category><category>fedora</category><category>postinstall</category></item><item><title>This was Fedora at CS50x.ni</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/31/this-was-fedora-at-cs50x.ni.html</link><description>&lt;p&gt;On Tuesday, March 14th, the &lt;a class="reference external" href="http://fedora.org.ni/"&gt;Fedora Nicaragua&lt;/a&gt;
community and the &lt;a class="reference external" href="http://code-fu.net.ni/"&gt;CS50x.ni&lt;/a&gt; staff, with the support
from &lt;a class="reference external" href="http://fundacionuno.org/en/"&gt;FundaciÃ³n UNO&lt;/a&gt; and the Fedora Project, we
had the opportunity to meet to see a series of lectures in which the speakers
shared their experience using Free Software, the importance and benefits of the
different software tools used in the CS50x.ni course. The lectures were aimed
for anyone who is taking the CS50x.ni course currently, or who wants to take it
in the future or people interested in learning more about free software and
more specifically about the Fedora Project.&lt;/p&gt;
&lt;p&gt;The meeting was in the basement of the north wing of the Rigoberto LÃ³pez PÃ©rez
building of the National University of Engineering in the SimÃ³n BolÃ­var Campus,
in the classrooms dedicated to the CS50x.ni (Coding) project.&lt;/p&gt;
&lt;p&gt;The talks began at 9:00 AM, as the first presentation we had a &lt;a class="reference external" href="https://fedorapeople.org/~mayorga/slides/this_is_fedora.odp"&gt;&amp;quot;Fedora Project
Overview&amp;quot;&lt;/a&gt;
facilitated by &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Mayorga"&gt;Eduardo Mayorga&lt;/a&gt;.  Eduardo a Fedora Project
Ambassador, Package Maintainer and is currently part of the group of students
who are participating in the course CS50x.ni, explained to us what the Fedora
Project is about, its mission and vision as a Free Software project, and also
gave us a look at what is being part of this community both locally and
internationally.&lt;/p&gt;
&lt;img alt="Eduardo Mayorga speaking." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/mayorga.jpg" /&gt;
&lt;p&gt;The second talk was given by &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Yn1v"&gt;Neville Cross&lt;/a&gt;, Founder and Leader of Fedora
Community in Nicaragua. In his talk Neville motivated the attendees to know
more about the importance of mastering the command line tools shipped in all
the GNU/Linux distributions. Neville made a demonstration on the use of &lt;a class="reference external" href="https://yn1v.fedorapeople.org/Slides/ssh_una_presentacion_corta.odp"&gt;SSH
remote management tools&lt;/a&gt; in
which he showed how to access a computer connected in the same network from a
second computer through a command line and talked about some tools that allow
monitoring resources, all this remotely.&lt;/p&gt;
&lt;img alt="Neville, Fedora Nicaragua Leader." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/yn1v.jpg" /&gt;
&lt;p&gt;The third talk was facilitated by &lt;a class="reference external" href="http://reactivated.net/"&gt;Daniel Drake&lt;/a&gt;.
Daniel is an operating system developer originally from the UK settled in
Nicaragua for 8 years. Daniel came as part of Project One Laptop per Child, the
talk was related to &lt;a class="reference external" href="https://drive.google.com/uc?export=download&amp;amp;id=0ByFPl6lV1b_MRHROTmFQTkQ1V3c"&gt;&amp;quot;Employment Opportunities related to Linux after CS50&amp;quot;&lt;/a&gt;,
in which Daniel shared his experiences and advice acquired over 15 years of
experience as a developer and contributor of Free Software projects such as
&lt;a class="reference external" href="https://www.openhub.net/p/gnome/contributors/16149077045725"&gt;The GNOME Project&lt;/a&gt;.  Daniel has
also been a leader of the development team &lt;a class="reference external" href="https://www.openhub.net/p/linux/contributors/13490492289501"&gt;Linux Kernel&lt;/a&gt; for the &lt;a class="reference external" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/log/?qt=author&amp;amp;q=daniel+drake"&gt;Gentoo
distribution&lt;/a&gt;,
and shared tips on being part of Free Software projects and emphasized the
benefits of contributing to projects through the experience one acquires by
working with talented people from all over the world.&lt;/p&gt;
&lt;img alt="dsd sharing his experiences as Kernel Developer." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/dsd.jpg" /&gt;
&lt;p&gt;In the last block of talks &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Porfiriopaiz"&gt;Porfirio PÃ¡iz&lt;/a&gt;, contributor of the Fedora
Projet and student of the CS50x.ni course, gave 3 examples of how the Fedora
distribution can be a very useful tool for students of the CS50x.ni with
demonstrations on the use of tools such as the &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/comenzando_con_git.odp"&gt;&amp;quot;Getting started with Git&amp;quot;&lt;/a&gt; talk
where he made a small demo about the workflow for managing code version control
system. In a second talk he did, &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/breve_introduccion_a_docker.odp"&gt;&amp;quot;A brief introduction to Docker&amp;quot;&lt;/a&gt;
he talked to us about how this tool is being used in the CS50x.ni to provide an
easy and simple programming environment for those who are taking the course.
And in a third talk he shared about how to set up a &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/estacion_de_trabajo.odp"&gt;&amp;quot;Development Workstation
with Fedora&amp;quot;&lt;/a&gt;.  In
this talk Porfirio spoke about one of the products offered by the Fedora
Project for all those who are focused on achieving a work environment with the
objective of materializing their software project ideas using Fedora as a basis
to build them, making use of the different programming languages available
between the Fedora software repositories, as well as other tools.&lt;/p&gt;
&lt;img alt="Me talking about git, Docker, and the Fedora Workstation." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/porfiriopaiz.jpg" /&gt;
&lt;p&gt;And as a final surprise, the members of Fedora Nicaragua, together with the
staff of the CS50x.ni, shared with the audience a pleasant time full of talks,
exchanges of ideas and experiences accompanied by cold drinks and delicious
pizza, which was kindly sponsored by the Fedora Project.&lt;/p&gt;
&lt;img alt="Group picture." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/fedora_at_cs50xni.jpg" /&gt;
&lt;p&gt;The Fedora Project Users and Contributors Community are keen to continue with
these sessions of talks and conversations focused on topics that are of great
help and interest to those who are entering the wonderful world of programming
thanks to the CS50x.ni.&lt;/p&gt;
&lt;p&gt;Sorry for the late post here is a happy Hot Dog:&lt;/p&gt;
&lt;img alt="A happy hotdog." class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/beefy_miracle.gif" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Fri, 31 Mar 2017 15:07:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-31:/site/posts/2017/03/31/this-was-fedora-at-cs50x.ni.html</guid><category>floss</category><category>cs50x.ni</category><category>events</category><category>fedora</category></item><item><title>Anaconda and LVM on LUKS</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/30/anaconda-and-lvm-on-luks.html</link><description>&lt;p&gt;I previously upgraded my laptop from Fedora 22 to Fedora 23 after F22 had been
in its End of Life state for over six months. Notably, you can efficiently
reuse partitions originally configured for F22, ensuring they seamlessly
accommodate the installation of the new Fedora release while preserving all
files within the Logical Volume designated as &lt;tt class="docutils literal"&gt;/home&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In this post, I'll guide you through achieving this without compromising the
integrity of our data or other operating systems installed on your
Desktop/Laptop.&lt;/p&gt;
&lt;p&gt;As discussed in the earlier post, while upgrades are an option, I'm personally
inclined towards fresh installs. Resetting everything to its prior state brings
a sense of satisfaction. Moreover, it places less strain on the computer,
downloading only the essential packages for a functional system. Additional
software can be installed on demand later.&lt;/p&gt;
&lt;p&gt;Once a proper backup of all our system files is secured, we can embark on the
installation process without the nagging fear of the unknown. After all, you
never truly know what could go wrong until it does â that's the beauty of it!
XD&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-media"&gt;
&lt;h2&gt;Creating an Installation Media&lt;/h2&gt;
&lt;p&gt;Our initial step involves crafting an installation medium, and to kickstart
this process, we need to download the Fedora 25 ISO file. For consistency, I've
been relying on the netinstall image since Fedora 21, as highlighted in Chapter
2 of the &lt;a class="reference external" href="https://docs.fedoraproject.org/en-US/Fedora/25/html/Installation_Guide/chap-downloading-fedora.html"&gt;Fedora Installation Guide&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The netinstall image boots directly into the installation environment, and
uses the online Fedora package repositories as the installation source.
With a netinstall image, you can select a wide variety of packages to
create a customized installation of Fedora.&lt;/p&gt;
&lt;p&gt;The Fedora Server netinstall image is a universal one, and can be used to
install any Fedora flavor or your own set of favorite packages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="downloading-the-image-everything-netinstall"&gt;
&lt;h3&gt;Downloading the image Everything netinstall&lt;/h3&gt;
&lt;p&gt;I prefer utilizing the netinstall ISO image of &lt;a class="reference external" href="https://alt.fedoraproject.org/en/"&gt;Fedora Everything&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, it seems that the Everything netinstall image lacks a torrent
seeder for download, as indicated by the absence on the &lt;a class="reference external" href="https://torrent.fedoraproject.org/"&gt;Fedora torrent page&lt;/a&gt;. As a result, we'll have to resort to
the conventional method of direct download, and for this, we'll leverage the
command line.&lt;/p&gt;
&lt;p&gt;For 32-bit systems, employ the following command to download the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/iso/Fedora-Everything-netinst-i386-25-1.3.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For 64-bit systems, employ the following command to initiate the image
download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/25/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-25-1.3.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a breakdown of the command options:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;cite&gt;-N&lt;/cite&gt; ensures the downloaded file retains the original time and date stamp
from its initial upload to the servers.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;-t 0&lt;/cite&gt; serves as a safety net; if the download encounters connectivity
issues, it will automatically attempt to reconnect. Leaving the time at &lt;cite&gt;0&lt;/cite&gt;
ensures an immediate reconnection.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;-c&lt;/cite&gt; signals that the download should resume from the byte where it was
left pending in case of interruptions. This precaution is particularly useful
for scenarios with less stable network connections.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This provides a small contingency measure in the event of an unstable network.&lt;/p&gt;
&lt;p&gt;Additionally, we can verify the integrity of the downloaded image using the
checksum file. Simply download the checksum file and save it in the same
directory as the ISO image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://alt.fedoraproject.org/es/static/checksums/Fedora-Everything-25-1.3-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-25-1.3-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-the-iso-image-on-a-usb"&gt;
&lt;h3&gt;Writing the ISO image on a USB&lt;/h3&gt;
&lt;p&gt;To write the ISO image onto a USB drive, we'll employ the &lt;strong&gt;Fedora Media
Writer&lt;/strong&gt; tool. If you're on Windows, you can install Fedora Media Writer using
the following link:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://getfedora.org/fmw/FedoraMediaWriter-win32-4.0.7.exe"&gt;https://getfedora.org/fmw/FedoraMediaWriter-win32-4.0.7.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For MacOS users, the link is:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://getfedora.org/fmw/FedoraMediaWriter-osx-4.0.7.dmg"&gt;https://getfedora.org/fmw/FedoraMediaWriter-osx-4.0.7.dmg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're using Fedora 23 or a later version, you can install Fedora Media
Writer with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install mediawriter&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before launching Fedora Media Writer, it's recommended to disconnect any
removable storage devices currently plugged into your system. This precaution
helps avoid potential confusion. Once that's done, connect the USB memory you
intend to use and proceed to run Fedora Media Writer.&lt;/p&gt;
&lt;p&gt;The steps are straightforward:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Choose &amp;quot;Custom image.&amp;quot;&lt;/li&gt;
&lt;li&gt;Navigate to the directory where the ISO image was downloaded.&lt;/li&gt;
&lt;li&gt;Select the USB drive.&lt;/li&gt;
&lt;li&gt;Click on &lt;cite&gt;Write to disk&lt;/cite&gt;.&lt;/li&gt;
&lt;li&gt;Enter your user password if you belong to the &lt;cite&gt;wheel&lt;/cite&gt; group, or provide the
&lt;cite&gt;root&lt;/cite&gt; password if you are not in the admins group.&lt;/li&gt;
&lt;li&gt;That's it!&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="booting-from-usb"&gt;
&lt;h3&gt;Booting from USB&lt;/h3&gt;
&lt;p&gt;In configuring my laptop, I've set it to start up in &lt;cite&gt;UEFI mode&lt;/cite&gt; while keeping
the trusty &lt;cite&gt;Secure Boot&lt;/cite&gt; feature engaged.&lt;/p&gt;
&lt;p&gt;When crafting the installation media using Fedora Media Writer, it serves as a
reliable assurance that it'll seamlessly adapt to various scenarios.&lt;/p&gt;
&lt;p&gt;To access the Boot Manager on my laptop, a simple press of the &lt;strong&gt;Enter&lt;/strong&gt; key
during the appearance of the &lt;strong&gt;Lenovo&lt;/strong&gt; logo is indicative of the system's
initiation in UEFI mode.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="starting-the-fedora-25-installation-process"&gt;
&lt;h2&gt;Starting the Fedora 25 Installation Process&lt;/h2&gt;
&lt;p&gt;In this section of the post, I'll provide screenshots along with brief
descriptions.&lt;/p&gt;
&lt;p&gt;Let's start with the Internet connection.&lt;/p&gt;
&lt;p&gt;The installation media created from netinstall images relies solely on an
Internet connection, which can be established either through a wired connection
via the RJ45 port (Ethernet) or wirelessly using our WiFi card. In my case, the
netinstall setup effortlessly detects both network cards. Fedora netinstall
includes a range of drivers that enable the utilization of certain network
cards. If your network card isn't detected, it may be due to the device not
being supported by Fedora, typically for legal reasons. Fedora strictly
incorporates FLOSS (Free/Libre and Open Source Software) drivers or drivers
whose manufacturers explicitly outline their terms of use and distribution
policy.&lt;/p&gt;
&lt;p&gt;My T440p is equipped with an &lt;a class="reference external" href="https://ark.intel.com/products/60019/Intel-Ethernet-Connection-I217-LM"&gt;IntelÂ® Ethernet Wired Network Card Connection
I217-LM&lt;/a&gt; and
an &lt;a class="reference external" href="http://ark.intel.com/products/75174/Intel-Wireless-N-7260"&gt;IntelÂ® Wireless-N 7260 Wireless Network Card&lt;/a&gt;. During
installation, both cards were promptly detected. As I have access only to WiFi
networks in the office, I opted to use the Wireless card.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0000.png" /&gt;
&lt;p&gt;In this initial image of the installation summary, our first step is to
establish a connection to any of the available networks, be it through a wired
or WiFi network. To achieve this, click on &lt;cite&gt;NETWORK &amp;amp; HOST NAME&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Next, choose Wireless and enable the corresponding network card. From the list
of available networks, select one, alter the name of your Desktop/Laptop as
desired, and then click &lt;cite&gt;Apply&lt;/cite&gt;...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0002.png" /&gt;
&lt;p&gt;Click &lt;cite&gt;Done&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;LOCALIZATION&lt;/cite&gt; section, I included the option for &lt;tt class="docutils literal"&gt;French
(International, AltGr dead keys)&lt;/tt&gt; while removing &lt;tt class="docutils literal"&gt;English (US)&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0005.png" /&gt;
&lt;p&gt;You can perform a quick test by pressing the &lt;cite&gt;AltGr + a&lt;/cite&gt; key and other vowels
to observe the accentuated vowels.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;TIME &amp;amp; DATE&lt;/cite&gt; section, I consistently enable &lt;cite&gt;Network Time&lt;/cite&gt;...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0007.png" /&gt;
&lt;p&gt;Additionally, we choose our &lt;cite&gt;Region&lt;/cite&gt; and &lt;cite&gt;City&lt;/cite&gt;, and based on this selection,
the time and date are automatically set.&lt;/p&gt;
&lt;p&gt;So far, we've configured the following sections:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0008.png" /&gt;
&lt;p&gt;Now, let's proceed to configure the &lt;cite&gt;SOFTWARE&lt;/cite&gt; section, focusing on the
&lt;cite&gt;INSTALLATION SOURCE&lt;/cite&gt;...&lt;/p&gt;
&lt;p&gt;In this section, we check &lt;cite&gt;On the Network:&lt;/cite&gt; and choose &lt;cite&gt;Closest mirror&lt;/cite&gt;.
Additionally, ensure to uncheck the &lt;cite&gt;Updates&lt;/cite&gt; option...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0009.png" /&gt;
&lt;p&gt;This setup ensures that the installer utilizes online repositories to download
the necessary packages for installation. It dynamically selects the nearest
server, which may not necessarily be the closest geographically but is
typically the most efficient with optimal data transfer times.&lt;/p&gt;
&lt;p&gt;By leaving &lt;cite&gt;Updates&lt;/cite&gt; unchecked, we instruct the installer to deploy the latest
available packages from the repository.&lt;/p&gt;
&lt;p&gt;We patiently wait for the download of package group metadata as the &lt;cite&gt;SOFTWARE
SELECTION&lt;/cite&gt; section depends on this step.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0011.png" /&gt;
&lt;p&gt;In the &lt;cite&gt;SOFTWARE SELECTION&lt;/cite&gt; section, I opted for &lt;cite&gt;Fedora Custom Operating
System&lt;/cite&gt;, representing a minimal package selection. This choice excludes a
graphical environment, including only a few essential package groups, such as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Environment Group: Fedora Custom Operating System&lt;/span&gt;
&lt;span class="go"&gt; Environment-Id: custom-environment&lt;/span&gt;
&lt;span class="go"&gt; Description: Basic building block for a custom Fedora system.&lt;/span&gt;
&lt;span class="go"&gt; Mandatory Groups:&lt;/span&gt;
&lt;span class="go"&gt;   Core&lt;/span&gt;
&lt;span class="go"&gt; Optional Groups:&lt;/span&gt;
&lt;span class="go"&gt;   Guest Agents&lt;/span&gt;
&lt;span class="go"&gt;   Standard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we've arrived at the &lt;cite&gt;SYSTEM&lt;/cite&gt; section. Choose &lt;cite&gt;INSTALLATION
DESTINATION&lt;/cite&gt;. Under &lt;cite&gt;Device Selection&lt;/cite&gt;, in &lt;cite&gt;Local Standard Disk&lt;/cite&gt;, select the
hard disk containing the existing Fedora installation with the partitions you
wish to reuse.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;Other Storage Options&lt;/cite&gt; section, within the &lt;cite&gt;Partitioning&lt;/cite&gt; category,
select &lt;cite&gt;I will Configure partitioning&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;The subsequent menu is displayed below, where we'll click on &lt;cite&gt;Unknown&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0013.png" /&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once we click &lt;cite&gt;Unknown&lt;/cite&gt; the other existing partitions will be displayed. we
will focus on the partitions &lt;strong&gt;sda2&lt;/strong&gt;, &lt;strong&gt;sda9&lt;/strong&gt; and &lt;strong&gt;sda10&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0014.png" /&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's a detailed breakdown:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;sda2&lt;/strong&gt;: This is the ESP (EFI System Partition), housing other *.efi files.
Each OS installed in UEFI mode has an *.efi file linked to our GRUB. It
enables us to choose the OS during the initial seconds after turning on our
computer. &lt;strong&gt;Never mark&lt;/strong&gt; this partition for formatting. &lt;strong&gt;sda2&lt;/strong&gt; will be
mounted on &lt;cite&gt;/boot/efi&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sda9&lt;/strong&gt;: This partition will be mounted in &lt;cite&gt;/boot&lt;/cite&gt; and should not be
encrypted. It contains crucial files needed for the OS to load, such as the
kernel. Encrypting this partition would prevent the loading of kernels during
boot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sda10&lt;/strong&gt;: This partition is encrypted using LUKS and houses the &lt;cite&gt;Volume
Group&lt;/cite&gt;, which, in turn, contains other logical volumes serving as &lt;cite&gt;/&lt;/cite&gt;, &lt;cite&gt;/home&lt;/cite&gt;,
and &lt;cite&gt;swap&lt;/cite&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once &lt;strong&gt;sda10&lt;/strong&gt; is selected, you'll be prompted for the encryption password
granting access to the &lt;cite&gt;Volume Group&lt;/cite&gt;, which includes the mentioned partitions.
This section reflects the existing Fedora 23 installation, originally the F22
that we updated in the previous post.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0015.png" /&gt;
&lt;p&gt;Click on &lt;cite&gt;Fedora Linux 23 for x86_64&lt;/cite&gt;, and you'll be able to view the logical
volumes slated for reuse.&lt;/p&gt;
&lt;p&gt;When selecting &lt;cite&gt;/home&lt;/cite&gt;, ensure to allocate a &lt;cite&gt;Mount Point&lt;/cite&gt; for this Logical
Volume. Make certain that the &lt;cite&gt;Reformat&lt;/cite&gt; checkbox is &lt;strong&gt;not&lt;/strong&gt; selected, then
click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0017.png" /&gt;
&lt;p&gt;In the subsequent image, you'll observe that the logical volume
&lt;cite&gt;fedora_lilit-home&lt;/cite&gt; has been reallocated to the &lt;cite&gt;New Fedora 25 Installation&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0018.png" /&gt;
&lt;p&gt;Choose &lt;cite&gt;/boot/efi&lt;/cite&gt;, equivalent to the ESP partition located in &lt;strong&gt;sda2&lt;/strong&gt;. Ensure
to assign a &lt;cite&gt;Mount Point&lt;/cite&gt; for this Logical Volume, which, in this case, would
be &lt;cite&gt;/boot/efi&lt;/cite&gt;. Confirm that the checkbox &lt;cite&gt;Reformat&lt;/cite&gt; is &lt;strong&gt;not&lt;/strong&gt; selected, then
click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0019.png" /&gt;
&lt;p&gt;Choose &lt;cite&gt;/&lt;/cite&gt;. This logical volume previously served as the &lt;cite&gt;/&lt;/cite&gt; for F23, so for
reuse, we need to mark it for formatting. Assign &lt;cite&gt;/&lt;/cite&gt; as the mount point, select
the file system as ext4, ensure that the checkbox &lt;cite&gt;Reformat&lt;/cite&gt; &lt;strong&gt;is&lt;/strong&gt; marked, and
then click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0023.png" /&gt;
&lt;p&gt;Select &lt;cite&gt;swap&lt;/cite&gt;, mark the checkbox and click &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0025.png" /&gt;
&lt;p&gt;Opt for &lt;cite&gt;/boot&lt;/cite&gt;. This is where the F23 kernels were stored, so to repurpose
this partition, formatting is necessary. Allocate the &lt;cite&gt;Mount Point&lt;/cite&gt; as &lt;cite&gt;/boot&lt;/cite&gt;,
check the &lt;cite&gt;Reformat&lt;/cite&gt; option, specify the file system as ext4 (in my case), and
click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0030.png" /&gt;
&lt;p&gt;Click on &lt;cite&gt;Done&lt;/cite&gt; and confirm the impending changes.&lt;/p&gt;
&lt;p&gt;To conclude, simply click on &lt;cite&gt;Begin Installation&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0032.png" /&gt;
&lt;p&gt;Assign both a user password and a ROOT password. Now, patiently wait for the
download and installation of the packages to complete.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0037.png" /&gt;
&lt;p&gt;Once everything is set, click on &lt;cite&gt;Reboot&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0053.png" /&gt;
&lt;p&gt;In my case, I had to perform a series of post-installation steps, which I'll
elaborate on in the next post.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 30 Mar 2017 21:00:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-30:/site/posts/2017/03/30/anaconda-and-lvm-on-luks.html</guid><category>floss</category><category>anaconda</category><category>fc25</category><category>fedora</category><category>luks</category><category>lvm</category></item><item><title>Upgrading from Fedora 22 to Fedora 23</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html</link><description>&lt;p&gt;From May 26th, 2015, to November 22nd, 2016, I was rocking Fedora 22 on my
Lenovo ThinkPad T440p â a solid year and a half of tech bliss. However, on July
19th, 2016, Fedora 22 gracefully entered its &lt;a class="reference external" href="https://fedoraproject.org/wiki/End_of_life"&gt;End of Life (EOL)&lt;/a&gt; phase. This translates to no
more security or maintenance updates coming our way, signaling the friendly
nudge to upgrade to a newer, stable version.&lt;/p&gt;
&lt;p&gt;So, in this post, I'm spilling the beans on how to smoothly transition to
Fedora 23 using the ever-reliable dnf package manager. Let's keep that Fedora
love alive and kicking! ð&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Following a year and a half of utilizing Fedora 22, the package cache had
accumulated roughly 10GB of space on my hard drive.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_16-05-06.png" /&gt;
&lt;p&gt;To instruct dnf to retain the downloaded packages in the cache, you need to
append the following line to the dnf configuration file located at
&lt;tt class="docutils literal"&gt;/etc/dnf/dnf.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;echo &amp;#39;keepcache = true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="upgrading-fedora-23"&gt;
&lt;h2&gt;Upgrading Fedora 23&lt;/h2&gt;
&lt;div class="section" id="prerequisites-for-upgrading"&gt;
&lt;h3&gt;Prerequisites for upgrading&lt;/h3&gt;
&lt;p&gt;Firstly, it's crucial to ensure ample space on our &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; partition. This is
particularly important because the update process entails downloading the
latest version of every single package installed in our system. While there's a
chance that our cache might be brimming, it's advisable to clear out stored
packages to free up space, just in case it's needed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we proceed, it's essential to verify that our system is up-to-date with
the latest available updates from the enabled repositories. To accomplish this,
we need to rebuild the packages' metadata cache and subsequently apply the
recent upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-23-27.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-dnf-plugin-system-upgrade-plugin"&gt;
&lt;h3&gt;Install the dnf-plugin-system-upgrade plugin&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DNF System Upgrade&lt;/strong&gt; facilitates the transition to a newer version of Fedora,
employing a mechanism akin to offline package updates. Packages are downloaded
while the system operates normally, followed by a restart into a dedicated
environment (implemented as a systemd target) for installation. Once the
package installation concludes, the system reboots, ushering in the new Fedora
version.&lt;/p&gt;
&lt;p&gt;To kickstart the process, the initial step involves installing the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dnf-plugin-system-upgrade&lt;/span&gt;&lt;/tt&gt; plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install dnf-plugin-system-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's move on to acquiring the necessary packages for the upgrade to
Fedora 23.&lt;/p&gt;
&lt;p&gt;This operation entails fetching each and every package currently installed in
our system, ensuring we obtain the latest version compatible with the specified
release â in this instance, the release is designated as &lt;tt class="docutils literal"&gt;23&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=23&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the following screenshot, you'll find details on the number of packages
slated for download and the corresponding data volume associated with fetching
them:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-34-42.png" /&gt;
&lt;p&gt;Similarly, upgrading to Fedora 24 is feasible, although I would advise against
leaping directly from Fedora 22 to Fedora 24 (a &lt;tt class="docutils literal"&gt;(n + 2)&lt;/tt&gt; version jump). As
of now, the latest stable versions are Fedora 24 and Fedora 25; Fedora 26 is
currently in the &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Branched"&gt;Branched&lt;/a&gt;
state, and &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;Rawhide&lt;/a&gt;
represents the continuously developing version.&lt;/p&gt;
&lt;p&gt;To transition to any of the mentioned versions, you simply need to modify the
&lt;tt class="docutils literal"&gt;number&lt;/tt&gt; parameter in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--releasever=number&lt;/span&gt;&lt;/tt&gt; option. Use 24 for Fedora
24, 25 for Fedora 25, 26 for Fedora Branched, and &amp;quot;rawhide&amp;quot; to upgrade to
Rawhide. It's worth noting that both Branched and Rawhide are not stable
versions of Fedora, so their use is recommended primarily for more seasoned
users.&lt;/p&gt;
&lt;p&gt;Upgrading to Fedora 24:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=24&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora 25:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=25&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora Rawhide:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, after the packages are successfully downloaded, it's imperative to
restart the system by executing the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade reboot&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Executing this command initiates a system restart. Upon reboot, the system will
utilize the same (newer) kernel, triggering the upgrade process from Fedora 22
to Fedora 23.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Sun, 26 Mar 2017 16:46:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-26:/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html</guid><category>floss</category><category>dnf</category><category>eol</category><category>fc22</category><category>fc23</category><category>fedora</category><category>system-upgrade</category></item></channel></rss>