<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>porfirio's blog - Porfirio PÃ¡iz</title><link>https://porfiriopaiz.github.io/site/</link><description></description><lastBuildDate>Thu, 29 Nov 2018 02:53:00 -0600</lastBuildDate><item><title>i3</title><link>https://porfiriopaiz.github.io/site/posts/2018/11/29/i3.html</link><description>&lt;p&gt;In this post I will explain how to do a Fedora 29 installation with the i3
window manager. It is common to see installation guides for i3, but they assume
that you already have another desktop environment previously installed.&lt;/p&gt;
&lt;p&gt;In this post we will see how to build a fully functional environment from a
minimal installation as I have explained in other publications.&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-medium"&gt;
&lt;h2&gt;Creating an installation medium&lt;/h2&gt;
&lt;div class="section" id="download-the-iso-fedora-everything-netinstall"&gt;
&lt;h3&gt;Download the ISO Fedora Everything Netinstall&lt;/h3&gt;
&lt;p&gt;From the site: &lt;a class="reference external" href="https://alt.fedoraproject.org/"&gt;https://alt.fedoraproject.org/&lt;/a&gt; download the file of the All
section, this is an ISO that works as a means of installation by network that
downloads all the packages that will be part of the system from the Internet,
as well as gives the option to choose which package collections to install,
unlike Lives media whose software selection has been previously defined.&lt;/p&gt;
&lt;p&gt;Download the ISO with wget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-29-1.2.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also download the integrity check file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check the integrity of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-the-installation-media-with-fedora-media-writer"&gt;
&lt;h3&gt;Create the installation media with Fedora Media Writer&lt;/h3&gt;
&lt;p&gt;Fedora Media Writer is available for different operating systems, download the
corresponding one.&lt;/p&gt;
&lt;p&gt;It is very important to create the installation medium with Fedora Media Writer
since this tool guarantees that the installation medium will have support to
boot on computers that have both UEFI or BIOS.&lt;/p&gt;
&lt;p&gt;How it will start will depend on which of the two has the highest priority
during startup. I always use UEFI only, so all my systems are installed in UEFI
mode.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1"&gt;https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Fedora Media Writer is installed on our computer, we connect our USB
memory, run Fedora Media Writer and use the Custom Image option to navigate to
the path where the ISO is, the one we just downloaded, select it, select
carefully the USB memory we will use and record the image in the USB memory.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;I have followed the installation steps described in this previous post, making
sure I have access to a wireless network or a wired network.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html"&gt;https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time I had to use my mobile phone, although it is true I had access to a
wireless network during the installation of the base system (Fedora Custom
Install), after installation the packages collection of does not provide the
network drivers required to access wireless networks since they are not
included in the Custom Install selection.&lt;/p&gt;
&lt;p&gt;That's why I created a wired network via USB with my mobile phone. To make it
work you have to make sure of the following right after the first boot once the
installation finishes:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Log in in the system.&lt;/li&gt;
&lt;li&gt;Connect the USB cable to the computer.&lt;/li&gt;
&lt;li&gt;Connect the other end to the mobile phone.&lt;/li&gt;
&lt;li&gt;Make sure the phone is connected to a wireless network or that the data plan
is activated. As a note, consider that you need at least 800MB of data in
RPM packages that must be downloaded for a minimum installation of Fedora
with support for the graphical environment with i3wm.&lt;/li&gt;
&lt;li&gt;Make sure the phone is in USB or MTP data transfer mode.&lt;/li&gt;
&lt;li&gt;Activate a wired network or Tethered Wired Network from your mobile phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After this, you should have access to the Internet. Check it by pinging Google:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ping 8.8.8.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-configurations"&gt;
&lt;h2&gt;Basic configurations&lt;/h2&gt;
&lt;div class="section" id="configuring-dnf"&gt;
&lt;h3&gt;Configuring dnf&lt;/h3&gt;
&lt;p&gt;The next step is optional, as root, the first thing I do is configure dnf, so
that it uses the most efficient packages mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I disable the use of deltarpm's for future updates. If you prefer to
reduce the amount of data to be downloaded in each of the future updates, skip
this step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I always keep each of the packages from which any program is installed on my
system, including those that are downloaded as part of the updates and to
maintain the packages cache throughout the period I use a Fedora release. This
step is optional and you can skip it if you want:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I proceed to disable a service and a dnf timer. The service makes sure to
refresh the metadata cache to be able to make checks on the versions of the
packages that are in the repos and then check if there are updates available.
The timer is responsible for executing the service periodically.&lt;/p&gt;
&lt;p&gt;I always disable both to avoid annoying bandwidth consumptions and dnf locks
while the cache is refreshed. If you have a limited bandwidth or data plan this
will help you reduce the consumption of it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally to make sure that the changes take effect we must restart:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regenerate-the-cache-and-install-available-updates"&gt;
&lt;h3&gt;Regenerate the cache and install available updates&lt;/h3&gt;
&lt;p&gt;During the installation, you may have omitted to check the option that allows
you to install the most recent version of the mirrors packages, so your system
could be outdated even if you have used the network installation medium.&lt;/p&gt;
&lt;p&gt;To apply the most recent updates and use the most efficient mirrors it is
necessary to regenerate the metadata cache.&lt;/p&gt;
&lt;p&gt;Fedora maintains a cache for each user, one for the root user, another for the
normal user, in my case pionen. So we must regenerate both caches if you want
to perform tasks as administrator or simple queries that do not require
administrator privileges:&lt;/p&gt;
&lt;p&gt;As a normal non-root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, as a normal non-root user, we execute the following commands, where we
pass the statement in quotes as a parameter to the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We check for available updates and enter our root password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are updates available, we apply them with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If updates have been applied, it is recommended to restart the system in order
to make use of the most recent version of all the programs, for example the
kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 29 Nov 2018 02:53:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2018-11-29:/site/posts/2018/11/29/i3.html</guid><category>dnf</category><category>fc29</category><category>fedora</category><category>postinstall</category></item><item><title>KeePassXC, the password manager</title><link>https://porfiriopaiz.github.io/site/posts/2017/11/17/keepassxc-password-manager.html</link><description>&lt;p&gt;KeePassXC is one of the first programs that I install after the first boot of
any fresh install.&lt;/p&gt;
&lt;p&gt;In the next post I will show how to install KeePassXC on Fedora and Debian, its
use and how it makes easier the management of hundreds of accounts and the
associated passwords, and how to generate secure passwords with the highest
levels of entropy.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="section" id="fedora"&gt;
&lt;h3&gt;Fedora&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install keepassxc&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install keepassx&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-password-database"&gt;
&lt;h2&gt;Create a password database&lt;/h2&gt;
&lt;p&gt;The first thing we must do is create our first database in which we will keep
all the passwords that we generate for each account.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Execute KeePassXC:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-38-49.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a new database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-31-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Assign a name to the &lt;cite&gt;*.kdbx&lt;/cite&gt; file, our database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-02-29.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It is time to assign a password, this will be the master password that We
will use to decrypt the file &lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, we click on &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-09-07.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To add a new account and its respective password, click on the icon of the
&lt;cite&gt;Key&lt;/cite&gt; with a green arrow:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-20_16-37-51.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add a title to identify what this password corresponds to, add the username
to which the password We are going to create will belong:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-15-14.png" /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Then click on the black dots icon, notice how a new menu with options is
displayed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Click on the password tab, increase the amount of characters desired for
our password, the more characters the higher the entropy level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In the &lt;strong&gt;Characters Types&lt;/strong&gt; section, We can select the different groups of
characters We want to be present in our password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Characters from &lt;cite&gt;A&lt;/cite&gt; to &lt;cite&gt;Z&lt;/cite&gt;, in capital letters: &lt;cite&gt;A-Z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;cite&gt;a&lt;/cite&gt; to &lt;cite&gt;z&lt;/cite&gt;, in lower case: &lt;cite&gt;a-z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Numbers: &lt;cite&gt;0-9&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Special characters: &lt;cite&gt;/*_ ...&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Extended_ASCII"&gt;Extended ASCII&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I marked them all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;With the mouse scroll go down and mark with a check:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Exclude look alike characters&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pick characters from every group&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Finally click &lt;tt class="docutils literal"&gt;Generate&lt;/tt&gt; to generate the password with the combination
of selected characters and then &lt;tt class="docutils literal"&gt;Copy&lt;/tt&gt; to copy the password to the
clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-17-30.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Now pressing &lt;cite&gt;Ctrl-v&lt;/cite&gt; paste the password in the &lt;strong&gt;Password&lt;/strong&gt; field and
&lt;cite&gt;Ctrl-V&lt;/cite&gt; in &lt;strong&gt;Repeat&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;By clicking on the &lt;cite&gt;eye&lt;/cite&gt; icon we can reveal the password we have generated,
copied and pasted in the &lt;strong&gt;Password&lt;/strong&gt; and &lt;strong&gt;Repeat&lt;/strong&gt; fields, click &lt;cite&gt;Apply&lt;/cite&gt;
and then &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-31.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note the asterisk in the upper border of the window at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, this means that the changes have not been saved in the
database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-58.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Click on the icon of the blue file to save the changes in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-21-04.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note that the asterisk at the top edge of the screen at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt; has disappeared, this means that the changes have already
been saved in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-19-03.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="useful-keyboard-shortcuts"&gt;
&lt;h2&gt;Useful keyboard shortcuts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;b&lt;/strong&gt; Copy the user to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;c&lt;/strong&gt; Copy the user's password to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;e&lt;/strong&gt; Open the menu to make modifications to the different accounts
that we have in our database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;n&lt;/strong&gt; Allows you to add a new account to the database.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="self-writing-shortcut"&gt;
&lt;h2&gt;Self-writing shortcut&lt;/h2&gt;
&lt;p&gt;This keyboard shortcut is my favorite. It allows you to write the user and
password of an entry in our database directly to the page where that user and
password is used, so it is not necessary to use three shortcuts to achieve the
same result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order for it to work as it should, both KeePassXC and the field where the
user and password are introduced, must be a shot away from &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By this I mean that if you press &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; you should move from the
&lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window to the browser window, for example:&lt;/p&gt;
&lt;p&gt;Note that the account has a URL linked:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-56-04.png" /&gt;
&lt;p&gt;Go to our &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt;, we select the entry of our database that corresponds
to the account in which we want to log in.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;u&lt;/strong&gt; to open the tab in which you will log in, this will open the
browser that we have configured as our default Web Browser, this page is
configured to locate the keyboard entry in the user field.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-35-24.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atl&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; to select the &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window back:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;And then, making sure We still have selected the same entry in the database,
press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_17-01-06.png" /&gt;
&lt;p&gt;The final result should make &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; return to the browser, insert the
user, jump to the next field, insert the password, to finally and automatically
&amp;quot;press&amp;quot; &lt;tt class="docutils literal"&gt;Log In&lt;/tt&gt; and log in.&lt;/p&gt;
&lt;p&gt;I hope this post is useful for you.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Fri, 17 Nov 2017 19:10:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-11-17:/site/posts/2017/11/17/keepassxc-password-manager.html</guid><category>debian</category><category>fc27</category><category>fedora</category><category>keepassxc</category><category>password</category></item><item><title>Fedora 26 Custom Operating System post install</title><link>https://porfiriopaiz.github.io/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</link><description>&lt;p&gt;On the last post I explained how make a Minimal install of Fedora 25, months
has passed by since the last post and Fedora 26 was released, following the
same steps I installed it on my laptop and next I will document my postinstall.&lt;/p&gt;
&lt;p&gt;Given this is a minimal install, the set of packages installed does not
provides support for Wireless Network Cards. It is true that during the
installation process Anaconda provides such support, but once you have
installed the minimal set of packages, these does not provides the required
drivers, for this matter I must get my laptop connected to a Wired Network.&lt;/p&gt;
&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration&lt;/h2&gt;
&lt;p&gt;After checking the Wired Network, first I did was to edit dnf's configuration
file and add the next lines to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way I make sure &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; will always use the more efficient mirror; will
not use &lt;cite&gt;*.drpm's&lt;/cite&gt; for upgrades, instead it will always download &lt;cite&gt;*.rpm's&lt;/cite&gt;; and
will keep any package it downloads in its cache.&lt;/p&gt;
&lt;p&gt;Now let's reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disablle-dnf-makecache-service-and-dnf-makecache-timer"&gt;
&lt;h2&gt;Disablle dnf-makecache.service and dnf-makecache.timer&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; has this service and timer that annoys me, both makes sure of keeping
the package metadata cache up to date with a certain frequence, this is
something I like to do when I want and when I need it, not at &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; please,
so this behaviour is fixed with the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.timer&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's reboot again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rebuilding-packages-metadata-cache-s"&gt;
&lt;h2&gt;Rebuilding packages metadata cache's&lt;/h2&gt;
&lt;p&gt;Once &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration file is customized, service and timer are disabled,
I clean the old cache and rebuild it. This time the commands are run as normal
user, Fedora keeps two differents cache: one for the normal user and other for
the root user:&lt;/p&gt;
&lt;p&gt;This will rebuild packages metadata cache for my normal user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will rebuild packages metadata cache for the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="available-upgrades"&gt;
&lt;h2&gt;Available Upgrades&lt;/h2&gt;
&lt;p&gt;During the installation it is possible to mark a checkbox for the option to
download and install the packages with the most recent version, to verify if
there aren't any upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To download and apply the upgrades if availables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the upgrade let's reboot to make use of latest version of any package if
upgraded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="workstation-product-environment-installation"&gt;
&lt;h2&gt;Workstation Product Environment Installation&lt;/h2&gt;
&lt;p&gt;On my laptop I use GNOME Shell as desktop environment, to install it I make use
of a package group that provides all the required packages to make of this
Fedora Custom Operating System install a Fedora Workstation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf group install workstation-product-environment&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="graphical-boot-mode"&gt;
&lt;h2&gt;Graphical Boot Mode&lt;/h2&gt;
&lt;p&gt;After downloading and installing all the packages, We must change the default
&lt;cite&gt;init&lt;/cite&gt; mode from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;multi-user.target&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;graphical.target&lt;/tt&gt;, otherwise, when
We reboot our system will not start in graphical mode.&lt;/p&gt;
&lt;p&gt;Also We must enable the service for the graphical login manager, if no, despite
enabling the graphical mode our login will still a text based prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl set-default graphical.target&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl enable gdm.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If nothing goes wrong, you might be running Fedora 26 Workstation with GNONE
Shell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fixing-nautilus-behaviour"&gt;
&lt;h2&gt;Fixing Nautilus Behaviour&lt;/h2&gt;
&lt;p&gt;Before opening any other application, I like to fix how Nautilus sorts files, I
like to have them sorted by type or file extension:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.nautilus.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way when opening Nautilus it will show the files sorted by extension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repositories"&gt;
&lt;h2&gt;Repositories&lt;/h2&gt;
&lt;div class="section" id="enabling-rpmfusion"&gt;
&lt;h3&gt;Enabling RPMFusion:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refresh the cache, this will download the RPMFusion packages metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-google-chrome-s-repository"&gt;
&lt;h3&gt;Enabling Google Chrome's repository:&lt;/h3&gt;
&lt;p&gt;I used to enable Google Chrome repository as explained on this post:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/"&gt;https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But Mayorga presented me a more simple method, basically you just have to
download Google Chrome &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package, install it from the command line
indicating the path to the &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package and this by itself will add the
&lt;cite&gt;*.repo&lt;/cite&gt; file to the path &lt;tt class="docutils literal"&gt;/etc/yum.repos.d/&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/Downloads&lt;/span&gt;

&lt;span class="go"&gt;wget -N -t 0 -c https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install google-chrome-stable_current_x86_64.rpm&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-tracker"&gt;
&lt;h2&gt;Disabling Tracker&lt;/h2&gt;
&lt;p&gt;Before copying back any file from my back up's, hay must disable the annoying
&lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; and all his friends:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install tracker-preferences&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;mkdir ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cp /etc/xdg/autostart/tracker* ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cd ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;sed -i &amp;#39;s/X-GNOME-Autostart-enabled=true/X-GNOME-Autostart-enabled=false/&amp;#39; tracker*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's check &lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we make a &lt;tt class="docutils literal"&gt;hard reset&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker reset --hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-gnome-software-and-packagekit-download-updates"&gt;
&lt;h2&gt;Disabling GNOME Software and PackageKit download-updates&lt;/h2&gt;
&lt;p&gt;GNOME Software downloads metadata and upgrades for the system in background, to
disable it We execute the next commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.software download-updates false&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl mask packagekit.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should stop the autodownload upgrades and the PackageKit service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="libraries-and-development-tools"&gt;
&lt;h2&gt;Libraries and Development Tools&lt;/h2&gt;
&lt;p&gt;Now install the package groups that provides the required software and
libraries for compiling other software from source code, as well as making of
&lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; and &lt;cite&gt;IDE&lt;/cite&gt;, on another post I will explain how to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install c-development&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-libs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install fedora-packager&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install rpm-development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install automake gcc gcc-c++ kernel-devel cmake&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python-devel python3-devel&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install monodevelop&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install golang&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install nodejs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install rust&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install cargo&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-virtualenv&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-pip&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally the spellcheckers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-en&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the next post I will make shorts reviews on the other tools I use on Fedora.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 31 Aug 2017 16:26:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-08-31:/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</guid><category>dnf</category><category>fc26</category><category>fedora</category><category>postinstall</category></item><item><title>This was Fedora at CS50x.ni</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/31/this-was-fedora-at-cs50x.ni.html</link><description>&lt;p&gt;On Tuesday, March 14th, the &lt;a class="reference external" href="http://fedora.org.ni/"&gt;Fedora Nicaragua&lt;/a&gt;
community and the &lt;a class="reference external" href="http://code-fu.net.ni/"&gt;CS50x.ni&lt;/a&gt; staff, with the support
from &lt;a class="reference external" href="http://fundacionuno.org/en/"&gt;FundaciÃ³n UNO&lt;/a&gt; and the Fedora Project, we
had the opportunity to meet to see a series of lectures in which the speakers
shared their experience using Free Software, the importance and benefits of the
different software tools used in the CS50x.ni course. The lectures were aimed
for anyone who is taking the CS50x.ni course currently, or who wants to take it
in the future or people interested in learning more about free software and
more specifically about the Fedora Project.&lt;/p&gt;
&lt;p&gt;The meeting was in the basement of the north wing of the Rigoberto LÃ³pez PÃ©rez
building of the National University of Engineering in the SimÃ³n BolÃ­var Campus,
in the classrooms dedicated to the CS50x.ni (Coding) project.&lt;/p&gt;
&lt;p&gt;The talks began at 9:00 AM, as the first presentation we had a &lt;a class="reference external" href="https://fedorapeople.org/~mayorga/slides/this_is_fedora.odp"&gt;&amp;quot;Fedora Project
Overview&amp;quot;&lt;/a&gt;
facilitated by &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Mayorga"&gt;Eduardo Mayorga&lt;/a&gt;.  Eduardo a Fedora Project
Ambassador, Package Maintainer and is currently part of the group of students
who are participating in the course CS50x.ni, explained to us what the Fedora
Project is about, its mission and vision as a Free Software project, and also
gave us a look at what is being part of this community both locally and
internationally.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/mayorga.jpg" /&gt;
&lt;p&gt;The second talk was given by &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Yn1v"&gt;Neville Cross&lt;/a&gt;, Founder and Leader of Fedora
Community in Nicaragua. In his talk Neville motivated the attendees to know
more about the importance of mastering the command line tools shipped in all
the GNU/Linux distributions. Neville made a demonstration on the use of &lt;a class="reference external" href="https://yn1v.fedorapeople.org/Slides/ssh_una_presentacion_corta.odp"&gt;SSH
remote management tools&lt;/a&gt; in
which he showed how to access a computer connected in the same network from a
second computer through a command line and talked about some tools that allow
monitoring resources, all this remotely.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/yn1v.jpg" /&gt;
&lt;p&gt;The third talk was facilitated by &lt;a class="reference external" href="http://reactivated.net/"&gt;Daniel Drake&lt;/a&gt;.
Daniel is an operating system developer originally from the UK settled in
Nicaragua for 8 years. Daniel came as part of Project One Laptop per Child, the
talk was related to &lt;a class="reference external" href="https://drive.google.com/uc?export=download&amp;amp;id=0ByFPl6lV1b_MRHROTmFQTkQ1V3c"&gt;&amp;quot;Employment Opportunities related to Linux after CS50&amp;quot;&lt;/a&gt;,
in which Daniel shared his experiences and advice acquired over 15 years of
experience as a developer and contributor of Free Software projects such as
&lt;a class="reference external" href="https://www.openhub.net/p/gnome/contributors/16149077045725"&gt;The GNOME Project&lt;/a&gt;.  Daniel has
also been a leader of the development team &lt;a class="reference external" href="https://www.openhub.net/p/linux/contributors/13490492289501"&gt;Linux Kernel&lt;/a&gt; for the &lt;a class="reference external" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/log/?qt=author&amp;amp;q=daniel+drake"&gt;Gentoo
distribution&lt;/a&gt;,
and shared tips on being part of Free Software projects and emphasized the
benefits of contributing to projects through the experience one acquires by
working with talented people from all over the world.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/dsd.jpg" /&gt;
&lt;p&gt;In the last block of talks &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Porfiriopaiz"&gt;Porfirio PÃ¡iz&lt;/a&gt;, contributor of the Fedora
Projet and student of the CS50x.ni course, gave 3 examples of how the Fedora
distribution can be a very useful tool for students of the CS50x.ni with
demonstrations on the use of tools such as the &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/comenzando_con_git.odp"&gt;&amp;quot;Getting started with Git&amp;quot;&lt;/a&gt; talk
where he made a small demo about the workflow for managing code version control
system. In a second talk he did, &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/breve_introduccion_a_docker.odp"&gt;&amp;quot;A brief introduction to Docker&amp;quot;&lt;/a&gt;
he talked to us about how this tool is being used in the CS50x.ni to provide an
easy and simple programming environment for those who are taking the course.
And in a third talk he shared about how to set up a &lt;a class="reference external" href="https://porfiriopaiz.fedorapeople.org/Slides/estacion_de_trabajo.odp"&gt;&amp;quot;Development Workstation
with Fedora&amp;quot;&lt;/a&gt;.  In
this talk Porfirio spoke about one of the products offered by the Fedora
Project for all those who are focused on achieving a work environment with the
objective of materializing their software project ideas using Fedora as a basis
to build them, making use of the different programming languages available
between the Fedora software repositories, as well as other tools.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/porfiriopaiz.jpg" /&gt;
&lt;p&gt;And as a final surprise, the members of Fedora Nicaragua, together with the
staff of the CS50x.ni, shared with the audience a pleasant time full of talks,
exchanges of ideas and experiences accompanied by cold drinks and delicious
pizza, which was kindly sponsored by the Fedora Project.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/fedora_at_cs50xni.jpg" /&gt;
&lt;p&gt;The Fedora Project Users and Contributors Community are keen to continue with
these sessions of talks and conversations focused on topics that are of great
help and interest to those who are entering the wonderful world of programming
thanks to the CS50x.ni.&lt;/p&gt;
&lt;p&gt;Sorry for the late post here is a happy Hot Dog:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fedora_at_cs50xni/beefy_miracle.gif" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Fri, 31 Mar 2017 15:07:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-31:/site/posts/2017/03/31/this-was-fedora-at-cs50x.ni.html</guid><category>cs50x.ni</category><category>events</category><category>fedora</category></item><item><title>Anaconda and LVM on LUKS</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/30/anaconda-and-lvm-on-luks.html</link><description>&lt;p&gt;Previously I had updated my laptop from Fedora 22 to Fedora 23 when F22 had
more than 6 months since it reached its End of Life, it is also possible reuse
partitions created for F22 so that they can be used to install the new Fedora
release and keep all the files contained in the Logical Volume that serves as
&lt;tt class="docutils literal"&gt;/home&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In this post I will explain how to achieve this without compromising the
integrity of our information or the other operating systems installed in our
Desktop/Laptop.&lt;/p&gt;
&lt;p&gt;As we saw in the previous post, it is possible to make an upgrade, this is
great to have the ability to do this, but the idea of downloading all packages,
and then updating them at once, is something I do not know if I want do,
frankly, doing fresh installs and setting everything to as it was before is
something I like and enjoy doing. It also represents less burden for the
computer, since it only downloads the minimum packages to have a functional
system, anything else I may need can be later installed on demand.&lt;/p&gt;
&lt;p&gt;Once all the files contained in our systems have a proper backup, we can begin
with the installation process without the fear of something going wrong, you
never know what could go wrong until it goes wrong XD.&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-media"&gt;
&lt;h2&gt;Creating an Installation Media&lt;/h2&gt;
&lt;p&gt;The first step is to create an installation medium, for this we must download
the Fedora 25 ISO file. Since Fedora 21 I have been using the netinstall image,
according to Chapter 2 of the &lt;a class="reference external" href="https://docs.fedoraproject.org/en-US/Fedora/25/html/Installation_Guide/chap-downloading-fedora.html"&gt;Fedora Installation Guide&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The netinstall image boots directly into the installation environment, and
uses the online Fedora package repositories as the installation source.
With a netinstall image, you can select a wide variety of packages to
create a customized installation of Fedora.&lt;/p&gt;
&lt;p&gt;The Fedora Server netinstall image is a universal one, and can be used to
install any Fedora flavor or your own set of favorite packages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="downloading-the-image-everything-netinstall"&gt;
&lt;h3&gt;Downloading the image Everything netinstall&lt;/h3&gt;
&lt;p&gt;I'd rather use the netinstall ISO image of &lt;a class="reference external" href="https://alt.fedoraproject.org/en/"&gt;Fedora Everything&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Apparently, the Everything netinstall image does not have a torrent seeder for
download:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://torrent.fedoraproject.org/"&gt;https://torrent.fedoraproject.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we must use the conventional method of direct download, for this we will
make use of the command line.&lt;/p&gt;
&lt;p&gt;To download the image for 32bit systems use the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/iso/Fedora-Everything-netinst-i386-25-1.3.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To download the image for 64bit systems use the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/25/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-25-1.3.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;cite&gt;-N&lt;/cite&gt; downloads the file with the same time and date stamp when it was first
uploaded to the servers.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;-t 0&lt;/cite&gt; in case the download is interrupted due to problems of connection
this will attempt to make an automatic reconnection, if we leave the time
in &lt;cite&gt;0&lt;/cite&gt; will reconnect immediately.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;-c&lt;/cite&gt; indicates that the download must be continued in the byte that was
left pending when the donwload was interrupted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a small contingency measure in case we do not have access to a network
stable enough.&lt;/p&gt;
&lt;p&gt;we can also verify the integrity of the downloaded image using the checksum
file. we only have to download the file and save it in the same directory
containing the ISO image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://alt.fedoraproject.org/es/static/checksums/Fedora-Everything-25-1.3-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-25-1.3-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-the-iso-image-on-a-usb"&gt;
&lt;h3&gt;Writing the ISO image on a USB&lt;/h3&gt;
&lt;p&gt;To burn the ISO image to an USB drive we will use the &lt;strong&gt;Fedora Media Writer&lt;/strong&gt;
tool. If you are using Windows you can install Fedora Media Writer using the
next link:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://getfedora.org/fmw/FedoraMediaWriter-win32-4.0.7.exe"&gt;https://getfedora.org/fmw/FedoraMediaWriter-win32-4.0.7.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For MacOS:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://getfedora.org/fmw/FedoraMediaWriter-osx-4.0.7.dmg"&gt;https://getfedora.org/fmw/FedoraMediaWriter-osx-4.0.7.dmg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are using Fedora 23 or higher you can install Fedora Media Writer with
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install mediawriter&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before running Fedora Media Writer it is advisable to disconnect any removable
storage device that may be plugged in our system, this to avoid possible
confusion. Then we connect the USB memory that we will use and until then run
Fedora Media Writer.&lt;/p&gt;
&lt;p&gt;The steps to follow are very simple, we select:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Custom image.&lt;/li&gt;
&lt;li&gt;Navigate to the directory where the ISO image was previously downloaded.&lt;/li&gt;
&lt;li&gt;Select the USB.&lt;/li&gt;
&lt;li&gt;Click &lt;cite&gt;Write to disk&lt;/cite&gt;.&lt;/li&gt;
&lt;li&gt;Enter your user password if you are in the &lt;cite&gt;wheel&lt;/cite&gt; group or the &lt;cite&gt;root&lt;/cite&gt;
password in case we are not in the admins group.&lt;/li&gt;
&lt;li&gt;Done.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="booting-from-usb"&gt;
&lt;h3&gt;Booting from USB&lt;/h3&gt;
&lt;p&gt;In my case I have configured my laptop to start in &lt;cite&gt;UEFI mode&lt;/cite&gt; and with &lt;cite&gt;Secure
Boot&lt;/cite&gt; enabled.&lt;/p&gt;
&lt;p&gt;Creating our installation media with Fedora Media Writer guarantees that the
installation medium will work in any possible scenario.&lt;/p&gt;
&lt;p&gt;To access the Boot Manager on my laptop, I only need to press the &lt;strong&gt;Enter&lt;/strong&gt; key
while the &lt;strong&gt;Lenovo&lt;/strong&gt; logo is displayed, this is a indicator, in my case, that
the machine is booting in UEFI mode.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="starting-the-fedora-25-installation-process"&gt;
&lt;h2&gt;Starting the Fedora 25 Installation Process&lt;/h2&gt;
&lt;p&gt;For this section of the post I will use screenshots and a brief description of
them.&lt;/p&gt;
&lt;p&gt;First, the Internet connection.&lt;/p&gt;
&lt;p&gt;Installation media created from netinstall images depends exclusively on an
Internet connection, either wired via RJ45 port (Ethernet) or via Wireless
(Using our WiFi card), in my case the netinstall setup detects both network
cards. Fedora netinstall contain a set of drivers that allow us to make use of
certain network cards, in case our network card is not detected it might be due
to our device is not supported by Fedora, this is for legal reasons. Fedora
only includes FLOSS drivers or that its manufacturers make explicit mention of
its terms of use and distribution policy.&lt;/p&gt;
&lt;p&gt;My T440p comes equipped with an &lt;a class="reference external" href="https://ark.intel.com/products/60019/Intel-Ethernet-Connection-I217-LM"&gt;IntelÂ® Ethernet Wired Network Card Connection
I217-LM&lt;/a&gt; and
an &lt;a class="reference external" href="http://ark.intel.com/products/75174/Intel-Wireless-N-7260"&gt;IntelÂ® Wireless-N 7260 Wireless Network Card&lt;/a&gt;, both cards were
detected during installation, in the office I only have access to WiFi networks
so I used the Wireless card.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0000.png" /&gt;
&lt;p&gt;In this first image of the installation summary, the first thing we must do is
to get connected to any of the available networks whether we use a Wired
network or WiFi network, for this we click on the &lt;cite&gt;NETWORK &amp;amp; HOST NAME&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Then selecting Wireless and activating the card; we select one Network of those
available; we change the name of our Desktop/Laptop and click &lt;cite&gt;Apply&lt;/cite&gt;...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0002.png" /&gt;
&lt;p&gt;Click &lt;cite&gt;Done&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;LOCALIZATION&lt;/cite&gt; section I added the &lt;tt class="docutils literal"&gt;French (International (AltGr dead
keys)&lt;/tt&gt; and removed &lt;tt class="docutils literal"&gt;English (US)&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0005.png" /&gt;
&lt;p&gt;You can see a short test, when by pressing the &lt;cite&gt;AltGr + a&lt;/cite&gt; key and other
vowels, the result is accentuated vowels.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;TIME &amp;amp; DATE&lt;/cite&gt; section I always enable &lt;cite&gt;Network Time&lt;/cite&gt;...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0007.png" /&gt;
&lt;p&gt;We also select our &lt;cite&gt;Region&lt;/cite&gt; and &lt;cite&gt;City&lt;/cite&gt;, based on this, the time and date are
set.&lt;/p&gt;
&lt;p&gt;Up to now we have configured the following sections:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0008.png" /&gt;
&lt;p&gt;Now we must configure the &lt;cite&gt;SOFTWARE&lt;/cite&gt; section, specifically &lt;cite&gt;INSTALLATION
SOURCE&lt;/cite&gt;...&lt;/p&gt;
&lt;p&gt;In this section we mark &lt;cite&gt;On the Network:&lt;/cite&gt; and select &lt;cite&gt;Closest mirror&lt;/cite&gt;, we also
make sure to uncheck the &lt;cite&gt;Updates&lt;/cite&gt; option...&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0009.png" /&gt;
&lt;p&gt;This way the installer will use the online repositories to download the
required packages for the installation, using the nearest server that commonly
is not the closest geographically, but the most efficient and with better times
in terms of data transfer.&lt;/p&gt;
&lt;p&gt;By unchecking &lt;cite&gt;Updates&lt;/cite&gt; we are telling the installer to use the latest packages
that are available in the repo.&lt;/p&gt;
&lt;p&gt;We wait for the package group metadata to be downloaded, the section &lt;cite&gt;SOFTWARE
SELECTION&lt;/cite&gt; depends on this:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0011.png" /&gt;
&lt;p&gt;In &lt;cite&gt;SOFTWARE SELECTION&lt;/cite&gt; I chose &lt;cite&gt;Fedora Custom Operating System&lt;/cite&gt;, which
represents a very minimal package selection, with no graphical environment,
only a few packages groups as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Environment Group: Fedora Custom Operating System&lt;/span&gt;
&lt;span class="go"&gt; Environment-Id: custom-environment&lt;/span&gt;
&lt;span class="go"&gt; Description: Basic building block for a custom Fedora system.&lt;/span&gt;
&lt;span class="go"&gt; Mandatory Groups:&lt;/span&gt;
&lt;span class="go"&gt;   Core&lt;/span&gt;
&lt;span class="go"&gt; Optional Groups:&lt;/span&gt;
&lt;span class="go"&gt;   Guest Agents&lt;/span&gt;
&lt;span class="go"&gt;   Standard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we have reached the &lt;cite&gt;SYSTEM&lt;/cite&gt; section, select &lt;cite&gt;INSTALLATION
DESTINATION&lt;/cite&gt;.  In &lt;cite&gt;Device Selection&lt;/cite&gt;, in &lt;cite&gt;Local Stardard Disk&lt;/cite&gt; select the hard
disk that has the Fedora installation with the existing partitions we want to
reuse.&lt;/p&gt;
&lt;p&gt;In the &lt;cite&gt;Other Storage Options&lt;/cite&gt; section, under &lt;cite&gt;Partitioning&lt;/cite&gt; we select &lt;cite&gt;I will
Configure partitioning&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;The following menu is shown below, in which we will click on &lt;cite&gt;Unknown&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0013.png" /&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once we click &lt;cite&gt;Unknown&lt;/cite&gt; the other existing partitions will be displayed. we
will focus on the partitions &lt;strong&gt;sda2&lt;/strong&gt;, &lt;strong&gt;sda9&lt;/strong&gt; and &lt;strong&gt;sda10&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0014.png" /&gt;
&lt;/blockquote&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;sda2&lt;/strong&gt; is the ESP (EFI Partition System) partition, this partition
contains the other *.efi files; every OS that has been installed on our
computer in UEFI mode has an *.efi file that will be linked to our GRUB,
which allows us to choose which OS to boot during the first few seconds
after our computer is turned on. &lt;strong&gt;You should never mark&lt;/strong&gt; this partition
to be formatted. &lt;strong&gt;sda2&lt;/strong&gt; will be mounted on &lt;cite&gt;/boot/efi&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sda9&lt;/strong&gt; is the partition I will mount in &lt;cite&gt;/boot&lt;/cite&gt;, this partition should
not be encrypted, since inside there are files needed for the OS to be
loaded, in example the kernel. If we encrypt this partition we will not be
able  to load the kernels on boot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sda10&lt;/strong&gt; is the partition that was encrypted using LUKS, which contains
the &lt;cite&gt;Volume Group&lt;/cite&gt; which contains the other logical volumes that serve as
&lt;cite&gt;/&lt;/cite&gt;, &lt;cite&gt;/home&lt;/cite&gt; and &lt;cite&gt;swap&lt;/cite&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After selecting &lt;strong&gt;sda10&lt;/strong&gt; you are prompted for the encryption password that
will grant you access to the &lt;cite&gt;Volume Group&lt;/cite&gt; containing the mentioned
partitions. It is shown as the existing Fedora 23 installation, which was
originally the F22 that we updated in the previous post.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0015.png" /&gt;
&lt;p&gt;We click on &lt;cite&gt;Fedora Linux 23 for x86_64&lt;/cite&gt; and we can see the logical volumes
that we will reuse.&lt;/p&gt;
&lt;p&gt;By clicking &lt;cite&gt;/home&lt;/cite&gt;, we make sure to assign a &lt;cite&gt;Mount Point&lt;/cite&gt; for this Logical
Volumen. We make sure that the &lt;cite&gt;Reformat&lt;/cite&gt; checkbox is &lt;strong&gt;not&lt;/strong&gt; checked, and
click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0017.png" /&gt;
&lt;p&gt;In the following image we can see that the logical volume &lt;cite&gt;fedora_lilit-home&lt;/cite&gt;
was reassigned to &lt;cite&gt;New Fedora 25 Installation&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0018.png" /&gt;
&lt;p&gt;We select &lt;cite&gt;/boot/efi&lt;/cite&gt;, which is nothing more than the ESP partition located in
&lt;strong&gt;sda2&lt;/strong&gt;, we make sure to assign a &lt;cite&gt;Mount Point&lt;/cite&gt; for this Logical Volume, which
in this case would be &lt;cite&gt;/boot/efi&lt;/cite&gt;. we make sure that the checkbox &lt;cite&gt;Reformat&lt;/cite&gt; is
&lt;strong&gt;not&lt;/strong&gt; checked, and click on &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0019.png" /&gt;
&lt;p&gt;We select &lt;cite&gt;/&lt;/cite&gt;, this logical volume served as &lt;cite&gt;/&lt;/cite&gt; for F23, so to be able to
reuse it we must mark it to format. we assign &lt;cite&gt;/&lt;/cite&gt; as the point, I assign a file
system ext4, we ensure that the checkbox &lt;cite&gt;Reformat&lt;/cite&gt; &lt;strong&gt;is&lt;/strong&gt; marked, and click on
&lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0023.png" /&gt;
&lt;p&gt;Select &lt;cite&gt;swap&lt;/cite&gt;, mark the checkbox and click &lt;cite&gt;Update Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0025.png" /&gt;
&lt;p&gt;We select &lt;cite&gt;/boot&lt;/cite&gt;, here is where the F23 kernels were stored, so to reuse this
partition it is required to format it. we assign a &lt;cite&gt;Mount Point&lt;/cite&gt; &lt;cite&gt;/boot&lt;/cite&gt;, then
click &lt;cite&gt;Reformat&lt;/cite&gt;, in my case I assign an ext4 file system and click &lt;cite&gt;Update
Settings&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0030.png" /&gt;
&lt;p&gt;Click on &lt;cite&gt;Done&lt;/cite&gt; and accept the changes that will be made.&lt;/p&gt;
&lt;p&gt;To finish just click on &lt;cite&gt;Begin Installation&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0032.png" /&gt;
&lt;p&gt;We assign a user password and ROOT password. And wait, now we must wait for the
download of the packages and their installation to finish:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0037.png" /&gt;
&lt;p&gt;After done, click &lt;cite&gt;Reboot&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/anaconda-screenshots/0053.png" /&gt;
&lt;p&gt;In my case I had to do a series of steps after the installation that the we
will see in the next post.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 30 Mar 2017 21:00:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-30:/site/posts/2017/03/30/anaconda-and-lvm-on-luks.html</guid><category>anaconda</category><category>fc25</category><category>fedora</category><category>luks</category><category>lvm</category></item><item><title>Upgrading from Fedora 22 to Fedora 23</title><link>https://porfiriopaiz.github.io/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html</link><description>&lt;p&gt;From May 26th in 2015 to November 22th in 2016 I was using Fedora 22 on my
Lenovo ThinkPad T440p, which is equivalent to a year and a half running F22. On
July 19th of 2016 F22 entered &lt;a class="reference external" href="https://fedoraproject.org/wiki/End_of_life"&gt;EOL&lt;/a&gt; status, which means that you
will not receive any further security or maintenance updates, so upgrading to a
newer stable version was recommended.&lt;/p&gt;
&lt;p&gt;In this post I will explain how to update to Fedora 23 using the dnf package
manager.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;After using Fedora 22 for a year and a half, the packages cache had taken
approximately 10GB of space on my hard drive:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_16-05-06.png" /&gt;
&lt;p&gt;To tell dnf to preserve the packages downloaded in the cache it is required to
add the following line to the dnf configuration file &lt;tt class="docutils literal"&gt;/etc/dnf/dnf.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;echo &amp;#39;keepcache = true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="upgrading-fedora-23"&gt;
&lt;h2&gt;Upgrading Fedora 23&lt;/h2&gt;
&lt;div class="section" id="prerequisites-for-upgrading"&gt;
&lt;h3&gt;Prerequisites for upgrading&lt;/h3&gt;
&lt;p&gt;First, we make sure we have enough space on our &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; partition, since during
the update process we will need to download the most recent version of each and
every single of the packages installed in our system. Whereas there is a
possibility that our cache may be full, it is good to remove the packages
stored in it to freed space in case we need:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we continue, we need to make sure that our system has installed the
latest updates available from the different repositories enabled in our system.
To do this, we must reconstruct the packages metadata cache and then apply the
recent upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-23-27.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-dnf-plugin-system-upgrade-plugin"&gt;
&lt;h3&gt;Install the dnf-plugin-system-upgrade plugin&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DNF System Upgrade&lt;/strong&gt; can upgrade your system to a more recent version of
Fedora, using a mechanism similar to that used for offline package updates.
Packages are donwloaded while the system is running normally, and then the
system is restarted in a special environment (implemented as a systmend target)
to install them. Once the installation of the packages is complete, the system
reboots but this time in the new Fedora version.&lt;/p&gt;
&lt;p&gt;The first step is to install the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dnf-plugin-system-upgrade&lt;/span&gt;&lt;/tt&gt; plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install dnf-plugin-system-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now let's proceed to download the packages needed to upgrade to Fedora 23.&lt;/p&gt;
&lt;p&gt;This process will download each and every one of the packages that we have
installed in our system, in its most recent version available for the release
that we indicate, in this case the release will be &lt;tt class="docutils literal"&gt;23&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=23&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the next screenshot you can see the number of packages to download and the
amount of data that implies downloading them:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-34-42.png" /&gt;
&lt;p&gt;In the same way it is possible to upgrade to Fedora 24, although I do not
recommend jumping to a &lt;tt class="docutils literal"&gt;(n + 2)&lt;/tt&gt; Fedora version, that is, moving from Fedora
22 to Fedora 24. At the moment, the most recent stable versions are Fedora 24
and Fedora 25; Fedora 26 is &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Branched"&gt;Branched&lt;/a&gt; and &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;Rawhide&lt;/a&gt; the version in continuous
development. To upgrade to any of the above versions, only the &lt;tt class="docutils literal"&gt;number&lt;/tt&gt;
parameter should be edited in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--releasever=number&lt;/span&gt;&lt;/tt&gt; option, 24 for F24,
25 for F25, 26 for Fedora Branched and &lt;tt class="docutils literal"&gt;rawhide&lt;/tt&gt; to upgrade to Rawhide. It
should be noted that both Branched and Rawhide are not stable versions of
Fedora, so its use is only recommended for more experienced users.&lt;/p&gt;
&lt;p&gt;Upgrading to Fedora 24:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=24&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora 25:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=25&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora Rawhide:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, once it downloads the packages, it is necessary to restart the system
by executing the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade reboot&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will restart the system. Then the system should boot again using the same
(newer) kernel, but this time it will start the upgrade process from Fedora 22
to Fedora 23.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Sun, 26 Mar 2017 16:46:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-03-26:/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html</guid><category>dnf</category><category>eol</category><category>fc22</category><category>fc23</category><category>fedora</category><category>system-upgrade</category></item><item><title>IRC with irssi</title><link>https://porfiriopaiz.github.io/site/posts/2016/11/03/irc-with-irssi.html</link><description>&lt;p&gt;From my beginnings in the Free Software and GNU/Linux, one of the features that
caught my attention is the power of the command line in this operating system.
From moving between different directories or installing an operating system
completely from scratch, these are some of the routine tasks you can achive
from the terminal.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;In this post I will show how to configure irssi to automate some of the steps
to carry out in order to access a chat room, as it is connecting to the server,
authenticate and then joining the differents channels that are of interest.&lt;/p&gt;
&lt;div class="section" id="installing-irssi"&gt;
&lt;h2&gt;Installing irssi&lt;/h2&gt;
&lt;p&gt;To install irssi in fedora, just open a terminal and type the following
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install irssi&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to install irssi in debian:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install irssi&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="running-irssi"&gt;
&lt;h3&gt;Running irssi&lt;/h3&gt;
&lt;p&gt;To run irssi, open a terminal and type the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;irssi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configurations"&gt;
&lt;h2&gt;Configurations&lt;/h2&gt;
&lt;div class="section" id="server-configurations"&gt;
&lt;h3&gt;Server Configurations&lt;/h3&gt;
&lt;p&gt;All these commands must be executed on a irssi session.&lt;/p&gt;
&lt;p&gt;First we will remove the existing server configuration that we want to
automate.  With &lt;tt class="docutils literal"&gt;/server list&lt;/tt&gt; we can view existing servers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/server list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In our case we will remove the existing configuration of Freenode.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/server remove chat.freenode.net&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And add the new configuration with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/SERVER ADD -auto -network Freenode chat.freenode.net 6667 your_nick_password&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In which &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-auto&lt;/span&gt;&lt;/tt&gt; defines the connection to the &lt;tt class="docutils literal"&gt;Freenode&lt;/tt&gt; server as
automatic and &lt;tt class="docutils literal"&gt;your_nick_password&lt;/tt&gt; is your user password.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-channels"&gt;
&lt;h3&gt;Adding Channels&lt;/h3&gt;
&lt;p&gt;Similarly, it is possible to add channels to this server in order to get
connected automatically on each login, for this run the following command in
our irssi session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/channel add -auto #fedora Freenode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In which &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-auto&lt;/span&gt;&lt;/tt&gt; allows us joining to &lt;tt class="docutils literal"&gt;#fedora&lt;/tt&gt; channel at &lt;tt class="docutils literal"&gt;Freenode&lt;/tt&gt;
server automatically at each login.&lt;/p&gt;
&lt;p&gt;Finally, every time we make a change in our configuration, we must save changes
with the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/save&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;irssi takes the user name of your current session on the system as the user for
your session in irc, to prevent this from happening if the name of your session
in the system does not match your user at Freenode, you should run irssi with
the following parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;irssi -n nick&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where &lt;tt class="docutils literal"&gt;nick&lt;/tt&gt; is your user nick on Freenode IRC.&lt;/p&gt;
&lt;p&gt;Once you've added all your channels of interest from the Freenode server and
saved the changes, you only need to run in a terminal the &lt;tt class="docutils literal"&gt;irssi&lt;/tt&gt; command and
automatically you will be connected to the server and all the channels you've
added without needing to authenticate manually and without risking anyone from
reading your password while you type it. All this from a terminal.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Thu, 03 Nov 2016 21:20:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2016-11-03:/site/posts/2016/11/03/irc-with-irssi.html</guid><category>cli</category><category>irc</category></item><item><title>Hello World!</title><link>https://porfiriopaiz.github.io/site/posts/2016/10/09/hello-world.html</link><description>&lt;p&gt;Hello World from Pelican!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio PÃ¡iz</dc:creator><pubDate>Sun, 09 Oct 2016 20:49:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2016-10-09:/site/posts/2016/10/09/hello-world.html</guid></item></channel></rss>