<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>porfirio's blog - debian</title><link href="https://porfiriopaiz.github.io/site/" rel="alternate"></link><link href="https://porfiriopaiz.github.io/site/feeds/debian.atom.xml" rel="self"></link><id>https://porfiriopaiz.github.io/site/</id><updated>2022-10-31T03:32:00-06:00</updated><entry><title>vi</title><link href="https://porfiriopaiz.github.io/site/posts/2022/10/31/vi.html" rel="alternate"></link><published>2022-10-31T03:32:00-06:00</published><updated>2022-10-31T03:32:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2022-10-31:/site/posts/2022/10/31/vi.html</id><summary type="html">&lt;p class="first last"&gt;The Vi text editor&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="understanding-vi-and-vim-on-debian"&gt;
&lt;h2&gt;Understanding vi and vim on Debian&lt;/h2&gt;
&lt;p&gt;Since 2011, I've steadfastly embraced &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; as my primary text editor. My
journey into the realm of mastering the command line interface and
transitioning away from the comfort of the graphical user interface began early
on. Among the foundational skills I aimed to acquire, one of the first was the
efficient editing of text files.&lt;/p&gt;
&lt;p&gt;Surprisingly, the exact catalyst that initially led me to embrace &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; has
faded into the distant recesses of my memory. Nevertheless, over eleven years
later, my loyalty to &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; remains unwavering. It has been a constant
companion throughout this journey, and I've never strayed into the world of
alternative text editors. In fact, I've even employed &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; for basic Python
programming tasks, underscoring its versatility and enduring utility in my
daily computing endeavors.&lt;/p&gt;
&lt;p&gt;In this post, I intend to delve deep into the intricacies of how Debian manages
the functionality of &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and vim right from a basic, uncustomized Debian
installation.&lt;/p&gt;
&lt;p&gt;My objective is to gain a profound understanding of the fundamental behaviors
exhibited by &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and vim in their most minimalist configurations, as they
are presented immediately after a fresh Debian installation.&lt;/p&gt;
&lt;p&gt;It's worth noting that Debian does not include vim by default in this scenario.
I opted for a network install using the minimal tasksel profile, selecting only
the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;mate-desktop-environment&lt;/span&gt;&lt;/tt&gt; package. This illustrates one of the aspects I
greatly appreciate about Debian – its commitment to delivering essential
software components, allowing users the freedom to shape and personalize their
tools and environments according to their specific needs, without making any
presumptions about what's best for them.&lt;/p&gt;
&lt;div class="section" id="vi-1"&gt;
&lt;h3&gt;&lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;A pristine Debian installation defaults to including only the 'vim-tiny'
package. Within this package, two critical configuration files are stored in
&lt;tt class="docutils literal"&gt;/etc/vim/&lt;/tt&gt;: &lt;tt class="docutils literal"&gt;vimrc&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This setup is intentionally minimalist, devoid of any symbolic links, aliases,
or binary files associated with &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;. Consequently, the sole alias present
is &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;, which is directly linked to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;When &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; is invoked, it effectively calls &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;, which, as the
default behavior, exclusively sources the file located at
&lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Now, let's explore the contents of the &lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; Vim configuration file, in effect when invoked as &amp;quot;vi&amp;quot;. The aim of this&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; configuration file is to provide a Vim environment as compatible with the&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; original vi as possible. Note that ~/.vimrc configuration files as other&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; configuration files in the runtimepath are still sourced.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; When Vim is invoked differently (&amp;quot;vim&amp;quot;, &amp;quot;view&amp;quot;, &amp;quot;evim&amp;quot;, ...) this file is&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; _not_ sourced; /etc/vim/vimrc and/or /etc/vim/gvimrc are.&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Debian system-wide default configuration Vim&lt;/span&gt;
&lt;span class="go"&gt;set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim82,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after&lt;/span&gt;

&lt;span class="go"&gt;set compatible&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; vim: set ft=vim:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Essentially, this configuration ensures that &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; (which invokes
&lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;) closely mimics the behavior of the original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;. Furthermore,
it automatically loads configuration files found under the &lt;tt class="docutils literal"&gt;$VIMRUNTIME&lt;/tt&gt;
directory, which includes both &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; and any configuration files
specified in the &lt;tt class="docutils literal"&gt;runtimepath&lt;/tt&gt; variable.&lt;/p&gt;
&lt;p&gt;In this specific case, it prioritizes the inclusion of
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;As a final touch, it enforces compatibility with the original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;, even if
other configuration files in the &lt;tt class="docutils literal"&gt;runtimepath&lt;/tt&gt; attempt to disable it, by
appending the &lt;tt class="docutils literal"&gt;set compatible&lt;/tt&gt; directive to the end of the configuration
file.&lt;/p&gt;
&lt;p&gt;In the absence of any other &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; versions installed on the system, &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;
will naturally point to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt; by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-la&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/vi
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 16 Oct 12  2022 /etc/alternatives/vi -&amp;gt; /usr/bin/vim.tiny&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conversely, if &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; is explicitly installed and invoked as &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, or via
aliases such as &lt;tt class="docutils literal"&gt;view&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;evim&lt;/tt&gt; (note that none of these aliases are
available in this minimal setup), the configuration files &lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;/etc/gvimrc&lt;/tt&gt; are activated and sourced.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; the call to :runtime you can find below.  If you wish to change any of those&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; settings, you should do it in this file (/etc/vim/vimrc), since debian.vim&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; will be overwritten everytime an upgrade of the vim packages is performed.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; It is recommended to make changes after sourcing debian.vim since it alters&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; the value of the &amp;#39;compatible&amp;#39; option.&lt;/span&gt;

&lt;span class="go"&gt;runtime! debian.vim&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; This happens after /etc/vim/vimrc(.local) are loaded, so it will override&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; any settings in these files.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; If you don&amp;#39;t want that to happen, uncomment the below line to prevent&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; defaults.vim from being loaded.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; let g:skip_defaults_vim = 1&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the next line to make Vim more Vi-compatible&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; NOTE: debian.vim sets &amp;#39;nocompatible&amp;#39;.  Setting &amp;#39;compatible&amp;#39; changes numerous&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; options, so any other options should be set AFTER setting &amp;#39;compatible&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set compatible&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Vim5 and later versions support syntax highlighting. Uncommenting the next&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; line enables syntax highlighting by default.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;syntax on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; If using a dark background within the editing area and syntax highlighting&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; turn on this option as well&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set background=dark&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the following to have Vim jump to the last position when&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; reopening a file&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;au BufReadPost * if line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;lt;= line(&amp;quot;$&amp;quot;) | exe &amp;quot;normal! g&amp;#39;\&amp;quot;&amp;quot; | endif&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the following to have Vim load indentation rules and plugins&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; according to the detected filetype.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;filetype plugin indent on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; The following are commented out as they cause vim to behave a lot&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; differently from regular Vi. They are highly recommended though.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set showcmd         &amp;quot; Show (partial) command in status line.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set showmatch               &amp;quot; Show matching brackets.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set ignorecase              &amp;quot; Do case insensitive matching&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set smartcase               &amp;quot; Do smart case matching&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set incsearch               &amp;quot; Incremental search&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set autowrite               &amp;quot; Automatically save before commands like :next and :make&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set hidden          &amp;quot; Hide buffers when they are abandoned&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set mouse=a         &amp;quot; Enable mouse usage (all modes)&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Source a global configuration file if available&lt;/span&gt;
&lt;span class="go"&gt;if filereadable(&amp;quot;/etc/vim/vimrc.local&amp;quot;)&lt;/span&gt;
&lt;span class="go"&gt;  source /etc/vim/vimrc.local&lt;/span&gt;
&lt;span class="go"&gt;endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we execute &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; in the command line, and subsequently issue the &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:echo $VIMRUNTIME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following output will be displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/usr/share/vim/vim82&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, when we execute the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:scriptnames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will display a list of all the script files that are loaded based on the
&lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt; configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  1: /usr/share/vim/vimrc&lt;/span&gt;
&lt;span class="go"&gt;  2: /usr/share/vim/vim82/debian.vim&lt;/span&gt;
&lt;span class="go"&gt;  3: /usr/share/vim/vim82/defaults.vim&lt;/span&gt;
&lt;span class="go"&gt;  4: /usr/share/vim/vim82/filetype.vim&lt;/span&gt;
&lt;span class="go"&gt;  5: /usr/share/vim/vim82/ftplugin.vim&lt;/span&gt;
&lt;span class="go"&gt;  6: /usr/share/vim/vim82/indent.vim&lt;/span&gt;
&lt;span class="go"&gt;  7: /usr/share/vim/vim82/syntax/syntax.vim&lt;/span&gt;
&lt;span class="go"&gt;  8: /usr/share/vim/vim82/syntax/synload.vim&lt;/span&gt;
&lt;span class="go"&gt;  9: /usr/share/vim/vim82/syntax/syncolor.vim&lt;/span&gt;
&lt;span class="go"&gt; 10: /usr/share/vim/vim82/plugin/getscriptPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 11: /usr/share/vim/vim82/plugin/gzip.vim&lt;/span&gt;
&lt;span class="go"&gt; 12: /usr/share/vim/vim82/plugin/logiPat.vim&lt;/span&gt;
&lt;span class="go"&gt; 13: /usr/share/vim/vim82/plugin/manpager.vim&lt;/span&gt;
&lt;span class="go"&gt; 14: /usr/share/vim/vim82/plugin/matchparen.vim&lt;/span&gt;
&lt;span class="go"&gt; 15: /usr/share/vim/vim82/plugin/netrwPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 16: /usr/share/vim/vim82/plugin/rrhelper.vim&lt;/span&gt;
&lt;span class="go"&gt; 17: /usr/share/vim/vim82/plugin/spellfile.vim&lt;/span&gt;
&lt;span class="go"&gt; 18: /usr/share/vim/vim82/plugin/tarPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 19: /usr/share/vim/vim82/plugin/tohtml.vim&lt;/span&gt;
&lt;span class="go"&gt; 20: /usr/share/vim/vim82/plugin/vimballPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 21: /usr/share/vim/vim82/plugin/zipPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt;Press ENTER or type command to continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If, for any reason, we have already created a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; file, the inclusion
of &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; will be skipped:&lt;/p&gt;
&lt;p&gt;Inside &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, upon executing the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:scriptnames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll observe that instead, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; takes precedence and gets sourced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  1: /usr/share/vim/vimrc&lt;/span&gt;
&lt;span class="go"&gt;  2: /usr/share/vim/vim82/debian.vim&lt;/span&gt;
&lt;span class="go"&gt;  3: ~/.vimrc&lt;/span&gt;
&lt;span class="go"&gt;  4: /usr/share/vim/vim82/syntax/syntax.vim&lt;/span&gt;
&lt;span class="go"&gt;  5: /usr/share/vim/vim82/syntax/synload.vim&lt;/span&gt;
&lt;span class="go"&gt;  6: /usr/share/vim/vim82/syntax/syncolor.vim&lt;/span&gt;
&lt;span class="go"&gt;  7: /usr/share/vim/vim82/filetype.vim&lt;/span&gt;
&lt;span class="go"&gt;  8: /usr/share/vim/vim82/ftplugin.vim&lt;/span&gt;
&lt;span class="go"&gt;  9: /usr/share/vim/vim82/indent.vim&lt;/span&gt;
&lt;span class="go"&gt; 10: /usr/share/vim/vim82/syntax/nosyntax.vim&lt;/span&gt;
&lt;span class="go"&gt; 11: /usr/share/vim/vim82/plugin/getscriptPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 12: /usr/share/vim/vim82/plugin/gzip.vim&lt;/span&gt;
&lt;span class="go"&gt; 13: /usr/share/vim/vim82/plugin/logiPat.vim&lt;/span&gt;
&lt;span class="go"&gt; 14: /usr/share/vim/vim82/plugin/manpager.vim&lt;/span&gt;
&lt;span class="go"&gt; 15: /usr/share/vim/vim82/plugin/matchparen.vim&lt;/span&gt;
&lt;span class="go"&gt; 16: /usr/share/vim/vim82/plugin/netrwPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 17: /usr/share/vim/vim82/plugin/rrhelper.vim&lt;/span&gt;
&lt;span class="go"&gt; 18: /usr/share/vim/vim82/plugin/spellfile.vim&lt;/span&gt;
&lt;span class="go"&gt; 19: /usr/share/vim/vim82/plugin/tarPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 20: /usr/share/vim/vim82/plugin/tohtml.vim&lt;/span&gt;
&lt;span class="go"&gt; 21: /usr/share/vim/vim82/plugin/vimballPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 22: /usr/share/vim/vim82/plugin/zipPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt;Press ENTER or type command to continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This implies that if we require specific settings from the
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; file, we should incorporate them into the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; configuration file.&lt;/p&gt;
&lt;p&gt;It's important to note that any configurations from &lt;tt class="docutils literal"&gt;/usr/share/vim/vimrc&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt; will be overridden by settings in
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc.&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Having this understanding, I now have clarity on what to adopt from
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; if the need arises.&lt;/p&gt;
&lt;p&gt;In the upcoming post, I will explain my choice of &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; versions available in
the Debian repository and the rationale behind my selection.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="deb11"></category><category term="debian"></category><category term="vi"></category></entry><entry><title>JOSM</title><link href="https://porfiriopaiz.github.io/site/posts/2021/07/22/josm.html" rel="alternate"></link><published>2021-07-22T20:46:00-06:00</published><updated>2021-07-22T20:46:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2021-07-22:/site/posts/2021/07/22/josm.html</id><summary type="html">&lt;p class="first last"&gt;The Java OpenStreetMap editor&lt;/p&gt;
</summary><content type="html">&lt;p&gt;JOSM is in my opinion the best editor for OpenStreetMap I have ever used and it
is also the best Java software I have ever used too.&lt;/p&gt;
&lt;p&gt;In this post, I will cover how to get it installed on Debian and how to
properly configure it for mapping on OSM and what plugins to install and use.&lt;/p&gt;
&lt;div class="section" id="installing-josm-on-debian"&gt;
&lt;h2&gt;Installing JOSM on Debian&lt;/h2&gt;
&lt;p&gt;JOSM is available on the Debian official repository, so for its installation,
you just need to open a terminal and type the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install josm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="solving-josm-outdated-version-on-debian"&gt;
&lt;h2&gt;Solving JOSM outdated version on Debian&lt;/h2&gt;
&lt;p&gt;Installing JOSM from the official Debian repositories solves the dependency
issue we would find if we ran the most up-to-date version from the official
.jar build.&lt;/p&gt;
&lt;p&gt;To run the most up-to-date stable version we need to download it from the
official JOSM website as a JAR file, but first, we need to run at least once
the version is installed from the Debian repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;josm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is going to create the next directory structure associated with it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;~/.config/JOSM&lt;/span&gt;
&lt;span class="go"&gt;~/.cache/JOSM&lt;/span&gt;
&lt;span class="go"&gt;~/.local/share/JOSM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.cache/JOSM/&lt;/span&gt;&lt;/tt&gt; will create a directory named &lt;tt class="docutils literal"&gt;jar&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir -p ~/.cache/JOSM/jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let us move to that directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/.cache/JOSM/jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's download the most up to date version of the JOSM editor using wget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://josm.openstreetmap.de/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to run the new version up to date version, we download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;java -jar ~/.cache/JOSM/jar/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="script-launcher"&gt;
&lt;h2&gt;Script launcher&lt;/h2&gt;
&lt;p&gt;To launch the JAR file, we can add the last command to a file with executable
permissions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;touch ~/.local/bin/tested-josm.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add the following to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;/bin/bash
&lt;span class="go"&gt;java -jar ~/.cache/JOSM/jar/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-a-launcher"&gt;
&lt;h2&gt;Adding a launcher&lt;/h2&gt;
&lt;p&gt;To make this easier, let's create a launcher for the manually downloaded JOSM
JAR file and previously created script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;touch ~/.local/share/applications/org.openstreetmap.josm.desktop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="go"&gt;Type=Application&lt;/span&gt;
&lt;span class="go"&gt;Version=1.0&lt;/span&gt;
&lt;span class="go"&gt;Name=JOSM Tested&lt;/span&gt;
&lt;span class="go"&gt;GenericName=Java OpenStreetMap Editor&lt;/span&gt;
&lt;span class="go"&gt;Comment=Extensible off-line editor for OpenStreetMap (OSM)&lt;/span&gt;
&lt;span class="go"&gt;Icon=org.openstreetmap.josm&lt;/span&gt;
&lt;span class="go"&gt;Exec=/home/pionen/.local/bin/tested-josm.sh&lt;/span&gt;
&lt;span class="go"&gt;Terminal=false&lt;/span&gt;
&lt;span class="go"&gt;MimeType=application/x-osm+xml;application/x-gpx+xml;application/geo+json;application/x-josm-session+xml;application/x-josm-session+zip;x-scheme-handler/geo;&lt;/span&gt;
&lt;span class="go"&gt;StartupNotify=true&lt;/span&gt;
&lt;span class="go"&gt;Categories=Education;Geoscience;Maps;&lt;/span&gt;
&lt;span class="go"&gt;StartupWMClass=org-openstreetmap-josm-MainApplication&lt;/span&gt;
&lt;span class="go"&gt;Keywords=OpenStreetMap;OSM;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next time you restart your computer, you will find the new launcher, and by
just clicking on it, you will start the most up-to-date version of JOSM on
Debian.&lt;/p&gt;
&lt;/div&gt;
</content><category term="gis"></category><category term="deb11"></category><category term="debian"></category><category term="josm"></category></entry><entry><title>Mate Desktop on Debian</title><link href="https://porfiriopaiz.github.io/site/posts/2021/07/22/mate-desktop-on-debian.html" rel="alternate"></link><published>2021-07-22T19:11:00-06:00</published><updated>2021-07-22T19:11:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2021-07-22:/site/posts/2021/07/22/mate-desktop-on-debian.html</id><summary type="html">&lt;p class="first last"&gt;Mate Desktop config on my Debian setup&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="mate-desktop-tips-and-tricks"&gt;
&lt;h2&gt;Mate Desktop Tips and Tricks&lt;/h2&gt;
&lt;p&gt;Notify discharging of the battery:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.power-manager notify-discharging true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable windows composing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general compositing-manager true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable new window centering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general center-new-windows true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable window snapping:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general allow-tiling true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hide all desktop icons:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.background show-desktop-icons false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change window decoration button order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general button-layout &amp;#39;close,maximize,minimize:menu&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automount-open:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount-open false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caja default prefereces for sorting order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences default-sort-order &amp;#39;type&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caja sort directories first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences sort-directories-first true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set icon theme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.interface icon-theme &amp;#39;gnome&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set GTK theme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.interface gtk-theme &amp;#39;Arc-Dark&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set GTK windows border theme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general theme &amp;#39;Arc-Dark&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="deb11"></category><category term="debian"></category><category term="mate-desktop"></category></entry><entry><title>UTC</title><link href="https://porfiriopaiz.github.io/site/posts/2021/07/15/utc.html" rel="alternate"></link><published>2021-07-15T20:53:00-06:00</published><updated>2021-07-15T20:53:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2021-07-15:/site/posts/2021/07/15/utc.html</id><summary type="html">&lt;p class="first last"&gt;Set Local time, RTC time and Time zone to UTC&lt;/p&gt;
</summary><content type="html">&lt;p&gt;When I was installing Debian on my Lenovo ThinkPad T440p I could not find the
option to setup the local time, RTC time and the Time zone to UTC as the
default configuration.&lt;/p&gt;
&lt;p&gt;To fix this I need to run the next commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This lists the current configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;timedatectl
&lt;span class="go"&gt;               Local time: Thu 2021-07-15 14:45:28 CST&lt;/span&gt;
&lt;span class="go"&gt;           Universal time: Thu 2021-07-15 20:45:28 UTC&lt;/span&gt;
&lt;span class="go"&gt;                 RTC time: Thu 2021-07-15 20:44:47&lt;/span&gt;
&lt;span class="go"&gt;                Time zone: America/Managua (CST, -0600)&lt;/span&gt;
&lt;span class="go"&gt;System clock synchronized: yes&lt;/span&gt;
&lt;span class="go"&gt;              NTP service: active&lt;/span&gt;
&lt;span class="go"&gt;          RTC in local TZ: yes&lt;/span&gt;

&lt;span class="go"&gt;Warning: The system is configured to read the RTC time in the local time zone.&lt;/span&gt;
&lt;span class="go"&gt;         This mode cannot be fully supported. It will create various problems&lt;/span&gt;
&lt;span class="go"&gt;         with time zone changes and daylight saving time adjustments. The RTC&lt;/span&gt;
&lt;span class="go"&gt;         time is never updated, it relies on external facilities to maintain it.&lt;/span&gt;
&lt;span class="go"&gt;         If at all possible, use RTC in UTC by calling&lt;/span&gt;
&lt;span class="go"&gt;         &amp;#39;timedatectl set-local-rtc 0&amp;#39;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First of all let's update the RTC in UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl set-local-rtc 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then let's set the time zone and the local time zone to UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl set-timezone UTC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now our system will be set entirely to be in sync with UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;timedatectl
&lt;span class="go"&gt;               Local time: Thu 2021-07-15 21:31:52 UTC&lt;/span&gt;
&lt;span class="go"&gt;           Universal time: Thu 2021-07-15 21:31:52 UTC&lt;/span&gt;
&lt;span class="go"&gt;                 RTC time: Thu 2021-07-15 21:31:52&lt;/span&gt;
&lt;span class="go"&gt;                Time zone: UTC (UTC, +0000)&lt;/span&gt;
&lt;span class="go"&gt;System clock synchronized: yes&lt;/span&gt;
&lt;span class="go"&gt;              NTP service: active&lt;/span&gt;
&lt;span class="go"&gt;          RTC in local TZ: no&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="floss"></category><category term="deb11"></category><category term="debian"></category><category term="timedatectl"></category><category term="utc"></category></entry><entry><title>K8</title><link href="https://porfiriopaiz.github.io/site/posts/2021/07/14/k8.html" rel="alternate"></link><published>2021-07-14T17:37:00-06:00</published><updated>2021-07-14T17:37:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2021-07-14:/site/posts/2021/07/14/k8.html</id><summary type="html">&lt;p class="first last"&gt;Swap from multimedia keys to function keys as the primary option&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Back in February Guido van Rossum posted on Twitter a picture of his desk with
a large mouse pad.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/gvanrossum/status/1365796969617104897/"&gt;https://twitter.com/gvanrossum/status/1365796969617104897/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What got my attention from this picture was the keyboard, down on the comment
section I found the manufacturer and model of this keyboard.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.keychron.com/products/keychron-k8-tenkeyless-wireless-mechanical-keyboard?variant=32018253021273"&gt;https://www.keychron.com/products/keychron-k8-tenkeyless-wireless-mechanical-keyboard?variant=32018253021273&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have always wanted to give a try to mechanical keyboards, but never knew
exactly which one to get or try. Seeing that this is the preferred one from a
respectable developer I decided to go for this same model.&lt;/p&gt;
&lt;p&gt;The very specific configuration I wanted was not available at the time I was
ordering it, so I subscribed myself to get a notification via email when the
same configuration became available again.&lt;/p&gt;
&lt;p&gt;I ordered mine in June 3rd, the keyboard was shipped from Hong Kong to Miami
and arrived in the next 5 days. And the keyboard arrived to Nicaragua 25 days
after.&lt;/p&gt;
&lt;p&gt;The first thing I tried to do was to setup the keyboard with my T440p running
Debian 11 Bullseye via Bluetooth, for this I installed Blueman, which provides
a Mate applet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install blueman&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the switches from the keyboard as Windows and Bluetooth, the Blueman
applet running and following the instructions booklet included on the box, I
was able to pair my Keychron K8 via Bluetooth with my T440p running Debian.&lt;/p&gt;
&lt;p&gt;I had to manually add my keyboard as a new device with the applet and then pair
both devices.&lt;/p&gt;
&lt;p&gt;Over Bluetooth and on Windows mode the swap from multimedia keys to function
keys did work, but on wired mode this did not work.&lt;/p&gt;
&lt;p&gt;I found some hints on how to fix this on the official Facebook support group
for Linux users of Keychron, that led me to this very specific command that has
to be run on every start up so that the primary option for the F1 to F12 keys
to become functions keys instead of multimedia keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo 0 | sudo tee /sys/module/hid_apple/parameters/fnmode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Later I found this documentation that provides at least 3 different ways to
make sure this command is executed on every start up:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://help.ubuntu.com/community/AppleKeyboard#Change_Function_Key_behavior"&gt;https://help.ubuntu.com/community/AppleKeyboard#Change_Function_Key_behavior&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From the 3 options listed there I decided to go for the one that makes use of
the sysfs.conf file. So I installed &lt;tt class="docutils literal"&gt;sysfsutils&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install sysfsutils&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And added this line at the end of the file &lt;strong&gt;/etc/sysfs.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;module/hid_apple/parameters/fnmode = 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restarted the computer and then while in cable and Windows mode I pressed the
key combination:&lt;/p&gt;
&lt;p&gt;Fn + x + l&lt;/p&gt;
&lt;p&gt;After doing this the primary option for the F1 to F12 key will be the functions
keys instead of the multimedia keys.&lt;/p&gt;
&lt;p&gt;To modify the screen brightness, to turn on and off the keyboard backlight,
mute and unmute the audio you must press the Fn key plus the function key (Fn +
F1 or Fn + F2) and that should allows you to continue using your K8 on Linux
with the switches in Windows/Android mode, in wired or Bluetooth mode with the
Functions key as the primary option instead of the multimedia keys.&lt;/p&gt;
</content><category term="floss"></category><category term="deb11"></category><category term="debian"></category><category term="keychron"></category><category term="k8"></category></entry><entry><title>Setup Debian keyboard layout and distribution</title><link href="https://porfiriopaiz.github.io/site/posts/2021/07/14/kb-layout-and-distribution.html" rel="alternate"></link><published>2021-07-14T16:38:00-06:00</published><updated>2021-07-14T16:38:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2021-07-14:/site/posts/2021/07/14/kb-layout-and-distribution.html</id><summary type="html">&lt;p class="first last"&gt;How to setup English International with AltGr dead keys&lt;/p&gt;
</summary><content type="html">&lt;p&gt;During the Debian installation process we are offered to setup our keyboard
layout and distribution; sadly my favorite one is not listed as one the
possible options.&lt;/p&gt;
&lt;p&gt;I would like to be able to set it up as English International with AltGr dead
keys.&lt;/p&gt;
&lt;p&gt;This is something I have to do as a post-install setting by running the next
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;localectl set-x11-keymap us thinkpad altgr-intl&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This sets the layout as English US; the model compatible with my Lenovo
ThinkPad T440p; the variant as Dead keys via AltGr, which means I can input
characters as á or ñ by just pressing: AltGr + a or AltGr + n respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;localectl
&lt;span class="go"&gt;System Locale: LANG=en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;               LANGUAGE=en_US:en&lt;/span&gt;
&lt;span class="go"&gt;    VC Keymap: n/a&lt;/span&gt;
&lt;span class="go"&gt;   X11 Layout: us&lt;/span&gt;
&lt;span class="go"&gt;    X11 Model: thinkpad&lt;/span&gt;
&lt;span class="go"&gt;  X11 Variant: altgr-intl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way I can continue using the English US keyboard layout when writing in
either English or Spanish without having to change the variant or physical
layout.&lt;/p&gt;
</content><category term="floss"></category><category term="deb11"></category><category term="debian"></category><category term="distribution"></category><category term="keyboard"></category><category term="layout"></category></entry><entry><title>KeePassXC, the password manager</title><link href="https://porfiriopaiz.github.io/site/posts/2017/11/17/keepassxc-password-manager.html" rel="alternate"></link><published>2017-11-17T19:10:00-06:00</published><updated>2017-11-17T19:10:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2017-11-17:/site/posts/2017/11/17/keepassxc-password-manager.html</id><summary type="html">&lt;p class="first last"&gt;A password manager Free and secure.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;KeePassXC is one of the first programs that I install after the first boot of
any fresh install.&lt;/p&gt;
&lt;p&gt;In the next post I will show how to install KeePassXC on Fedora and Debian, its
use and how it makes easier the management of hundreds of accounts and the
associated passwords, and how to generate secure passwords with the highest
levels of entropy.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="section" id="fedora"&gt;
&lt;h3&gt;Fedora&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install keepassxc&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install keepassx&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-password-database"&gt;
&lt;h2&gt;Create a password database&lt;/h2&gt;
&lt;p&gt;The first thing we must do is create our first database in which we will keep
all the passwords that we generate for each account.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Execute KeePassXC:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-38-49.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a new database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-31-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Assign a name to the &lt;cite&gt;*.kdbx&lt;/cite&gt; file, our database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-02-29.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It is time to assign a password, this will be the master password that We
will use to decrypt the file &lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, we click on &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-09-07.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To add a new account and its respective password, click on the icon of the
&lt;cite&gt;Key&lt;/cite&gt; with a green arrow:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-20_16-37-51.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add a title to identify what this password corresponds to, add the username
to which the password We are going to create will belong:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-15-14.png" /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Then click on the black dots icon, notice how a new menu with options is
displayed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Click on the password tab, increase the amount of characters desired for
our password, the more characters the higher the entropy level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In the &lt;strong&gt;Characters Types&lt;/strong&gt; section, We can select the different groups of
characters We want to be present in our password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Characters from &lt;cite&gt;A&lt;/cite&gt; to &lt;cite&gt;Z&lt;/cite&gt;, in capital letters: &lt;cite&gt;A-Z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;cite&gt;a&lt;/cite&gt; to &lt;cite&gt;z&lt;/cite&gt;, in lower case: &lt;cite&gt;a-z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Numbers: &lt;cite&gt;0-9&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Special characters: &lt;cite&gt;/*_ ...&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Characters from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Extended_ASCII"&gt;Extended ASCII&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I marked them all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;With the mouse scroll go down and mark with a check:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Exclude look alike characters&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pick characters from every group&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Finally click &lt;tt class="docutils literal"&gt;Generate&lt;/tt&gt; to generate the password with the combination
of selected characters and then &lt;tt class="docutils literal"&gt;Copy&lt;/tt&gt; to copy the password to the
clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-17-30.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Now pressing &lt;cite&gt;Ctrl-v&lt;/cite&gt; paste the password in the &lt;strong&gt;Password&lt;/strong&gt; field and
&lt;cite&gt;Ctrl-V&lt;/cite&gt; in &lt;strong&gt;Repeat&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-18.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;By clicking on the &lt;cite&gt;eye&lt;/cite&gt; icon we can reveal the password we have generated,
copied and pasted in the &lt;strong&gt;Password&lt;/strong&gt; and &lt;strong&gt;Repeat&lt;/strong&gt; fields, click &lt;cite&gt;Apply&lt;/cite&gt;
and then &lt;cite&gt;OK&lt;/cite&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-31.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note the asterisk in the upper border of the window at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt;, this means that the changes have not been saved in the
database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-58.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Click on the icon of the blue file to save the changes in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-21-04.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Note that the asterisk at the top edge of the screen at the end of
&lt;cite&gt;Passwords.kdbx&lt;/cite&gt; has disappeared, this means that the changes have already
been saved in the database:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-19-03.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="useful-keyboard-shortcuts"&gt;
&lt;h2&gt;Useful keyboard shortcuts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;b&lt;/strong&gt; Copy the user to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;c&lt;/strong&gt; Copy the user's password to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;e&lt;/strong&gt; Open the menu to make modifications to the different accounts
that we have in our database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;n&lt;/strong&gt; Allows you to add a new account to the database.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="self-writing-shortcut"&gt;
&lt;h2&gt;Self-writing shortcut&lt;/h2&gt;
&lt;p&gt;This keyboard shortcut is my favorite. It allows you to write the user and
password of an entry in our database directly to the page where that user and
password is used, so it is not necessary to use three shortcuts to achieve the
same result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In order for it to work as it should, both KeePassXC and the field where the
user and password are introduced, must be a shot away from &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By this I mean that if you press &lt;strong&gt;Alt&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; you should move from the
&lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window to the browser window, for example:&lt;/p&gt;
&lt;p&gt;Note that the account has a URL linked:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-56-04.png" /&gt;
&lt;p&gt;Go to our &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt;, we select the entry of our database that corresponds
to the account in which we want to log in.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;u&lt;/strong&gt; to open the tab in which you will log in, this will open the
browser that we have configured as our default Web Browser, this page is
configured to locate the keyboard entry in the user field.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-35-24.png" /&gt;
&lt;p&gt;Press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atl&lt;/strong&gt; - &lt;strong&gt;Tab&lt;/strong&gt; to select the &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; window back:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-55-41.png" /&gt;
&lt;p&gt;And then, making sure We still have selected the same entry in the database,
press:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ctrl&lt;/strong&gt; - &lt;strong&gt;v&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_17-01-06.png" /&gt;
&lt;p&gt;The final result should make &lt;tt class="docutils literal"&gt;KeePassXC&lt;/tt&gt; return to the browser, insert the
user, jump to the next field, insert the password, to finally and automatically
&amp;quot;press&amp;quot; &lt;tt class="docutils literal"&gt;Log In&lt;/tt&gt; and log in.&lt;/p&gt;
&lt;p&gt;I hope this post is useful for you.&lt;/p&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="debian"></category><category term="fc27"></category><category term="fedora"></category><category term="keepassxc"></category><category term="password"></category></entry></feed>