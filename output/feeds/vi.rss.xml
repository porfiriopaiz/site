<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>porfirio's blog - vi</title><link>https://porfiriopaiz.github.io/site/</link><description></description><lastBuildDate>Mon, 31 Oct 2022 03:32:00 -0600</lastBuildDate><item><title>vi</title><link>https://porfiriopaiz.github.io/site/posts/2022/10/31/vi.html</link><description>&lt;div class="section" id="understanding-vi-and-vim-on-debian"&gt;
&lt;h2&gt;Understanding &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; on Debian&lt;/h2&gt;
&lt;p&gt;Since 2011, I have steadfastly embraced &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; as my primary text editor. My
journey into mastering the command-line interface and transitioning away from
the comfort of the graphical user interface began early. Among the foundational
skills I sought to acquire, efficient text file editing was one of the first.&lt;/p&gt;
&lt;p&gt;Surprisingly, the exact catalyst that led me to embrace &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; has faded into
the distant recesses of my memory. Nevertheless, over eleven years later, my
loyalty to &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; remains unwavering. It has been a constant companion
throughout my journey, and I have never strayed into the world of alternative
text editors. I have even used &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; for basic Python programming tasks,
underscoring its versatility and enduring utility in my daily computing
endeavors.&lt;/p&gt;
&lt;p&gt;In this post, I will delve into the intricacies of how Debian manages the
functionality of &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; in a basic, uncustomized Debian
installation.&lt;/p&gt;
&lt;p&gt;My objective is to gain a profound understanding of the default behavior of
&lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; in their most minimalist configurations, as presented
immediately after a fresh Debian installation.&lt;/p&gt;
&lt;p&gt;It's worth noting that Debian does not include &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; by default in this
setup. I opted for a network installation using the minimal tasksel profile,
selecting only the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;mate-desktop-environment&lt;/span&gt;&lt;/tt&gt; package. This highlights one of
the aspects I greatly appreciate about Debian—its commitment to providing
essential software components while allowing users to shape and personalize
their tools and environments without presumption.&lt;/p&gt;
&lt;div class="section" id="vi-1"&gt;
&lt;h3&gt;&lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;A pristine Debian installation includes only the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-tiny&lt;/span&gt;&lt;/tt&gt; package. Within
this package, two critical configuration files are stored in &lt;tt class="docutils literal"&gt;/etc/vim/&lt;/tt&gt;:
&lt;tt class="docutils literal"&gt;vimrc&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This setup is intentionally minimalist, devoid of any symbolic links, aliases,
or binary files associated with &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;. The only alias present is &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;,
which is linked to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;When &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; is invoked, it calls &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;, which, by default, sources the
file located at &lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Now, let's explore the contents of the &lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; Vim configuration file in effect when invoked as &amp;#39;vi&amp;#39;. This configuration&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; aims to provide a Vim environment as compatible with the original &amp;#39;vi&amp;#39; as possible.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Note that ~/.vimrc and other runtimepath configuration files are still sourced.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; When Vim is invoked as &amp;#39;vim&amp;#39;, &amp;#39;view&amp;#39;, &amp;#39;evim&amp;#39;, etc., this file is _not_ sourced.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; In such cases, /etc/vim/vimrc and/or /etc/vim/gvimrc are used.&lt;/span&gt;

&lt;span class="go"&gt;set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim82,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after&lt;/span&gt;
&lt;span class="go"&gt;set compatible&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; vim: set ft=vim:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This configuration ensures that &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; (invoking &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;) mimics the
original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;. It also loads configuration files from the &lt;tt class="docutils literal"&gt;$VIMRUNTIME&lt;/tt&gt;
directory, including &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; and other runtimepath files. Specifically, it
prioritizes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, the &lt;tt class="docutils literal"&gt;set compatible&lt;/tt&gt; directive ensures compatibility with the
original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;, even if other configurations attempt to disable it.&lt;/p&gt;
&lt;p&gt;By default, &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; links to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-la&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/vi
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 16 Oct 12  2022 /etc/alternatives/vi -&amp;gt; /usr/bin/vim.tiny&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; is explicitly installed, additional aliases (e.g., &lt;tt class="docutils literal"&gt;view&lt;/tt&gt; or
&lt;tt class="docutils literal"&gt;evim&lt;/tt&gt;) and configuration files, such as &lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;/etc/gvimrc&lt;/tt&gt;, become active. These configurations enable enhanced features:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;runtime! debian.vim&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Uncomment below to make Vim more Vi-compatible.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; set compatible&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Syntax highlighting example:&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; syntax on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Enable additional plugins or rules:&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; filetype plugin indent on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment to remember the last position in a file:&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; au BufReadPost * if line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;lt;= line(&amp;quot;$&amp;quot;) | exe &amp;quot;normal! g&amp;#39;\&amp;quot;&amp;quot; | endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When using &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, you can check the runtime path and sourced scripts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:echo $VIMRUNTIME&lt;/span&gt;
&lt;span class="go"&gt;/usr/share/vim/vim82&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:scriptnames&lt;/span&gt;
&lt;span class="go"&gt;1: /usr/share/vim/vimrc&lt;/span&gt;
&lt;span class="go"&gt;2: /usr/share/vim/vim82/debian.vim&lt;/span&gt;
&lt;span class="go"&gt;3: ~/.vimrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This confirms that user-defined configurations in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; override
defaults. Any required settings from &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt;
should be manually incorporated into &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; if needed.&lt;/p&gt;
&lt;p&gt;In the next post, I will explain my choice of &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; versions available in the
Debian repository and the rationale behind my selection.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Mon, 31 Oct 2022 03:32:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2022-10-31:/site/posts/2022/10/31/vi.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>vi</category></item></channel></rss>