<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>porfirio's blog - dnf</title><link href="https://porfiriopaiz.github.io/site/" rel="alternate"></link><link href="https://porfiriopaiz.github.io/site/feeds/dnf.atom.xml" rel="self"></link><id>https://porfiriopaiz.github.io/site/</id><updated>2018-12-09T21:26:00-06:00</updated><entry><title>i3 post install</title><link href="https://porfiriopaiz.github.io/site/posts/2018/12/09/i3-post-install.html" rel="alternate"></link><published>2018-12-09T21:26:00-06:00</published><updated>2018-12-09T21:26:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2018-12-09:/site/posts/2018/12/09/i3-post-install.html</id><summary type="html">&lt;p class="first last"&gt;Fedora 29 i3 window manager post-install&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After installing Fedora 29 with i3 window manager, we need to install many
other programs that will ease our user experience.&lt;/p&gt;
&lt;p&gt;The first problem we have to solve is how are we going to connect to Internet,
you might have noticed that we don't have any program or applet that allows us
to activate the Wi-Fi card or even the NetworkManager service to use the wired
wetwork card or manage the different networks that are within our reach.&lt;/p&gt;
&lt;p&gt;Assuming that you are already logged in and that your hardware is supported by
Fedora, the wireless network card should be activated, but how do we connect to
any of the networks we have available?&lt;/p&gt;
&lt;div class="section" id="nmcli"&gt;
&lt;h2&gt;nmcli&lt;/h2&gt;
&lt;p&gt;In the previous post we installed a set of packages provided by the group
&amp;quot;Hardware Support&amp;quot;, this group provides support for a wide variety of
networking hardware.  We also install the group of packages corresponding to
NetworkManager.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt; is a command-line program that will allow us to activate by software
the network hardware of our device, scan the networks that are around us and
connect to them.&lt;/p&gt;
&lt;p&gt;We will need a terminal, by pressing &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; we get a Terminal.&lt;/p&gt;
&lt;p&gt;If our device has a switch that allows to activate or deactivate the
network card, we make sure it is activated.&lt;/p&gt;
&lt;p&gt;Then on the terminal we execute the following command to verify that it is
already activated by software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli networking on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate the wired network connection of our device in case we were
accessing one and we wanted to use it.&lt;/p&gt;
&lt;p&gt;To activate the wireless network hardware from the terminal, we execute the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli radio wifi on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate our network card, then we verify which are the networks
that we have available at our reach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;IN-USE  SSID           MODE   CHAN  RATE        SIGNAL  BARS  SECURITY&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  5     130 Mbit/s  100     ▂▄▆█  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  1     130 Mbit/s  29      ▂___  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_3     Infra  1     54 Mbit/s   17      ▂___  WPA1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case you need to scan again to verify other connections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi rescan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming that &lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; does not require an access password, to get
connected we just execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case that we might need to provide a password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1 password &amp;quot;1234567890&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; is the task we want to accomplish.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; this argument tells the network we want to get connected.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;password&lt;/tt&gt; a parameter that tells we are going to provide a password to
get authenticated.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;1234567890&lt;/tt&gt; this is the argument passed for the previous parameter, the
password of the nextwork. Here you must provided the password that works for
you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By now, you should be connected to the network. Now proceed to install any
other program that will help you to ease you user experience with i3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networks"&gt;
&lt;h2&gt;Networks&lt;/h2&gt;
&lt;div class="section" id="mn-applet"&gt;
&lt;h3&gt;mn-applet&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; is a very simple applet for NetworkManager that allows us to do
in a very easy and intuitive way what we did with &lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt;, but in a graphical
way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-applet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; press &amp;lt;Start&amp;gt; + &amp;lt;d&amp;gt; and type &lt;cite&gt;nm-applet&lt;/cite&gt; and press
&amp;lt;Enter&amp;gt;. In the lower right corner of our screen should appear an icon
corresponding to this &lt;cite&gt;applet&lt;/cite&gt; from where we can manage our connection to the
different networks that we have available to around us.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networkmanager-tui"&gt;
&lt;h3&gt;NetworkManager-tui&lt;/h3&gt;
&lt;p&gt;This is an alternative for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; that make use of &lt;tt class="docutils literal"&gt;ncurses&lt;/tt&gt; to create
a very friendly &lt;cite&gt;Text User Interface&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install NetworkManager-tui&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nm-connecion-editor"&gt;
&lt;h3&gt;nm-connecion-editor&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;NetworkManager Connection Editor&lt;/cite&gt; allows us to edit in a friendly way and
intuitively the different networks to which we have accessed, or Well, create
Hotspots in case our network card supports it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-connection-editor&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="terminal-emulator"&gt;
&lt;h2&gt;Terminal Emulator&lt;/h2&gt;
&lt;p&gt;You may have noticed that the emulator that is installed by default with i3 is
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rxvt-unicode&lt;/span&gt;&lt;/tt&gt; and that is not very friendly to say, it is not very
intuitive to first sight and it has a certain learning curve that we do not
want to go through, possibly...&lt;/p&gt;
&lt;p&gt;Ironically, my favorite terminal emulator is GNOME Terminal, you can install
the one you prefer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; has the key combination &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; assigned to the emulator
&lt;tt class="docutils literal"&gt;urxvt&lt;/tt&gt;, to launch GNOME Terminal instead, you need to edit the configuration
file for  &lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.config/i3/config&lt;/span&gt;&lt;/tt&gt;), look for the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec i3-sensible-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And replace with the command that calls our terminal emulator, in my case,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-terminal&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec gnome-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the following post I will share what other programs I use in my setup Fedora
29 with i3wm. At the moment you already have the necessary to install other
interesting programs such as Web browser and others.&lt;/p&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="dnf"></category><category term="fc29"></category><category term="fedora"></category><category term="postinstall"></category></entry><entry><title>i3</title><link href="https://porfiriopaiz.github.io/site/posts/2018/11/29/i3.html" rel="alternate"></link><published>2018-11-29T02:53:00-06:00</published><updated>2018-11-29T02:53:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2018-11-29:/site/posts/2018/11/29/i3.html</id><summary type="html">&lt;p class="first last"&gt;Improved tiling wm&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In this post I will explain how to do a Fedora 29 installation with the i3
window manager. It is common to see installation guides for i3, but they assume
that you already have another desktop environment previously installed.&lt;/p&gt;
&lt;p&gt;In this post we will see how to build a fully functional environment from a
minimal installation as I have explained in other publications.&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-medium"&gt;
&lt;h2&gt;Creating an installation medium&lt;/h2&gt;
&lt;div class="section" id="download-the-iso-fedora-everything-netinstall"&gt;
&lt;h3&gt;Download the ISO Fedora Everything Netinstall&lt;/h3&gt;
&lt;p&gt;From the site: &lt;a class="reference external" href="https://alt.fedoraproject.org/"&gt;https://alt.fedoraproject.org/&lt;/a&gt; download the file of the All
section, this is an ISO that works as a means of installation by network that
downloads all the packages that will be part of the system from the Internet,
as well as gives the option to choose which package collections to install,
unlike Lives media whose software selection has been previously defined.&lt;/p&gt;
&lt;p&gt;Download the ISO with wget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-29-1.2.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also download the integrity check file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check the integrity of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-the-installation-media-with-fedora-media-writer"&gt;
&lt;h3&gt;Create the installation media with Fedora Media Writer&lt;/h3&gt;
&lt;p&gt;Fedora Media Writer is available for different operating systems, download the
corresponding one.&lt;/p&gt;
&lt;p&gt;It is very important to create the installation medium with Fedora Media Writer
since this tool guarantees that the installation medium will have support to
boot on computers that have both UEFI or BIOS.&lt;/p&gt;
&lt;p&gt;How it will start will depend on which of the two has the highest priority
during startup. I always use UEFI only, so all my systems are installed in UEFI
mode.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1"&gt;https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Fedora Media Writer is installed on our computer, we connect our USB
memory, run Fedora Media Writer and use the Custom Image option to navigate to
the path where the ISO is, the one we just downloaded, select it, select
carefully the USB memory we will use and record the image in the USB memory.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;I have followed the installation steps described in this previous post, making
sure I have access to a wireless network or a wired network.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html"&gt;https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time I had to use my mobile phone, although it is true I had access to a
wireless network during the installation of the base system (Fedora Custom
Install), after installation the packages collection of does not provide the
network drivers required to access wireless networks since they are not
included in the Custom Install selection.&lt;/p&gt;
&lt;p&gt;That's why I created a wired network via USB with my mobile phone. To make it
work you have to make sure of the following right after the first boot once the
installation finishes:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Log in in the system.&lt;/li&gt;
&lt;li&gt;Connect the USB cable to the computer.&lt;/li&gt;
&lt;li&gt;Connect the other end to the mobile phone.&lt;/li&gt;
&lt;li&gt;Make sure the phone is connected to a wireless network or that the data plan
is activated. As a note, consider that you need at least 800MB of data in
RPM packages that must be downloaded for a minimum installation of Fedora
with support for the graphical environment with i3wm.&lt;/li&gt;
&lt;li&gt;Make sure the phone is in USB or MTP data transfer mode.&lt;/li&gt;
&lt;li&gt;Activate a wired network or Tethered Wired Network from your mobile phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After this, you should have access to the Internet. Check it by pinging Google:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ping 8.8.8.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-configurations"&gt;
&lt;h2&gt;Basic configurations&lt;/h2&gt;
&lt;div class="section" id="configuring-dnf"&gt;
&lt;h3&gt;Configuring dnf&lt;/h3&gt;
&lt;p&gt;The next step is optional, as root, the first thing I do is configure dnf, so
that it uses the most efficient packages mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I disable the use of deltarpm's for future updates. If you prefer to
reduce the amount of data to be downloaded in each of the future updates, skip
this step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I always keep each of the packages from which any program is installed on my
system, including those that are downloaded as part of the updates and to
maintain the packages cache throughout the period I use a Fedora release. This
step is optional and you can skip it if you want:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I proceed to disable a service and a dnf timer. The service makes sure to
refresh the metadata cache to be able to make checks on the versions of the
packages that are in the repos and then check if there are updates available.
The timer is responsible for executing the service periodically.&lt;/p&gt;
&lt;p&gt;I always disable both to avoid annoying bandwidth consumptions and dnf locks
while the cache is refreshed. If you have a limited bandwidth or data plan this
will help you reduce the consumption of it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally to make sure that the changes take effect we must restart:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regenerate-the-cache-and-install-available-updates"&gt;
&lt;h3&gt;Regenerate the cache and install available updates&lt;/h3&gt;
&lt;p&gt;During the installation, you may have omitted to check the option that allows
you to install the most recent version of the mirrors packages, so your system
could be outdated even if you have used the network installation medium.&lt;/p&gt;
&lt;p&gt;To apply the most recent updates and use the most efficient mirrors it is
necessary to regenerate the metadata cache.&lt;/p&gt;
&lt;p&gt;Fedora maintains a cache for each user, one for the root user, another for the
normal user, in my case pionen. So we must regenerate both caches if you want
to perform tasks as administrator or simple queries that do not require
administrator privileges:&lt;/p&gt;
&lt;p&gt;As a normal non-root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, as a normal non-root user, we execute the following commands, where we
pass the statement in quotes as a parameter to the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We check for available updates and enter our root password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are updates available, we apply them with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If updates have been applied, it is recommended to restart the system in order
to make use of the most recent version of all the programs, for example the
kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-i3"&gt;
&lt;h2&gt;Installing i3&lt;/h2&gt;
&lt;p&gt;Now, the step by step with all the requirements for a Fedora 29 minimal
installation with i3wm.&lt;/p&gt;
&lt;p&gt;For it we will make use of packages collections that have been grouped in a
very specialized way. Next commands must be executed as root user.&lt;/p&gt;
&lt;div class="section" id="common-networkmanager-submodules"&gt;
&lt;h3&gt;Common NetworkManager Submodules&lt;/h3&gt;
&lt;p&gt;This group contains NetworkManager submodules that are commonly used, but may
not be wanted in some streamlined configurations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install networkmanager-submodules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="core"&gt;
&lt;h3&gt;Core&lt;/h3&gt;
&lt;p&gt;Smallest possible installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install core&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dial-up-networking-support"&gt;
&lt;h3&gt;Dial-up Networking Support&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install dial-up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fonts"&gt;
&lt;h3&gt;Fonts&lt;/h3&gt;
&lt;p&gt;Fonts packages for rendering text on the desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install fonts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="guest-desktop-agents"&gt;
&lt;h3&gt;Guest Desktop Agents&lt;/h3&gt;
&lt;p&gt;Agents used when running as a virtualized desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install guest-desktop-agents&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hardware-support"&gt;
&lt;h3&gt;Hardware Support&lt;/h3&gt;
&lt;p&gt;This group is a collection of tools for various hardware specific utilities.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install hardware-support&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="multimedia"&gt;
&lt;h3&gt;Multimedia&lt;/h3&gt;
&lt;p&gt;Audio/video framework common to desktops.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install multimedia&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="standard"&gt;
&lt;h3&gt;Standard&lt;/h3&gt;
&lt;p&gt;Common set of utilities that extend the minimal installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install standard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="base-x"&gt;
&lt;h3&gt;base-x&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install base-x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="input-methods"&gt;
&lt;h3&gt;Input Methods&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install input-methods&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-icons-theme"&gt;
&lt;h3&gt;Fedora Icons Theme&lt;/h3&gt;
&lt;p&gt;This package provides the Fedora icons theme.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install fedora-icon-theme&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-icons-theme"&gt;
&lt;h3&gt;GNOME Icons Theme&lt;/h3&gt;
&lt;p&gt;This package provides the default icon theme used by the GNOME Desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install gnome-icon-theme&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-icons-theme-extra"&gt;
&lt;h3&gt;GNOME Icons Theme extra&lt;/h3&gt;
&lt;p&gt;This package provides additional mime type and devices icons for the GNOME
Desktop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install gnome-icon-theme-extras&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="i3-window-manager"&gt;
&lt;h3&gt;i3 Window Manager&lt;/h3&gt;
&lt;p&gt;Finally we can install the i3 window manager.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install i3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-the-graphical-login-manager"&gt;
&lt;h3&gt;Installing the graphical login manager&lt;/h3&gt;
&lt;p&gt;We will need a graphical login manager where we can pick our user and type our
password so we can get authenticated. From here we can also select other
desktop environments that we might install in the future.&lt;/p&gt;
&lt;p&gt;LightDM is a display manager that welcomes the user and uses the GTK3 tool kit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install lightdm-gtk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xdg-user-dirs"&gt;
&lt;h3&gt;xdg-user-dirs&lt;/h3&gt;
&lt;p&gt;Contains xdg-user-dirs-update that updates and creates the directories at
/home/, according to the predefined values configured by the administrator.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install xdg-user-dirs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-the-graphical-mode-boot"&gt;
&lt;h3&gt;Enabling the graphical mode boot&lt;/h3&gt;
&lt;p&gt;Our system already has all the requirements to work as a graphical environment
using i3 as a window manager. But before it, we need to change some
configurations that make our system boot from runlevel 3 mode or
multi-user.target to runlevel 5 or graphical.target.&lt;/p&gt;
&lt;p&gt;We can fix that with the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl set-default graphical.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also we must enable the system service that provides the option to access the
system via a graphical loging that we just installed, lightdm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl enable lightdm.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we can reboot our system and then after we should be able to get logged
in makeing use of the graphical session manager and our window manager i3.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="first-graphical-session"&gt;
&lt;h2&gt;First graphical session&lt;/h2&gt;
&lt;p&gt;Once logged in, i3 will ask if you want to generate a new config file for i3,
press Enter to answer affirmatively.&lt;/p&gt;
&lt;p&gt;Next it ask which key you want to use as modifier key to trigger the i3
keyboard shortcuts, I always pick the &lt;cite&gt;Win&lt;/cite&gt; or the Windows key, also known as
&lt;cite&gt;Meta key&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="terminal-command-line"&gt;
&lt;h2&gt;Terminal command line&lt;/h2&gt;
&lt;p&gt;This setup does not provides any presintalled tool for web browsing, file
manager, image viewer or pdf reader.&lt;/p&gt;
&lt;p&gt;It is up to you what to use and install.&lt;/p&gt;
&lt;p&gt;― But, how do I install those?&lt;/p&gt;
&lt;p&gt;If you selected the Windows key as modifier for i3, pressing:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + Enter&lt;/p&gt;
&lt;p&gt;You will be able to run a command line terminal. I prefer to use GNOME
Terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then by pressing:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + d&lt;/p&gt;
&lt;p&gt;Trigger &lt;cite&gt;dmenu&lt;/cite&gt; from where you can invoke GNOME Terminal by typing
&lt;cite&gt;gnome-terminal&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;In the next post I will explain my i3 post-install.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="login-out-and-powering-off"&gt;
&lt;h2&gt;Login out and powering off&lt;/h2&gt;
&lt;p&gt;To log out from our session:&lt;/p&gt;
&lt;p&gt;&amp;lt;Win&amp;gt; + &amp;lt;Shift&amp;gt; + e&lt;/p&gt;
&lt;p&gt;This triggers a dialogue asking for if you want to end your i3 user session.
Click on &lt;cite&gt;Yes, exit i3&lt;/cite&gt; and then while on &lt;cite&gt;lightdm&lt;/cite&gt; press:&lt;/p&gt;
&lt;p&gt;&amp;lt;Alt&amp;gt; + &amp;lt;F4&amp;gt;&lt;/p&gt;
&lt;p&gt;To turn off your system.&lt;/p&gt;
&lt;p&gt;I hope this post help you to achive a minimal install. This is a good and cheap
way to setup virtual machines, without expending lot of resources or even for a
working environemt for ancient devices with minimum and limited resources.&lt;/p&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="dnf"></category><category term="fc29"></category><category term="fedora"></category><category term="postinstall"></category></entry><entry><title>Fedora 26 Custom Operating System post install</title><link href="https://porfiriopaiz.github.io/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html" rel="alternate"></link><published>2017-08-31T16:26:00-06:00</published><updated>2017-08-31T16:26:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2017-08-31:/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</id><summary type="html"></summary><content type="html">&lt;p&gt;On the last post I explained how make a Minimal install of Fedora 25, months
has passed by since the last post and Fedora 26 was released, following the
same steps I installed it on my laptop and next I will document my postinstall.&lt;/p&gt;
&lt;p&gt;Given this is a minimal install, the set of packages installed does not
provides support for Wireless Network Cards. It is true that during the
installation process Anaconda provides such support, but once you have
installed the minimal set of packages, these does not provides the required
drivers, for this matter I must get my laptop connected to a Wired Network.&lt;/p&gt;
&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration&lt;/h2&gt;
&lt;p&gt;After checking the Wired Network, first I did was to edit dnf's configuration
file and add the next lines to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;

&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way I make sure &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; will always use the more efficient mirror; will
not use &lt;cite&gt;*.drpm's&lt;/cite&gt; for upgrades, instead it will always download &lt;cite&gt;*.rpm's&lt;/cite&gt;; and
will keep any package it downloads in its cache.&lt;/p&gt;
&lt;p&gt;Now let's reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disablle-dnf-makecache-service-and-dnf-makecache-timer"&gt;
&lt;h2&gt;Disablle dnf-makecache.service and dnf-makecache.timer&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; has this service and timer that annoys me, both makes sure of keeping
the package metadata cache up to date with a certain frequence, this is
something I like to do when I want and when I need it, not at &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; please,
so this behaviour is fixed with the next command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.timer&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's reboot again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rebuilding-packages-metadata-cache-s"&gt;
&lt;h2&gt;Rebuilding packages metadata cache's&lt;/h2&gt;
&lt;p&gt;Once &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration file is customized, service and timer are disabled,
I clean the old cache and rebuild it. This time the commands are run as normal
user, Fedora keeps two differents cache: one for the normal user and other for
the root user:&lt;/p&gt;
&lt;p&gt;This will rebuild packages metadata cache for my normal user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;

&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will rebuild packages metadata cache for the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="available-upgrades"&gt;
&lt;h2&gt;Available Upgrades&lt;/h2&gt;
&lt;p&gt;During the installation it is possible to mark a checkbox for the option to
download and install the packages with the most recent version, to verify if
there aren't any upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To download and apply the upgrades if availables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the upgrade let's reboot to make use of latest version of any package if
upgraded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="workstation-product-environment-installation"&gt;
&lt;h2&gt;Workstation Product Environment Installation&lt;/h2&gt;
&lt;p&gt;On my laptop I use GNOME Shell as desktop environment, to install it I make use
of a package group that provides all the required packages to make of this
Fedora Custom Operating System install a Fedora Workstation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf group install workstation-product-environment&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="graphical-boot-mode"&gt;
&lt;h2&gt;Graphical Boot Mode&lt;/h2&gt;
&lt;p&gt;After downloading and installing all the packages, We must change the default
&lt;cite&gt;init&lt;/cite&gt; mode from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;multi-user.target&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;graphical.target&lt;/tt&gt;, otherwise, when
We reboot our system will not start in graphical mode.&lt;/p&gt;
&lt;p&gt;Also We must enable the service for the graphical login manager, if no, despite
enabling the graphical mode our login will still a text based prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl set-default graphical.target&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl enable gdm.service&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If nothing goes wrong, you might be running Fedora 26 Workstation with GNONE
Shell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fixing-nautilus-behaviour"&gt;
&lt;h2&gt;Fixing Nautilus Behaviour&lt;/h2&gt;
&lt;p&gt;Before opening any other application, I like to fix how Nautilus sorts files, I
like to have them sorted by type or file extension:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.nautilus.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way when opening Nautilus it will show the files sorted by extension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repositories"&gt;
&lt;h2&gt;Repositories&lt;/h2&gt;
&lt;div class="section" id="enabling-rpmfusion"&gt;
&lt;h3&gt;Enabling RPMFusion:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refresh the cache, this will download the RPMFusion packages metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-google-chrome-s-repository"&gt;
&lt;h3&gt;Enabling Google Chrome's repository:&lt;/h3&gt;
&lt;p&gt;I used to enable Google Chrome repository as explained on this post:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/"&gt;https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But Mayorga presented me a more simple method, basically you just have to
download Google Chrome &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package, install it from the command line
indicating the path to the &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package and this by itself will add the
&lt;cite&gt;*.repo&lt;/cite&gt; file to the path &lt;tt class="docutils literal"&gt;/etc/yum.repos.d/&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/Downloads&lt;/span&gt;

&lt;span class="go"&gt;wget -N -t 0 -c https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install google-chrome-stable_current_x86_64.rpm&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-tracker"&gt;
&lt;h2&gt;Disabling Tracker&lt;/h2&gt;
&lt;p&gt;Before copying back any file from my back up's, hay must disable the annoying
&lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; and all his friends:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install tracker-preferences&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;mkdir ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cp /etc/xdg/autostart/tracker* ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;cd ~/.config/autostart&lt;/span&gt;

&lt;span class="go"&gt;sed -i &amp;#39;s/X-GNOME-Autostart-enabled=true/X-GNOME-Autostart-enabled=false/&amp;#39; tracker*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's check &lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we make a &lt;tt class="docutils literal"&gt;hard reset&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker reset --hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-gnome-software-and-packagekit-download-updates"&gt;
&lt;h2&gt;Disabling GNOME Software and PackageKit download-updates&lt;/h2&gt;
&lt;p&gt;GNOME Software downloads metadata and upgrades for the system in background, to
disable it We execute the next commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.software download-updates false&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;systemctl mask packagekit.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should stop the autodownload upgrades and the PackageKit service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="libraries-and-development-tools"&gt;
&lt;h2&gt;Libraries and Development Tools&lt;/h2&gt;
&lt;p&gt;Now install the package groups that provides the required software and
libraries for compiling other software from source code, as well as making of
&lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; and &lt;cite&gt;IDE&lt;/cite&gt;, on another post I will explain how to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install c-development&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-libs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install fedora-packager&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf -y groups install rpm-development-tools&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install automake gcc gcc-c++ kernel-devel cmake&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python-devel python3-devel&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install monodevelop&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install golang&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install nodejs&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install rust&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install cargo&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-virtualenv&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install python3-pip&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally the spellcheckers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install aspell-en&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-es&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;su -c &amp;#39;dnf install autocorr-en&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the next post I will make shorts reviews on the other tools I use on Fedora.&lt;/p&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="dnf"></category><category term="fc26"></category><category term="fedora"></category><category term="postinstall"></category></entry><entry><title>Upgrading from Fedora 22 to Fedora 23</title><link href="https://porfiriopaiz.github.io/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html" rel="alternate"></link><published>2017-03-26T16:46:00-06:00</published><updated>2017-03-26T16:46:00-06:00</updated><author><name>Porfirio Páiz</name></author><id>tag:porfiriopaiz.github.io,2017-03-26:/site/posts/2017/03/26/upgrading-from-fedora-22-to-fedora-23.html</id><summary type="html"></summary><content type="html">&lt;p&gt;From May 26th, 2015, to November 22nd, 2016, I was rocking Fedora 22 on my
Lenovo ThinkPad T440p – a solid year and a half of tech bliss. However, on July
19th, 2016, Fedora 22 gracefully entered its &lt;a class="reference external" href="https://fedoraproject.org/wiki/End_of_life"&gt;End of Life (EOL)&lt;/a&gt; phase. This translates to no
more security or maintenance updates coming our way, signaling the friendly
nudge to upgrade to a newer, stable version.&lt;/p&gt;
&lt;p&gt;So, in this post, I'm spilling the beans on how to smoothly transition to
Fedora 23 using the ever-reliable dnf package manager. Let's keep that Fedora
love alive and kicking! 🚀&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Following a year and a half of utilizing Fedora 22, the package cache had
accumulated roughly 10GB of space on my hard drive.&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_16-05-06.png" /&gt;
&lt;p&gt;To instruct dnf to retain the downloaded packages in the cache, you need to
append the following line to the dnf configuration file located at
&lt;tt class="docutils literal"&gt;/etc/dnf/dnf.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;echo &amp;#39;keepcache = true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="upgrading-fedora-23"&gt;
&lt;h2&gt;Upgrading Fedora 23&lt;/h2&gt;
&lt;div class="section" id="prerequisites-for-upgrading"&gt;
&lt;h3&gt;Prerequisites for upgrading&lt;/h3&gt;
&lt;p&gt;Firstly, it's crucial to ensure ample space on our &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; partition. This is
particularly important because the update process entails downloading the
latest version of every single package installed in our system. While there's a
chance that our cache might be brimming, it's advisable to clear out stored
packages to free up space, just in case it's needed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we proceed, it's essential to verify that our system is up-to-date with
the latest available updates from the enabled repositories. To accomplish this,
we need to rebuild the packages' metadata cache and subsequently apply the
recent upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-23-27.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-dnf-plugin-system-upgrade-plugin"&gt;
&lt;h3&gt;Install the dnf-plugin-system-upgrade plugin&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DNF System Upgrade&lt;/strong&gt; facilitates the transition to a newer version of Fedora,
employing a mechanism akin to offline package updates. Packages are downloaded
while the system operates normally, followed by a restart into a dedicated
environment (implemented as a systemd target) for installation. Once the
package installation concludes, the system reboots, ushering in the new Fedora
version.&lt;/p&gt;
&lt;p&gt;To kickstart the process, the initial step involves installing the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dnf-plugin-system-upgrade&lt;/span&gt;&lt;/tt&gt; plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install dnf-plugin-system-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's move on to acquiring the necessary packages for the upgrade to
Fedora 23.&lt;/p&gt;
&lt;p&gt;This operation entails fetching each and every package currently installed in
our system, ensuring we obtain the latest version compatible with the specified
release – in this instance, the release is designated as &lt;tt class="docutils literal"&gt;23&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=23&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the following screenshot, you'll find details on the number of packages
slated for download and the corresponding data volume associated with fetching
them:&lt;/p&gt;
&lt;img alt="" class="align-center" src="https://porfiriopaiz.github.io/site/images/fc22_to_fc23/screenshot_from_2016-11-22_17-34-42.png" /&gt;
&lt;p&gt;Similarly, upgrading to Fedora 24 is feasible, although I would advise against
leaping directly from Fedora 22 to Fedora 24 (a &lt;tt class="docutils literal"&gt;(n + 2)&lt;/tt&gt; version jump). As
of now, the latest stable versions are Fedora 24 and Fedora 25; Fedora 26 is
currently in the &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Branched"&gt;Branched&lt;/a&gt;
state, and &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;Rawhide&lt;/a&gt;
represents the continuously developing version.&lt;/p&gt;
&lt;p&gt;To transition to any of the mentioned versions, you simply need to modify the
&lt;tt class="docutils literal"&gt;number&lt;/tt&gt; parameter in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--releasever=number&lt;/span&gt;&lt;/tt&gt; option. Use 24 for Fedora
24, 25 for Fedora 25, 26 for Fedora Branched, and &amp;quot;rawhide&amp;quot; to upgrade to
Rawhide. It's worth noting that both Branched and Rawhide are not stable
versions of Fedora, so their use is recommended primarily for more seasoned
users.&lt;/p&gt;
&lt;p&gt;Upgrading to Fedora 24:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=24&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora 25:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=25&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrading to Fedora Rawhide:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade download --refresh --best --allowerasing --releasever=rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, after the packages are successfully downloaded, it's imperative to
restart the system by executing the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf system-upgrade reboot&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Executing this command initiates a system restart. Upon reboot, the system will
utilize the same (newer) kernel, triggering the upgrade process from Fedora 22
to Fedora 23.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="floss"></category><category term="dnf"></category><category term="eol"></category><category term="fc22"></category><category term="fc23"></category><category term="fedora"></category><category term="system-upgrade"></category></entry></feed>