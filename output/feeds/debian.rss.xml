<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>porfirio's blog - debian</title><link>https://porfiriopaiz.github.io/site/</link><description></description><lastBuildDate>Mon, 11 Sep 2023 04:39:00 -0600</lastBuildDate><item><title>vim</title><link>https://porfiriopaiz.github.io/site/posts/2023/09/11/vim.html</link><description>&lt;div class="section" id="understanding-vim-on-debian"&gt;
&lt;h2&gt;Understanding &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; on Debian&lt;/h2&gt;
&lt;p&gt;Now that I understand how Debian manages &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; and I've grasped the
purpose of the vim-tiny package, it's time to determine the requirements for
obtaining a more advanced &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; binary with enhanced features or support for
additional functionalities.&lt;/p&gt;
&lt;p&gt;A brief search for additional information on &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-tiny&lt;/span&gt;&lt;/tt&gt; suggests various
alternatives for a more comprehensive &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; experience:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;apt-cache&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;vim-tiny
&lt;span class="go"&gt;Package: vim-tiny&lt;/span&gt;
&lt;span class="go"&gt;Source: vim&lt;/span&gt;
&lt;span class="go"&gt;Version: 2:8.2.2434-3+deb11u1&lt;/span&gt;
&lt;span class="go"&gt;Installed-Size: 1574&lt;/span&gt;
&lt;span class="go"&gt;Maintainer: Debian Vim Maintainers &amp;lt;team+vim@tracker.debian.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Architecture: amd64&lt;/span&gt;
&lt;span class="go"&gt;Provides: editor&lt;/span&gt;
&lt;span class="go"&gt;Depends: vim-common (= 2:8.2.2434-3+deb11u1), libacl1 (&amp;gt;= 2.2.23), libc6 (&amp;gt;= 2.15), libselinux1 (&amp;gt;= 3.1~), libtinfo6 (&amp;gt;= 6)&lt;/span&gt;
&lt;span class="go"&gt;Suggests: indent&lt;/span&gt;
&lt;span class="go"&gt;Description-en: Vi IMproved - enhanced vi editor - compact version&lt;/span&gt;
&lt;span class="go"&gt; Vim is an almost compatible version of the UNIX editor Vi.&lt;/span&gt;
&lt;span class="go"&gt; .&lt;/span&gt;
&lt;span class="go"&gt; This package contains a minimal version of Vim compiled with no GUI and&lt;/span&gt;
&lt;span class="go"&gt; a small subset of features. This package&amp;#39;s sole purpose is to provide&lt;/span&gt;
&lt;span class="go"&gt; the vi binary for base installations.&lt;/span&gt;
&lt;span class="go"&gt; .&lt;/span&gt;
&lt;span class="go"&gt; If a vim binary is wanted, try one of the following more featureful&lt;/span&gt;
&lt;span class="go"&gt; packages: vim, vim-nox, vim-athena, or vim-gtk3.&lt;/span&gt;
&lt;span class="go"&gt;Description-md5: 85f2dbef1339af3dcf83d9ee00fd5e22&lt;/span&gt;
&lt;span class="go"&gt;Homepage: https://www.vim.org/&lt;/span&gt;
&lt;span class="go"&gt;Tag: devel::editor, implemented-in::c, interface::text-mode, role::program,&lt;/span&gt;
&lt;span class="go"&gt; uitoolkit::ncurses, use::editing, works-with::text, works-with::unicode&lt;/span&gt;
&lt;span class="go"&gt;Section: editors&lt;/span&gt;
&lt;span class="go"&gt;Priority: important&lt;/span&gt;
&lt;span class="go"&gt;Filename: pool/main/v/vim/vim-tiny_8.2.2434-3+deb11u1_amd64.deb&lt;/span&gt;
&lt;span class="go"&gt;Size: 744284&lt;/span&gt;
&lt;span class="go"&gt;MD5sum: 3b101104ccb4e8367298e4ea9dc33d27&lt;/span&gt;
&lt;span class="go"&gt;SHA256: 0cfc3ce179181f9c08f8460360a8bcba05c214d75ba51d78ecf021e42c9a4261&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running both &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-cache&lt;/span&gt; show &lt;span class="pre"&gt;vim-athena&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-cache&lt;/span&gt; show &lt;span class="pre"&gt;vim-gtk3&lt;/span&gt;&lt;/tt&gt; reveals
that both packages offer a graphical user interface, which I neither desire nor
require.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-cache&lt;/span&gt; show vim&lt;/tt&gt; displays information that suggests this could be the
solution I've been searching for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;apt-cache&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;vim
&lt;span class="go"&gt;Package: vim&lt;/span&gt;
&lt;span class="go"&gt;Version: 2:8.2.2434-3+deb11u1&lt;/span&gt;
&lt;span class="go"&gt;Installed-Size: 3286&lt;/span&gt;
&lt;span class="go"&gt;Maintainer: Debian Vim Maintainers &amp;lt;team+vim@tracker.debian.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Architecture: amd64&lt;/span&gt;
&lt;span class="go"&gt;Provides: editor&lt;/span&gt;
&lt;span class="go"&gt;Depends: vim-common (= 2:8.2.2434-3+deb11u1), vim-runtime (= 2:8.2.2434-3+deb11u1), libacl1 (&amp;gt;= 2.2.23), libc6 (&amp;gt;= 2.29), libgpm2 (&amp;gt;= 1.20.7), libselinux1 (&amp;gt;= 3.1~), libtinfo6 (&amp;gt;= 6)&lt;/span&gt;
&lt;span class="go"&gt;Suggests: ctags, vim-doc, vim-scripts&lt;/span&gt;
&lt;span class="go"&gt;Description-en: Vi IMproved - enhanced vi editor&lt;/span&gt;
&lt;span class="go"&gt; Vim is an almost compatible version of the UNIX editor Vi.&lt;/span&gt;
&lt;span class="go"&gt; .&lt;/span&gt;
&lt;span class="go"&gt; Many new features have been added: multi level undo, syntax&lt;/span&gt;
&lt;span class="go"&gt; highlighting, command line history, on-line help, filename&lt;/span&gt;
&lt;span class="go"&gt; completion, block operations, folding, Unicode support, etc.&lt;/span&gt;
&lt;span class="go"&gt; .&lt;/span&gt;
&lt;span class="go"&gt; This package contains a version of vim compiled with a rather&lt;/span&gt;
&lt;span class="go"&gt; standard set of features.  This package does not provide a GUI&lt;/span&gt;
&lt;span class="go"&gt; version of Vim.  See the other vim-* packages if you need more&lt;/span&gt;
&lt;span class="go"&gt; (or less).&lt;/span&gt;
&lt;span class="go"&gt;Description-md5: 59e8b8f7757db8b53566d5d119872de8&lt;/span&gt;
&lt;span class="go"&gt;Homepage: https://www.vim.org/&lt;/span&gt;
&lt;span class="go"&gt;Tag: devel::editor, implemented-in::c, interface::commandline,&lt;/span&gt;
&lt;span class="go"&gt; interface::text-mode, role::program, scope::application,&lt;/span&gt;
&lt;span class="go"&gt; uitoolkit::ncurses, use::editing, works-with::text, works-with::unicode&lt;/span&gt;
&lt;span class="go"&gt;Section: editors&lt;/span&gt;
&lt;span class="go"&gt;Priority: optional&lt;/span&gt;
&lt;span class="go"&gt;Filename: pool/main/v/vim/vim_8.2.2434-3+deb11u1_amd64.deb&lt;/span&gt;
&lt;span class="go"&gt;Size: 1494176&lt;/span&gt;
&lt;span class="go"&gt;MD5sum: f74e7886b6610f74d06c789eeb144b9c&lt;/span&gt;
&lt;span class="go"&gt;SHA256: b06d11fdee525b919deb4778f7af352ebf3d6ce2591c8fb8e02e52f1ae90ef7d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-cache&lt;/span&gt; show &lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; shows me that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; provides support for
scripting languages, Python among them, which is missing from the bare minimum
option provided by the &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; package.&lt;/p&gt;
&lt;p&gt;So I installed it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c “apt-get install vim-nox”&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first thing I noticed after installing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; is that now &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;
points to &lt;tt class="docutils literal"&gt;vim.nox&lt;/tt&gt;, meaning that when running &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; it will be actually
running &lt;tt class="docutils literal"&gt;vim.nox&lt;/tt&gt;, which is not what I was expecting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;whereis&lt;span class="w"&gt; &lt;/span&gt;vi
&lt;span class="go"&gt;vi: /usr/bin/vi /usr/share/man/man1/vi.1.gz&lt;/span&gt;
&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-la&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/vi
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 20 May 28  2021 /usr/bin/vi -&amp;gt; /etc/alternatives/vi&lt;/span&gt;
&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-la&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/vi
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 16 Oct 12  2022 /etc/alternatives/vi -&amp;gt; /usr/bin/vim.nox&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I really struggled to find a fix for this, it took me a while to get to the
answer, but I found it:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://superuser.com/questions/852177/why-does-the-vi-command-open-vim-editor/852219#852219"&gt;https://superuser.com/questions/852177/why-does-the-vi-command-open-vim-editor/852219#852219&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I just need to run &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; and addition pass some parameters next to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;vim -u NONE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Later I found the same suggestion on the &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt;
file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; This is loaded if no vimrc file was found.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Except when Vim is run with &amp;quot;-u NONE&amp;quot; or &amp;quot;-C&amp;quot;.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Individual settings can be reverted with &amp;quot;:set option&amp;amp;&amp;quot;.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; Other commands can be reverted as mentioned below.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's quite convenient to have the ability to run &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; without loading any
additional features from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; when you simply need to make a minor edit,
without relying on plugins and such. To simplify this, I added the following
line to my &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_aliases&lt;/span&gt;&lt;/tt&gt; file. This ensures that when I run &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; it loads
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; without any settings or features from configuration files such as
&lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt; &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt; or
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt;:&lt;/p&gt;
&lt;p&gt;Here's the code snippet I added to my &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_aliases&lt;/span&gt;&lt;/tt&gt; file to ensure &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;
runs &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-nox&lt;/span&gt;&lt;/tt&gt; without any additional settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;# &lt;/span&gt;Alias&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;vi&lt;span class="w"&gt; &lt;/span&gt;instead&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;vim.nox
&lt;span class="go"&gt;alias vi=&amp;quot;vim -u NONE&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this configuration, I'm all set! In the future, I'll be sharing my
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; file and its contents.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Mon, 11 Sep 2023 04:39:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2023-09-11:/site/posts/2023/09/11/vim.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>vim</category></item><item><title>vi</title><link>https://porfiriopaiz.github.io/site/posts/2022/10/31/vi.html</link><description>&lt;div class="section" id="understanding-vi-and-vim-on-debian"&gt;
&lt;h2&gt;Understanding vi and vim on Debian&lt;/h2&gt;
&lt;p&gt;Since 2011, I've steadfastly embraced &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; as my primary text editor. My
journey into the realm of mastering the command line interface and
transitioning away from the comfort of the graphical user interface began early
on. Among the foundational skills I aimed to acquire, one of the first was the
efficient editing of text files.&lt;/p&gt;
&lt;p&gt;Surprisingly, the exact catalyst that initially led me to embrace &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; has
faded into the distant recesses of my memory. Nevertheless, over eleven years
later, my loyalty to &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; remains unwavering. It has been a constant
companion throughout this journey, and I've never strayed into the world of
alternative text editors. In fact, I've even employed &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; for basic Python
programming tasks, underscoring its versatility and enduring utility in my
daily computing endeavors.&lt;/p&gt;
&lt;p&gt;In this post, I intend to delve deep into the intricacies of how Debian manages
the functionality of &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and vim right from a basic, uncustomized Debian
installation.&lt;/p&gt;
&lt;p&gt;My objective is to gain a profound understanding of the fundamental behaviors
exhibited by &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; and vim in their most minimalist configurations, as they
are presented immediately after a fresh Debian installation.&lt;/p&gt;
&lt;p&gt;It's worth noting that Debian does not include vim by default in this scenario.
I opted for a network install using the minimal tasksel profile, selecting only
the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;mate-desktop-environment&lt;/span&gt;&lt;/tt&gt; package. This illustrates one of the aspects I
greatly appreciate about Debian – its commitment to delivering essential
software components, allowing users the freedom to shape and personalize their
tools and environments according to their specific needs, without making any
presumptions about what's best for them.&lt;/p&gt;
&lt;div class="section" id="vi-1"&gt;
&lt;h3&gt;&lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;A pristine Debian installation defaults to including only the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vim-tiny&lt;/span&gt;&lt;/tt&gt;
package. Within this package, two critical configuration files are stored in
&lt;tt class="docutils literal"&gt;/etc/vim/&lt;/tt&gt;: &lt;tt class="docutils literal"&gt;vimrc&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This setup is intentionally minimalist, devoid of any symbolic links, aliases,
or binary files associated with &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;. Consequently, the sole alias present
is &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;, which is directly linked to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;When &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; is invoked, it effectively calls &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;, which, as the
default behavior, exclusively sources the file located at
&lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Now, let's explore the contents of the &lt;tt class="docutils literal"&gt;/etc/vim/vimrc.tiny&lt;/tt&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; Vim configuration file, in effect when invoked as &amp;quot;vi&amp;quot;. The aim of this&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; configuration file is to provide a Vim environment as compatible with the&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; original vi as possible. Note that ~/.vimrc configuration files as other&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; configuration files in the runtimepath are still sourced.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; When Vim is invoked differently (&amp;quot;vim&amp;quot;, &amp;quot;view&amp;quot;, &amp;quot;evim&amp;quot;, ...) this file is&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; _not_ sourced; /etc/vim/vimrc and/or /etc/vim/gvimrc are.&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Debian system-wide default configuration Vim&lt;/span&gt;
&lt;span class="go"&gt;set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim82,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after&lt;/span&gt;

&lt;span class="go"&gt;set compatible&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; vim: set ft=vim:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Essentially, this configuration ensures that &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt; (which invokes
&lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt;) closely mimics the behavior of the original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;. Furthermore,
it automatically loads configuration files found under the &lt;tt class="docutils literal"&gt;$VIMRUNTIME&lt;/tt&gt;
directory, which includes both &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; and any configuration files
specified in the &lt;tt class="docutils literal"&gt;runtimepath&lt;/tt&gt; variable.&lt;/p&gt;
&lt;p&gt;In this specific case, it prioritizes the inclusion of
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;As a final touch, it enforces compatibility with the original &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;, even if
other configuration files in the &lt;tt class="docutils literal"&gt;runtimepath&lt;/tt&gt; attempt to disable it, by
appending the &lt;tt class="docutils literal"&gt;set compatible&lt;/tt&gt; directive to the end of the configuration
file.&lt;/p&gt;
&lt;p&gt;In the absence of any other &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; versions installed on the system, &lt;tt class="docutils literal"&gt;vi&lt;/tt&gt;
will naturally point to &lt;tt class="docutils literal"&gt;vim.tiny&lt;/tt&gt; by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-la&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/vi
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 16 Oct 12  2022 /etc/alternatives/vi -&amp;gt; /usr/bin/vim.tiny&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conversely, if &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; is explicitly installed and invoked as &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, or via
aliases such as &lt;tt class="docutils literal"&gt;view&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;evim&lt;/tt&gt; (note that none of these aliases are
available in this minimal setup), the configuration files &lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;/etc/gvimrc&lt;/tt&gt; are activated and sourced.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;quot; All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; the call to :runtime you can find below.  If you wish to change any of those&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; settings, you should do it in this file (/etc/vim/vimrc), since debian.vim&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; will be overwritten everytime an upgrade of the vim packages is performed.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; It is recommended to make changes after sourcing debian.vim since it alters&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; the value of the &amp;#39;compatible&amp;#39; option.&lt;/span&gt;

&lt;span class="go"&gt;runtime! debian.vim&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; This happens after /etc/vim/vimrc(.local) are loaded, so it will override&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; any settings in these files.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; If you don&amp;#39;t want that to happen, uncomment the below line to prevent&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; defaults.vim from being loaded.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; let g:skip_defaults_vim = 1&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the next line to make Vim more Vi-compatible&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; NOTE: debian.vim sets &amp;#39;nocompatible&amp;#39;.  Setting &amp;#39;compatible&amp;#39; changes numerous&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; options, so any other options should be set AFTER setting &amp;#39;compatible&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set compatible&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Vim5 and later versions support syntax highlighting. Uncommenting the next&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; line enables syntax highlighting by default.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;syntax on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; If using a dark background within the editing area and syntax highlighting&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; turn on this option as well&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set background=dark&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the following to have Vim jump to the last position when&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; reopening a file&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;au BufReadPost * if line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;lt;= line(&amp;quot;$&amp;quot;) | exe &amp;quot;normal! g&amp;#39;\&amp;quot;&amp;quot; | endif&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Uncomment the following to have Vim load indentation rules and plugins&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; according to the detected filetype.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;filetype plugin indent on&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; The following are commented out as they cause vim to behave a lot&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot; differently from regular Vi. They are highly recommended though.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set showcmd         &amp;quot; Show (partial) command in status line.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set showmatch               &amp;quot; Show matching brackets.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set ignorecase              &amp;quot; Do case insensitive matching&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set smartcase               &amp;quot; Do smart case matching&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set incsearch               &amp;quot; Incremental search&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set autowrite               &amp;quot; Automatically save before commands like :next and :make&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set hidden          &amp;quot; Hide buffers when they are abandoned&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;set mouse=a         &amp;quot; Enable mouse usage (all modes)&lt;/span&gt;

&lt;span class="go"&gt;&amp;quot; Source a global configuration file if available&lt;/span&gt;
&lt;span class="go"&gt;if filereadable(&amp;quot;/etc/vim/vimrc.local&amp;quot;)&lt;/span&gt;
&lt;span class="go"&gt;  source /etc/vim/vimrc.local&lt;/span&gt;
&lt;span class="go"&gt;endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we execute &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; in the command line, and subsequently issue the &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:echo $VIMRUNTIME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following output will be displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/usr/share/vim/vim82&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, when we execute the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:scriptnames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will display a list of all the script files that are loaded based on the
&lt;tt class="docutils literal"&gt;/etc/vim/vimrc&lt;/tt&gt; configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  1: /usr/share/vim/vimrc&lt;/span&gt;
&lt;span class="go"&gt;  2: /usr/share/vim/vim82/debian.vim&lt;/span&gt;
&lt;span class="go"&gt;  3: /usr/share/vim/vim82/defaults.vim&lt;/span&gt;
&lt;span class="go"&gt;  4: /usr/share/vim/vim82/filetype.vim&lt;/span&gt;
&lt;span class="go"&gt;  5: /usr/share/vim/vim82/ftplugin.vim&lt;/span&gt;
&lt;span class="go"&gt;  6: /usr/share/vim/vim82/indent.vim&lt;/span&gt;
&lt;span class="go"&gt;  7: /usr/share/vim/vim82/syntax/syntax.vim&lt;/span&gt;
&lt;span class="go"&gt;  8: /usr/share/vim/vim82/syntax/synload.vim&lt;/span&gt;
&lt;span class="go"&gt;  9: /usr/share/vim/vim82/syntax/syncolor.vim&lt;/span&gt;
&lt;span class="go"&gt; 10: /usr/share/vim/vim82/plugin/getscriptPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 11: /usr/share/vim/vim82/plugin/gzip.vim&lt;/span&gt;
&lt;span class="go"&gt; 12: /usr/share/vim/vim82/plugin/logiPat.vim&lt;/span&gt;
&lt;span class="go"&gt; 13: /usr/share/vim/vim82/plugin/manpager.vim&lt;/span&gt;
&lt;span class="go"&gt; 14: /usr/share/vim/vim82/plugin/matchparen.vim&lt;/span&gt;
&lt;span class="go"&gt; 15: /usr/share/vim/vim82/plugin/netrwPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 16: /usr/share/vim/vim82/plugin/rrhelper.vim&lt;/span&gt;
&lt;span class="go"&gt; 17: /usr/share/vim/vim82/plugin/spellfile.vim&lt;/span&gt;
&lt;span class="go"&gt; 18: /usr/share/vim/vim82/plugin/tarPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 19: /usr/share/vim/vim82/plugin/tohtml.vim&lt;/span&gt;
&lt;span class="go"&gt; 20: /usr/share/vim/vim82/plugin/vimballPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 21: /usr/share/vim/vim82/plugin/zipPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt;Press ENTER or type command to continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If, for any reason, we have already created a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; file, the inclusion
of &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; will be skipped:&lt;/p&gt;
&lt;p&gt;Inside &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;, upon executing the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;:scriptnames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll observe that instead, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; takes precedence and gets sourced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  1: /usr/share/vim/vimrc&lt;/span&gt;
&lt;span class="go"&gt;  2: /usr/share/vim/vim82/debian.vim&lt;/span&gt;
&lt;span class="go"&gt;  3: ~/.vimrc&lt;/span&gt;
&lt;span class="go"&gt;  4: /usr/share/vim/vim82/syntax/syntax.vim&lt;/span&gt;
&lt;span class="go"&gt;  5: /usr/share/vim/vim82/syntax/synload.vim&lt;/span&gt;
&lt;span class="go"&gt;  6: /usr/share/vim/vim82/syntax/syncolor.vim&lt;/span&gt;
&lt;span class="go"&gt;  7: /usr/share/vim/vim82/filetype.vim&lt;/span&gt;
&lt;span class="go"&gt;  8: /usr/share/vim/vim82/ftplugin.vim&lt;/span&gt;
&lt;span class="go"&gt;  9: /usr/share/vim/vim82/indent.vim&lt;/span&gt;
&lt;span class="go"&gt; 10: /usr/share/vim/vim82/syntax/nosyntax.vim&lt;/span&gt;
&lt;span class="go"&gt; 11: /usr/share/vim/vim82/plugin/getscriptPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 12: /usr/share/vim/vim82/plugin/gzip.vim&lt;/span&gt;
&lt;span class="go"&gt; 13: /usr/share/vim/vim82/plugin/logiPat.vim&lt;/span&gt;
&lt;span class="go"&gt; 14: /usr/share/vim/vim82/plugin/manpager.vim&lt;/span&gt;
&lt;span class="go"&gt; 15: /usr/share/vim/vim82/plugin/matchparen.vim&lt;/span&gt;
&lt;span class="go"&gt; 16: /usr/share/vim/vim82/plugin/netrwPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 17: /usr/share/vim/vim82/plugin/rrhelper.vim&lt;/span&gt;
&lt;span class="go"&gt; 18: /usr/share/vim/vim82/plugin/spellfile.vim&lt;/span&gt;
&lt;span class="go"&gt; 19: /usr/share/vim/vim82/plugin/tarPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 20: /usr/share/vim/vim82/plugin/tohtml.vim&lt;/span&gt;
&lt;span class="go"&gt; 21: /usr/share/vim/vim82/plugin/vimballPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt; 22: /usr/share/vim/vim82/plugin/zipPlugin.vim&lt;/span&gt;
&lt;span class="go"&gt;Press ENTER or type command to continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This implies that if we require specific settings from the
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; file, we should incorporate them into the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; configuration file.&lt;/p&gt;
&lt;p&gt;It's important to note that any configurations from &lt;tt class="docutils literal"&gt;/usr/share/vim/vimrc&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/debian.vim&lt;/tt&gt; will be overridden by settings in
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc.&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Having this understanding, I now have clarity on what to adopt from
&lt;tt class="docutils literal"&gt;/usr/share/vim/vim82/defaults.vim&lt;/tt&gt; if the need arises.&lt;/p&gt;
&lt;p&gt;In the upcoming post, I will explain my choice of &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; versions available in
the Debian repository and the rationale behind my selection.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Mon, 31 Oct 2022 03:32:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2022-10-31:/site/posts/2022/10/31/vi.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>vi</category></item><item><title>JOSM</title><link>https://porfiriopaiz.github.io/site/posts/2021/07/22/josm.html</link><description>&lt;p&gt;JOSM is, in my opinion, the best editor for OpenStreetMap I have ever used, and
it is also the best Java software I have ever used.&lt;/p&gt;
&lt;p&gt;In this post, I will cover how to get it installed on Debian, how to properly
configure it for mapping on OSM, and which plugins to install and use.&lt;/p&gt;
&lt;div class="section" id="installing-josm-on-debian"&gt;
&lt;h2&gt;Installing JOSM on Debian&lt;/h2&gt;
&lt;p&gt;JOSM is available in the Debian official repository, so to install it, you just
need to open a terminal and run the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install josm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="solving-josm-outdated-version-on-debian"&gt;
&lt;h2&gt;Solving JOSM Outdated Version on Debian&lt;/h2&gt;
&lt;p&gt;Installing JOSM from the official Debian repositories resolves the dependency
issue you would encounter when using the most up-to-date version from the
official .jar build.&lt;/p&gt;
&lt;p&gt;To run the latest stable version, you need to download it from the official
JOSM website as a JAR file. However, before doing that, you need to run the
version installed from the Debian repository at least once.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;josm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create the following directory structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;~/.config/JOSM&lt;/span&gt;
&lt;span class="go"&gt;~/.cache/JOSM&lt;/span&gt;
&lt;span class="go"&gt;~/.local/share/JOSM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.cache/JOSM/&lt;/span&gt;&lt;/tt&gt;, a directory named &lt;tt class="docutils literal"&gt;jar&lt;/tt&gt; will be created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir -p ~/.cache/JOSM/jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, navigate to that directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/.cache/JOSM/jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, download the latest version of the JOSM editor using wget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://josm.openstreetmap.de/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the newly downloaded version, use the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;java -jar ~/.cache/JOSM/jar/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="script-launcher"&gt;
&lt;h2&gt;Script Launcher&lt;/h2&gt;
&lt;p&gt;To launch the JAR file easily, you can create a script. First, create an
executable file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;touch ~/.local/bin/tested-josm.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, add the following content to the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;/bin/bash
&lt;span class="go"&gt;java -jar ~/.cache/JOSM/jar/josm-tested.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-a-launcher"&gt;
&lt;h2&gt;Adding a Launcher&lt;/h2&gt;
&lt;p&gt;To make this process even easier, let's create a launcher for the manually
downloaded JOSM JAR file and the previously created script.&lt;/p&gt;
&lt;p&gt;Create a new desktop entry file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;touch ~/.local/share/applications/org.openstreetmap.josm.desktop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, add the following content to the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="go"&gt;Type=Application&lt;/span&gt;
&lt;span class="go"&gt;Version=1.0&lt;/span&gt;
&lt;span class="go"&gt;Name=JOSM Tested&lt;/span&gt;
&lt;span class="go"&gt;GenericName=Java OpenStreetMap Editor&lt;/span&gt;
&lt;span class="go"&gt;Comment=Extensible off-line editor for OpenStreetMap (OSM)&lt;/span&gt;
&lt;span class="go"&gt;Icon=org.openstreetmap.josm&lt;/span&gt;
&lt;span class="go"&gt;Exec=/home/pionen/.local/bin/tested-josm.sh&lt;/span&gt;
&lt;span class="go"&gt;Terminal=false&lt;/span&gt;
&lt;span class="go"&gt;MimeType=application/x-osm+xml;application/x-gpx+xml;application/geo+json;application/x-josm-session+xml;application/x-josm-session+zip;x-scheme-handler/geo;&lt;/span&gt;
&lt;span class="go"&gt;StartupNotify=true&lt;/span&gt;
&lt;span class="go"&gt;Categories=Education;Geoscience;Maps;&lt;/span&gt;
&lt;span class="go"&gt;StartupWMClass=org-openstreetmap-josm-MainApplication&lt;/span&gt;
&lt;span class="go"&gt;Keywords=OpenStreetMap;OSM;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next time you restart your computer, you will find the new launcher. By
clicking on it, you will launch the most up-to-date version of JOSM on Debian.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 22 Jul 2021 20:46:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2021-07-22:/site/posts/2021/07/22/josm.html</guid><category>gis</category><category>deb11</category><category>debian</category><category>josm</category></item><item><title>Mate Desktop on Debian</title><link>https://porfiriopaiz.github.io/site/posts/2021/07/22/mate-desktop-on-debian.html</link><description>&lt;div class="section" id="mate-desktop-tips-and-tricks"&gt;
&lt;h2&gt;Mate Desktop Tips and Tricks&lt;/h2&gt;
&lt;div class="section" id="notify-battery-discharging"&gt;
&lt;h3&gt;Notify Battery Discharging&lt;/h3&gt;
&lt;p&gt;Enable notification when the battery is discharging:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.power-manager notify-discharging true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enable-window-compositing"&gt;
&lt;h3&gt;Enable Window Compositing&lt;/h3&gt;
&lt;p&gt;Turn on window compositing for better visual effects:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general compositing-manager true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="center-new-windows"&gt;
&lt;h3&gt;Center New Windows&lt;/h3&gt;
&lt;p&gt;Automatically center new windows on the screen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general center-new-windows true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enable-window-snapping"&gt;
&lt;h3&gt;Enable Window Snapping&lt;/h3&gt;
&lt;p&gt;Allow window snapping for better workspace management:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general allow-tiling true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hide-all-desktop-icons"&gt;
&lt;h3&gt;Hide All Desktop Icons&lt;/h3&gt;
&lt;p&gt;Remove all desktop icons for a cleaner look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.background show-desktop-icons false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="customize-window-button-layout"&gt;
&lt;h3&gt;Customize Window Button Layout&lt;/h3&gt;
&lt;p&gt;Modify the order of window decoration buttons:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general button-layout &amp;#39;close,maximize,minimize:menu&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-auto-mount-open"&gt;
&lt;h3&gt;Disable Auto-Mount Open&lt;/h3&gt;
&lt;p&gt;Prevent the file manager from opening automatically on mounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount-open false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-auto-mounting"&gt;
&lt;h3&gt;Disable Auto-Mounting&lt;/h3&gt;
&lt;p&gt;Turn off automatic mounting of devices:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="caja-file-manager-preferences"&gt;
&lt;h3&gt;Caja File Manager Preferences&lt;/h3&gt;
&lt;div class="section" id="set-default-sorting-order"&gt;
&lt;h4&gt;Set Default Sorting Order&lt;/h4&gt;
&lt;p&gt;Change the default sorting order to &amp;quot;type&amp;quot;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences default-sort-order &amp;#39;type&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sort-directories-first"&gt;
&lt;h4&gt;Sort Directories First&lt;/h4&gt;
&lt;p&gt;Ensure directories are always sorted first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences sort-directories-first true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="customize-appearance"&gt;
&lt;h3&gt;Customize Appearance&lt;/h3&gt;
&lt;div class="section" id="set-icon-theme"&gt;
&lt;h4&gt;Set Icon Theme&lt;/h4&gt;
&lt;p&gt;Choose an icon theme, e.g., &amp;quot;gnome&amp;quot;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.interface icon-theme &amp;#39;gnome&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="set-gtk-theme"&gt;
&lt;h4&gt;Set GTK Theme&lt;/h4&gt;
&lt;p&gt;Select a GTK theme, e.g., &amp;quot;Arc-Dark&amp;quot;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.interface gtk-theme &amp;#39;Arc-Dark&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="set-window-border-theme"&gt;
&lt;h4&gt;Set Window Border Theme&lt;/h4&gt;
&lt;p&gt;Define the theme for window borders:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general theme &amp;#39;Arc-Dark&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 22 Jul 2021 19:11:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2021-07-22:/site/posts/2021/07/22/mate-desktop-on-debian.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>mate-desktop</category></item><item><title>UTC</title><link>https://porfiriopaiz.github.io/site/posts/2021/07/15/utc.html</link><description>&lt;p&gt;When I was installing Debian on my Lenovo ThinkPad T440p, I could not find the
option to set up the local time, RTC time, and time zone to UTC as the
default configuration.&lt;/p&gt;
&lt;p&gt;To fix this, I need to run the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This lists the current configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;timedatectl
&lt;span class="go"&gt;               Local time: Thu 2021-07-15 14:45:28 CST&lt;/span&gt;
&lt;span class="go"&gt;           Universal time: Thu 2021-07-15 20:45:28 UTC&lt;/span&gt;
&lt;span class="go"&gt;                 RTC time: Thu 2021-07-15 20:44:47&lt;/span&gt;
&lt;span class="go"&gt;                Time zone: America/Managua (CST, -0600)&lt;/span&gt;
&lt;span class="go"&gt;System clock synchronized: yes&lt;/span&gt;
&lt;span class="go"&gt;              NTP service: active&lt;/span&gt;
&lt;span class="go"&gt;          RTC in local TZ: yes&lt;/span&gt;

&lt;span class="go"&gt;Warning: The system is configured to read the RTC time in the local time zone.&lt;/span&gt;
&lt;span class="go"&gt;         This mode cannot be fully supported. It will create various problems&lt;/span&gt;
&lt;span class="go"&gt;         with time zone changes and daylight saving time adjustments. The RTC&lt;/span&gt;
&lt;span class="go"&gt;         time is never updated; it relies on external facilities to maintain it.&lt;/span&gt;
&lt;span class="go"&gt;         If at all possible, use RTC in UTC by calling&lt;/span&gt;
&lt;span class="go"&gt;         &amp;#39;timedatectl set-local-rtc 0&amp;#39;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First, let's update the RTC to use UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl set-local-rtc 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, let's set the time zone and the local time zone to UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;timedatectl set-timezone UTC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, our system will be fully synchronized with UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;timedatectl
&lt;span class="go"&gt;               Local time: Thu 2021-07-15 21:31:52 UTC&lt;/span&gt;
&lt;span class="go"&gt;           Universal time: Thu 2021-07-15 21:31:52 UTC&lt;/span&gt;
&lt;span class="go"&gt;                 RTC time: Thu 2021-07-15 21:31:52&lt;/span&gt;
&lt;span class="go"&gt;                Time zone: UTC (UTC, +0000)&lt;/span&gt;
&lt;span class="go"&gt;System clock synchronized: yes&lt;/span&gt;
&lt;span class="go"&gt;              NTP service: active&lt;/span&gt;
&lt;span class="go"&gt;          RTC in local TZ: no&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 15 Jul 2021 20:53:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2021-07-15:/site/posts/2021/07/15/utc.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>timedatectl</category><category>utc</category></item><item><title>K8</title><link>https://porfiriopaiz.github.io/site/posts/2021/07/14/k8.html</link><description>&lt;p&gt;Back in February, Guido van Rossum posted on Twitter a picture of his desk with
a large mouse pad.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/gvanrossum/status/1365796969617104897"&gt;Guido van Rossum's tweet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What got my attention from this picture was the keyboard. Down in the comment
section, I found the manufacturer and model of this keyboard.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.keychron.com/products/keychron-k8-tenkeyless-wireless-mechanical-keyboard?variant=32018253021273"&gt;Keychron K8 Product&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have always wanted to try mechanical keyboards but never knew
exactly which one to get or try. Seeing that this is the preferred one from a
respectable developer, I decided to go for this same model.&lt;/p&gt;
&lt;p&gt;The very specific configuration I wanted was not available at the time I was
ordering it, so I subscribed to get a notification via email when the
same configuration became available again.&lt;/p&gt;
&lt;p&gt;I ordered mine on June 3rd, the keyboard was shipped from Hong Kong to Miami
and arrived in the next 5 days. The keyboard arrived in Nicaragua 25 days
later.&lt;/p&gt;
&lt;p&gt;The first thing I tried to do was to set up the keyboard with my T440p running
Debian 11 Bullseye via Bluetooth. For this, I installed Blueman, which provides
a MATE applet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install blueman&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the switches on the keyboard set to Windows and Bluetooth, the Blueman
applet running, and following the instructions in the booklet included in the box,
I was able to pair my Keychron K8 via Bluetooth with my T440p running Debian.&lt;/p&gt;
&lt;p&gt;I had to manually add my keyboard as a new device with the applet and then pair
both devices.&lt;/p&gt;
&lt;p&gt;Over Bluetooth and in Windows mode, the swap from multimedia keys to function
keys worked, but in wired mode, this did not work.&lt;/p&gt;
&lt;p&gt;I found some hints on how to fix this in the official Facebook support group
for Linux users of Keychron, which led me to this very specific command that must
be run on every startup so that the primary option for the F1 to F12 keys
becomes function keys instead of multimedia keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo 0 | sudo tee /sys/module/hid_apple/parameters/fnmode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Later, I found this documentation that provides at least 3 different ways to
ensure this command is executed on every startup:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://help.ubuntu.com/community/AppleKeyboard#Change_Function_Key_behavior"&gt;Ubuntu Keyboard Configuration Help&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From the 3 options listed there, I decided to go for the one that makes use of
the sysfs.conf file. So, I installed &lt;tt class="docutils literal"&gt;sysfsutils&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install sysfsutils&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And added this line at the end of the file &lt;strong&gt;/etc/sysfs.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;module/hid_apple/parameters/fnmode = 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I then restarted the computer, and while in cable and Windows mode, I pressed the
key combination:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Fn + x + l
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After doing this, the primary option for the F1 to F12 keys will be the function
keys instead of the multimedia keys.&lt;/p&gt;
&lt;p&gt;To modify the screen brightness, turn the keyboard backlight on and off, or mute
and unmute the audio, you must press the Fn key plus the function key (Fn +
F1 or Fn + F2). This will allow you to continue using your K8 on Linux
with the switches in Windows/Android mode, in wired or Bluetooth mode, with the
function keys as the primary option instead of the multimedia keys.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Wed, 14 Jul 2021 17:37:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2021-07-14:/site/posts/2021/07/14/k8.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>keychron</category><category>k8</category></item><item><title>Setup Debian Keyboard Layout and Distribution</title><link>https://porfiriopaiz.github.io/site/posts/2021/07/14/kb-layout-and-distribution.html</link><description>&lt;p&gt;During the Debian installation process, we are prompted to set up our keyboard
layout and distribution. Unfortunately, my preferred layout is not listed as
one of the available options.&lt;/p&gt;
&lt;p&gt;I would like to set it up as English International with AltGr dead keys.&lt;/p&gt;
&lt;p&gt;This is something I need to configure as a post-installation setting by running
the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;localectl set-x11-keymap us thinkpad altgr-intl&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This sets the layout to English (US), the model to one compatible with my
Lenovo ThinkPad T440p, and the variant to Dead keys via AltGr. This allows me
to input characters such as á or ñ by simply pressing: AltGr + a or AltGr + n,
respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;pionen@lilit:~$ &lt;/span&gt;localectl
&lt;span class="go"&gt;System Locale: LANG=en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;               LANGUAGE=en_US:en&lt;/span&gt;
&lt;span class="go"&gt;    VC Keymap: n/a&lt;/span&gt;
&lt;span class="go"&gt;   X11 Layout: us&lt;/span&gt;
&lt;span class="go"&gt;    X11 Model: thinkpad&lt;/span&gt;
&lt;span class="go"&gt;  X11 Variant: altgr-intl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, I can continue using the English (US) keyboard layout when typing in
either English or Spanish without needing to change the variant or physical
layout.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Wed, 14 Jul 2021 16:38:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2021-07-14:/site/posts/2021/07/14/kb-layout-and-distribution.html</guid><category>floss</category><category>deb11</category><category>debian</category><category>distribution</category><category>keyboard</category><category>layout</category></item><item><title>KeePassXC: The Password Manager</title><link>https://porfiriopaiz.github.io/site/posts/2017/11/17/keepassxc-password-manager.html</link><description>&lt;p&gt;KeePassXC is one of the first programs I install after booting a fresh system.&lt;/p&gt;
&lt;p&gt;In this post, I’ll show you how to install KeePassXC on Fedora and Debian, how
to use it, how it simplifies managing hundreds of accounts and associated
passwords, and how to generate secure passwords with high entropy.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="section" id="fedora"&gt;
&lt;h3&gt;Fedora&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install keepassxc&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;apt-get install keepassx&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-a-password-database"&gt;
&lt;h2&gt;Creating a Password Database&lt;/h2&gt;
&lt;p&gt;The first step is to create your first database, where all generated passwords
for your accounts will be stored.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Launch KeePassXC:&lt;/p&gt;
&lt;img alt="Screenshot showing GNOME Shell overview mode and KeePassXC launcher" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-38-49.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new database:&lt;/p&gt;
&lt;img alt="KeePassXC interface with the option to create a new database" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_21-31-18.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Assign a name to the &lt;cite&gt;*.kdbx&lt;/cite&gt; file (the database):&lt;/p&gt;
&lt;img alt="Nautilus file explorer showing the new database file being saved" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-02-29.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Set a master password to encrypt the database (&lt;cite&gt;Passwords.kdbx&lt;/cite&gt;) and click &lt;cite&gt;OK&lt;/cite&gt;:&lt;/p&gt;
&lt;img alt="KeePassXC while assigning the master password for the database" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-18_22-09-07.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add a new account and password by clicking the &lt;cite&gt;Key&lt;/cite&gt; icon with a green arrow:&lt;/p&gt;
&lt;img alt="Button to add a new account to the database" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-20_16-37-51.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Fill in the details:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add a title to identify the account.&lt;/li&gt;
&lt;li&gt;Specify the username for the account.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Adding a title, username, and password for a new account entry" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-15-14.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Generate a secure password:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Click the black dice icon to open the password generator.&lt;/li&gt;
&lt;li&gt;Adjust the character length for stronger passwords.&lt;/li&gt;
&lt;li&gt;Select the character groups to include:&lt;ul&gt;
&lt;li&gt;Uppercase letters: &lt;cite&gt;A-Z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Lowercase letters: &lt;cite&gt;a-z&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Numbers: &lt;cite&gt;0-9&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Special characters: &lt;cite&gt;/*_ ...&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Extended ASCII characters (optional).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enable:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Exclude look-alike characters&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pick characters from every group&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;cite&gt;Generate&lt;/cite&gt; to create the password, then click &lt;cite&gt;Copy&lt;/cite&gt; to copy it to the clipboard.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Random password generated based on selected criteria" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-17-30.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Paste the generated password into the &lt;strong&gt;Password&lt;/strong&gt; and &lt;strong&gt;Repeat&lt;/strong&gt; fields using &lt;cite&gt;Ctrl-v&lt;/cite&gt;:&lt;/p&gt;
&lt;img alt="Pasting the password into the required fields" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-18.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Verify the password by clicking the &lt;cite&gt;Eye&lt;/cite&gt; icon, then click &lt;cite&gt;Apply&lt;/cite&gt; and &lt;cite&gt;OK&lt;/cite&gt;.&lt;/p&gt;
&lt;img alt="Verifying passwords match in both fields" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-18-31.png" /&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;10. Save your changes by clicking the blue save icon. Confirm that the asterisk
(*) at the top disappears, indicating the changes have been saved.&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Database changes successfully saved" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-19_22-19-03.png" /&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="useful-keyboard-shortcuts"&gt;
&lt;h2&gt;Useful Keyboard Shortcuts&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Ctrl-b&lt;/strong&gt;: Copy the username to the clipboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl-c&lt;/strong&gt;: Copy the password to the clipboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl-e&lt;/strong&gt;: Edit the selected account entry.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl-n&lt;/strong&gt;: Add a new account to the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="auto-type-shortcut"&gt;
&lt;h2&gt;Auto-Type Shortcut&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Auto-Type&lt;/strong&gt; shortcut, &lt;cite&gt;Ctrl-v&lt;/cite&gt;, is my favorite. It allows KeePassXC to
enter the username and password for an account directly into the login fields
of a webpage or application.&lt;/p&gt;
&lt;p&gt;For it to work, KeePassXC and the target field must be adjacent in the
task-switching order (&lt;cite&gt;Alt-Tab&lt;/cite&gt;).&lt;/p&gt;
&lt;p&gt;Example:
1. Select an entry with a URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Database entry with a linked URL" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_15-56-04.png" /&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic" start="2"&gt;
&lt;li&gt;&lt;p class="first"&gt;Press &lt;strong&gt;Ctrl-u&lt;/strong&gt; to open the login page in your default web browser:&lt;/p&gt;
&lt;img alt="Opening the linked URL in a web browser" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_16-35-24.png" /&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3. Switch back to KeePassXC using &lt;cite&gt;Alt-Tab&lt;/cite&gt; and press &lt;cite&gt;Ctrl-v&lt;/cite&gt; to enter the
username and password automatically:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Auto-Type entering the username and password" class="align-center" src="https://porfiriopaiz.github.io/site/images/keepassxc/screenshot_from_2017-11-22_17-01-06.png" /&gt;
&lt;/blockquote&gt;
&lt;p&gt;KeePassXC will then complete the login process for you.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Fri, 17 Nov 2017 19:10:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-11-17:/site/posts/2017/11/17/keepassxc-password-manager.html</guid><category>floss</category><category>debian</category><category>fc27</category><category>fedora</category><category>keepassxc</category><category>password</category></item></channel></rss>