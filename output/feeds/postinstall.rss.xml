<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>porfirio's blog - postinstall</title><link>https://porfiriopaiz.github.io/site/</link><description></description><lastBuildDate>Tue, 24 Dec 2019 12:28:00 -0600</lastBuildDate><item><title>Fedora 30 Mate Desktop post-install</title><link>https://porfiriopaiz.github.io/site/posts/2019/12/24/mate-desktop.html</link><description>&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;dnf configuration&lt;/h2&gt;
&lt;div class="section" id="dnf-conf"&gt;
&lt;h3&gt;dnf.conf&lt;/h3&gt;
&lt;p&gt;Enable Fastest Mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable deltarpm's for future updates:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable dnf packages caching:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-dnf-makecache-systemd-service-and-timer"&gt;
&lt;h3&gt;Disable dnf makecache systemd service and timer&lt;/h3&gt;
&lt;p&gt;To disable the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable the timer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regenerate-the-cache-and-install-available-updates"&gt;
&lt;h3&gt;Regenerate the cache and install available updates&lt;/h3&gt;
&lt;p&gt;As a normal non-root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="check-for-available-upgrades-and-enter-your-root-password"&gt;
&lt;h2&gt;Check for available upgrades and enter your root password:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are upgrades available, we apply them with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mate-desktop-tips-and-tricks"&gt;
&lt;h2&gt;Mate Desktop Tips and Tricks&lt;/h2&gt;
&lt;p&gt;Enable windows composing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general compositing-manager true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable new window centering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general center-new-windows true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable window snapping&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general allow-tiling true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hide all desktop icons:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.background show-desktop-icons false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change window decoration button order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.Marco.general button-layout &amp;#39;close,maximize,minimize:menu&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automount-open:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount-open false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable automounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.media-handling automount false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caja default prefereces for sorting order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.mate.caja.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-some-working-directories"&gt;
&lt;h2&gt;Create some working directories&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir ~/git_repos&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir ~/projects&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="remove-unneeded-software"&gt;
&lt;h2&gt;Remove unneeded software&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove xfburn&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove exaile&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove parole&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove hexchat&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove dnfdragora&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y remove filezilla&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="software-repositories"&gt;
&lt;h2&gt;Software Repositories&lt;/h2&gt;
&lt;p&gt;Enable software repositories.&lt;/p&gt;
&lt;div class="section" id="rpmfusion"&gt;
&lt;h3&gt;RPMFusion&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-workstation-repositories"&gt;
&lt;h3&gt;Fedora Workstation Repositories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-workstation-repositories&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-rawhide-s-repositories"&gt;
&lt;h3&gt;Fedora Rawhide's Repositories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-repos-rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="copr"&gt;
&lt;h3&gt;COPR&lt;/h3&gt;
&lt;p&gt;Copr is an easy-to-use automatic build system providing a package repository as
its output.&lt;/p&gt;
&lt;p&gt;Here are some of the repos I rely on for some packages:&lt;/p&gt;
&lt;div class="section" id="neteler-remarkable"&gt;
&lt;h4&gt;neteler/remarkable&lt;/h4&gt;
&lt;p&gt;Remarkable is a free fully featured markdown editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable neteler/remarkable&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="philfry-gajim"&gt;
&lt;h4&gt;philfry/gajim&lt;/h4&gt;
&lt;p&gt;Gajim is a Jabber client written in PyGTK, currently it provides support for
the OMEMO encryption method which I use. This repo provides tools and
dependencies not available in the official Fedora repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable philfry/gajim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dani-qgis"&gt;
&lt;h4&gt;dani/qgis&lt;/h4&gt;
&lt;p&gt;QGIS is a user friendly Open Source Geographic Information System.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable dani/qgis&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="donet-sig-dotnet"&gt;
&lt;h4&gt;donet-sig/dotnet&lt;/h4&gt;
&lt;p&gt;This provides the .NET CLI tools and runtime for Fedora.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf copr enable @dotnet-sig/dotnet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="vscodium"&gt;
&lt;h3&gt;VSCodium&lt;/h3&gt;
&lt;p&gt;Import the gpg key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now create the vscodium.repo file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;tee -a /etc/yum.repos.d/vscodium.repo &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[gitlab.com_paulcarroty_vscodium_repo]&lt;/span&gt;
&lt;span class="go"&gt;name=gitlab.com_paulcarroty_vscodium_repo&lt;/span&gt;
&lt;span class="go"&gt;baseurl=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/&lt;/span&gt;
&lt;span class="go"&gt;enabled=1&lt;/span&gt;
&lt;span class="go"&gt;gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;repo_gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;gpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&lt;/span&gt;
&lt;span class="go"&gt;EOF&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Tue, 24 Dec 2019 12:28:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2019-12-24:/site/posts/2019/12/24/mate-desktop.html</guid><category>floss</category><category>fc30</category><category>fedora</category><category>mate</category><category>postinstall</category></item><item><title>repos</title><link>https://porfiriopaiz.github.io/site/posts/2019/07/11/repos.html</link><description>&lt;div class="section" id="software-repositories"&gt;
&lt;h2&gt;Software Repositories&lt;/h2&gt;
&lt;p&gt;Once we solved the problem of getting connected to the Internet and how to
launch a terminal, you might want to install all the software you use.&lt;/p&gt;
&lt;p&gt;The software comes from somewhere, on Fedora these are called &lt;em&gt;Software
Repositories&lt;/em&gt;, next I detail which are the ones I enable on all my Fedora
installs apart of the officials that comes preinstalled and enabled by default.&lt;/p&gt;
&lt;p&gt;Open a terminal and enable some of these.&lt;/p&gt;
&lt;div class="section" id="rpmfusion"&gt;
&lt;h3&gt;RPMFusion&lt;/h3&gt;
&lt;p&gt;RPM Fusion is a repository of add-on packages for Fedora and EL+EPEL maintained
by a group of volunteers. RPM Fusion is not a standalone repository, but an
extension of Fedora. RPM Fusion distributes packages that have been deemed
unacceptable to Fedora.&lt;/p&gt;
&lt;p&gt;More about RPMFusion on its official website: &lt;a class="reference external" href="https://rpmfusion.org/FAQ"&gt;https://rpmfusion.org/FAQ&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-workstation-repositories"&gt;
&lt;h3&gt;Fedora Workstation Repositories&lt;/h3&gt;
&lt;p&gt;From the Fedora wiki page corresponding to Fedora Workstation Repositories:&lt;/p&gt;
&lt;p&gt;The Fedora community strongly promotes free and open source resources. The
Fedora Workstation, in its out of the box configuration, therefore, only
includes free and open source software. To make the Fedora Workstation more
usable, we've made it possible to easily install a curated set of third party
(external) sources that supply software not included in Fedora via an
additional package.&lt;/p&gt;
&lt;p&gt;Read more at: &lt;a class="reference external" href="https://fedoraproject.org/wiki/Workstation/Third_Party_Software_Repositories"&gt;https://fedoraproject.org/wiki/Workstation/Third_Party_Software_Repositories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that this will only install the *.repo files, it will not enable
the provided repos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-workstation-repositories&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-rawhide-s-repositories"&gt;
&lt;h3&gt;Fedora Rawhide's Repositories&lt;/h3&gt;
&lt;p&gt;Rawhide is the name given to the current development version of Fedora. It
consists of a package repository called &amp;quot;rawhide&amp;quot; and contains the latest build
of all Fedora packages updated on a daily basis. Each day, an attempt is made
to create a full set of 'deliverables' (installation images and so on), and all
that compose successfully are included in the Rawhide tree for that day.&lt;/p&gt;
&lt;p&gt;It is possible to install its repository files and just temporarily enable it
for just a single transaction, let us say, to simple install or upgrade a
single package and its dependencies, maybe, to give a try to its new version
that is not currently available on any of the stable and maintained versions of
Fedora.&lt;/p&gt;
&lt;p&gt;This is useful when a bug was fixed on Rawhide but it has not landed yet on the
stable branch of Fedora and the urge for it cannot wait.&lt;/p&gt;
&lt;p&gt;Again, this will just install the *.repo file under &lt;tt class="docutils literal"&gt;/etc/yum.repos.d/&lt;/tt&gt;,
this will not enable it. Later we will see how to handle, disable and enable
this repositories for just one transaction.&lt;/p&gt;
&lt;p&gt;More on Rawhide on its wiki page: &lt;a class="reference external" href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;https://fedoraproject.org/wiki/Releases/Rawhide&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install fedora-repos-rawhide&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="copr"&gt;
&lt;h3&gt;COPR&lt;/h3&gt;
&lt;p&gt;Copr is an easy-to-use automatic build system providing a package repository as
its output.&lt;/p&gt;
&lt;p&gt;Here are some of the repos I rely on for some packages:&lt;/p&gt;
&lt;div class="section" id="neteler-remarkable"&gt;
&lt;h4&gt;neteler/remarkable&lt;/h4&gt;
&lt;p&gt;Remarkable is a free fully featured markdown editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable neteler/remarkable&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="philfry-gajim"&gt;
&lt;h4&gt;philfry/gajim&lt;/h4&gt;
&lt;p&gt;Gajim is a Jabber client written in PyGTK, currently it provides support for
the OMEMO encryption method which I use. This repo provides tools and
dependencies not available in the official Fedora repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable philfry/gajim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dani-qgis"&gt;
&lt;h4&gt;dani/qgis&lt;/h4&gt;
&lt;p&gt;QGIS is a user friendly Open Source Geographic Information System.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y copr enable dani/qgis&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="donet-sig-dotnet"&gt;
&lt;h4&gt;donet-sig/dotnet&lt;/h4&gt;
&lt;p&gt;This provides the .NET CLI tools and runtime for Fedora.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf copr enable @dotnet-sig/dotnet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="vscodium"&gt;
&lt;h3&gt;VSCodium&lt;/h3&gt;
&lt;p&gt;Few weeks ago I decided to give a try to VSCodium, a fork of VSCode, here is
how to enable its repo for Fedora.&lt;/p&gt;
&lt;p&gt;First import its gpg key, so you can check the packages retrieved from the
repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now create the vscodium.repo file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;quot;tee -a /etc/yum.repos.d/vscodium.repo &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[gitlab.com_paulcarroty_vscodium_repo]&lt;/span&gt;
&lt;span class="go"&gt;name=gitlab.com_paulcarroty_vscodium_repo&lt;/span&gt;
&lt;span class="go"&gt;baseurl=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/&lt;/span&gt;
&lt;span class="go"&gt;enabled=1&lt;/span&gt;
&lt;span class="go"&gt;gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;repo_gpgcheck=1&lt;/span&gt;
&lt;span class="go"&gt;gpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg&lt;/span&gt;
&lt;span class="go"&gt;EOF&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verification"&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;p&gt;Now check that all the repos has been successfully installed and some of them
enabled by refreshing the &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; metadata.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thats all, in the next post will see how to enable some of this repos, how
temporarilly disable  and enable some other for just a single transaction, how
to install or upgrade certain packages from an specific repo and many repo
administration tasks.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 11 Jul 2019 23:32:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2019-07-11:/site/posts/2019/07/11/repos.html</guid><category>floss</category><category>fc30</category><category>fedora</category><category>postinstall</category><category>repositories</category></item><item><title>i3 post install</title><link>https://porfiriopaiz.github.io/site/posts/2018/12/09/i3-post-install.html</link><description>&lt;p&gt;After installing Fedora 29 with i3 window manager, we need to install many
other programs that will ease our user experience.&lt;/p&gt;
&lt;p&gt;The first problem we have to solve is how are we going to connect to Internet,
you might have noticed that we don't have any program or applet that allows us
to activate the Wi-Fi card or even the NetworkManager service to use the wired
wetwork card or manage the different networks that are within our reach.&lt;/p&gt;
&lt;p&gt;Assuming that you are already logged in and that your hardware is supported by
Fedora, the wireless network card should be activated, but how do we connect to
any of the networks we have available?&lt;/p&gt;
&lt;div class="section" id="nmcli"&gt;
&lt;h2&gt;nmcli&lt;/h2&gt;
&lt;p&gt;In the previous post we installed a set of packages provided by the group
&amp;quot;Hardware Support&amp;quot;, this group provides support for a wide variety of
networking hardware.  We also install the group of packages corresponding to
NetworkManager.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt; is a command-line program that will allow us to activate by software
the network hardware of our device, scan the networks that are around us and
connect to them.&lt;/p&gt;
&lt;p&gt;We will need a terminal, by pressing &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; we get a Terminal.&lt;/p&gt;
&lt;p&gt;If our device has a switch that allows to activate or deactivate the
network card, we make sure it is activated.&lt;/p&gt;
&lt;p&gt;Then on the terminal we execute the following command to verify that it is
already activated by software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli networking on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate the wired network connection of our device in case we were
accessing one and we wanted to use it.&lt;/p&gt;
&lt;p&gt;To activate the wireless network hardware from the terminal, we execute the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli radio wifi on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should activate our network card, then we verify which are the networks
that we have available at our reach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;IN-USE  SSID           MODE   CHAN  RATE        SIGNAL  BARS  SECURITY&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  5     130 Mbit/s  100     ▂▄▆█  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_2     Infra  1     130 Mbit/s  29      ▂___  WPA2&lt;/span&gt;
&lt;span class="go"&gt;        RED_WIFI_3     Infra  1     54 Mbit/s   17      ▂___  WPA1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case you need to scan again to verify other connections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi rescan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming that &lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; does not require an access password, to get
connected we just execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case that we might need to provide a password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;nmcli device wifi connect RED_WIFI_1 password &amp;quot;1234567890&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; is the task we want to accomplish.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;RED_WIFI_1&lt;/tt&gt; this argument tells the network we want to get connected.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;password&lt;/tt&gt; a parameter that tells we are going to provide a password to
get authenticated.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;1234567890&lt;/tt&gt; this is the argument passed for the previous parameter, the
password of the nextwork. Here you must provided the password that works for
you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By now, you should be connected to the network. Now proceed to install any
other program that will help you to ease you user experience with i3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networks"&gt;
&lt;h2&gt;Networks&lt;/h2&gt;
&lt;div class="section" id="mn-applet"&gt;
&lt;h3&gt;mn-applet&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; is a very simple applet for NetworkManager that allows us to do
in a very easy and intuitive way what we did with &lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt;, but in a graphical
way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-applet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; press &amp;lt;Start&amp;gt; + &amp;lt;d&amp;gt; and type &lt;cite&gt;nm-applet&lt;/cite&gt; and press
&amp;lt;Enter&amp;gt;. In the lower right corner of our screen should appear an icon
corresponding to this &lt;cite&gt;applet&lt;/cite&gt; from where we can manage our connection to the
different networks that we have available to around us.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="networkmanager-tui"&gt;
&lt;h3&gt;NetworkManager-tui&lt;/h3&gt;
&lt;p&gt;This is an alternative for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;nm-applet&lt;/span&gt;&lt;/tt&gt; that make use of &lt;tt class="docutils literal"&gt;ncurses&lt;/tt&gt; to create
a very friendly &lt;cite&gt;Text User Interface&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install NetworkManager-tui&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nm-connecion-editor"&gt;
&lt;h3&gt;nm-connecion-editor&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;NetworkManager Connection Editor&lt;/cite&gt; allows us to edit in a friendly way and
intuitively the different networks to which we have accessed, or Well, create
Hotspots in case our network card supports it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install nm-connection-editor&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="terminal-emulator"&gt;
&lt;h2&gt;Terminal Emulator&lt;/h2&gt;
&lt;p&gt;You may have noticed that the emulator that is installed by default with i3 is
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rxvt-unicode&lt;/span&gt;&lt;/tt&gt; and that is not very friendly to say, it is not very
intuitive to first sight and it has a certain learning curve that we do not
want to go through, possibly...&lt;/p&gt;
&lt;p&gt;Ironically, my favorite terminal emulator is GNOME Terminal, you can install
the one you prefer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; has the key combination &amp;lt;Start&amp;gt; + &amp;lt;Enter&amp;gt; assigned to the emulator
&lt;tt class="docutils literal"&gt;urxvt&lt;/tt&gt;, to launch GNOME Terminal instead, you need to edit the configuration
file for  &lt;tt class="docutils literal"&gt;i3&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.config/i3/config&lt;/span&gt;&lt;/tt&gt;), look for the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec i3-sensible-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And replace with the command that calls our terminal emulator, in my case,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-terminal&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bindsym $mod+Return exec gnome-terminal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the following post I will share what other programs I use in my setup Fedora
29 with i3wm. At the moment you already have the necessary to install other
interesting programs such as Web browser and others.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Sun, 09 Dec 2018 21:26:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2018-12-09:/site/posts/2018/12/09/i3-post-install.html</guid><category>floss</category><category>dnf</category><category>fc29</category><category>fedora</category><category>postinstall</category></item><item><title>i3</title><link>https://porfiriopaiz.github.io/site/posts/2018/11/29/i3.html</link><description>&lt;p&gt;In this post, I will explain how to perform a Fedora 29 installation with the
i3 window manager. It is common to find installation guides for i3, but they
often assume you already have another desktop environment installed.&lt;/p&gt;
&lt;p&gt;Here, we will see how to build a fully functional environment starting from a
minimal installation, as I have explained in previous posts.&lt;/p&gt;
&lt;div class="section" id="creating-an-installation-medium"&gt;
&lt;h2&gt;Creating an Installation Medium&lt;/h2&gt;
&lt;div class="section" id="downloading-the-fedora-everything-netinstall-iso"&gt;
&lt;h3&gt;Downloading the Fedora Everything Netinstall ISO&lt;/h3&gt;
&lt;p&gt;From the site: &lt;a class="reference external" href="https://alt.fedoraproject.org/"&gt;https://alt.fedoraproject.org/&lt;/a&gt;, download the file in the
&lt;em&gt;Everything&lt;/em&gt; section. This ISO allows network-based installation, downloading
all necessary packages from the Internet. It also provides the option to choose
which package collections to install, unlike Live media, which comes with
predefined software selections.&lt;/p&gt;
&lt;p&gt;Download the ISO with &lt;cite&gt;wget&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-29-1.2.iso&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, download the integrity check file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify the integrity of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sha256sum -c Fedora-Everything-29-1.2-x86_64-CHECKSUM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-the-installation-medium-with-fedora-media-writer"&gt;
&lt;h3&gt;Creating the Installation Medium with Fedora Media Writer&lt;/h3&gt;
&lt;p&gt;Fedora Media Writer is available for various operating systems. Download the
appropriate version from:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1"&gt;https://github.com/FedoraQt/MediaWriter/releases/tag/4.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using Fedora Media Writer ensures the installation medium will support booting
on both UEFI and BIOS systems. The boot mode depends on which has higher
priority during startup. I always use UEFI exclusively, so all my systems are
installed in UEFI mode.&lt;/p&gt;
&lt;p&gt;Once Fedora Media Writer is installed, connect your USB drive, run the
application, and use the &lt;em&gt;Custom Image&lt;/em&gt; option to navigate to the downloaded
ISO. Select the USB drive carefully and write the image to the drive.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Follow the installation steps described in this previous post, ensuring access
to a wireless or wired network:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html"&gt;https://porfiriopaiz.github.io/blog/posts/anaconda-y-lvm-sobre-luks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;During installation, I used my mobile phone to create a wired network via USB.
While I had wireless access during the base system installation (Fedora Custom
Install), the selected package collection lacked the necessary drivers for
wireless connectivity.&lt;/p&gt;
&lt;p&gt;To use a USB tethered network, follow these steps after the first boot:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Log in to the system.&lt;/li&gt;
&lt;li&gt;Connect the USB cable to your computer and mobile phone.&lt;/li&gt;
&lt;li&gt;Ensure the phone is connected to Wi-Fi or has an active data plan. You will need at least 800 MB of data for downloading the required RPM packages.&lt;/li&gt;
&lt;li&gt;Put the phone in USB or MTP data transfer mode.&lt;/li&gt;
&lt;li&gt;Enable a wired network (USB tethering) on your mobile phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Verify the connection by pinging Google:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ping 8.8.8.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-configurations"&gt;
&lt;h2&gt;Basic Configurations&lt;/h2&gt;
&lt;div class="section" id="configuring-dnf"&gt;
&lt;h3&gt;Configuring &lt;cite&gt;dnf&lt;/cite&gt;&lt;/h3&gt;
&lt;p&gt;As root, I configure &lt;cite&gt;dnf&lt;/cite&gt; for optimal performance. This step is optional:&lt;/p&gt;
&lt;p&gt;Enable the fastest mirrors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable delta RPMs for faster downloads (optional):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep the package cache for the lifetime of the Fedora release (optional):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable unnecessary &lt;cite&gt;dnf&lt;/cite&gt; services and timers to save bandwidth and avoid
locks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl disable dnf-makecache.timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot to apply the changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="updating-the-system"&gt;
&lt;h3&gt;Updating the System&lt;/h3&gt;
&lt;p&gt;After installation, your system may not include the latest updates. Refresh the
metadata cache and install updates:&lt;/p&gt;
&lt;p&gt;As a normal user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check for updates:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If updates are available, install them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot if updates include critical components like the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-i3"&gt;
&lt;h2&gt;Installing i3&lt;/h2&gt;
&lt;p&gt;Install the i3 window manager and necessary components. All commands must be
executed as root.&lt;/p&gt;
&lt;p&gt;Install required groups and packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install core&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install networkmanager-submodules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install fonts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install multimedia&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install base-x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install standard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y group install input-methods&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf -y install i3 lightdm-gtk xdg-user-dirs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the graphical boot mode and LightDM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl set-default graphical.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;systemctl enable lightdm.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot the system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="first-graphical-session"&gt;
&lt;h2&gt;First Graphical Session&lt;/h2&gt;
&lt;p&gt;Upon first login, i3 will prompt you to generate a configuration file. Press
Enter to confirm. Choose your preferred modifier key (e.g., the Windows or Meta
key).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-additional-software"&gt;
&lt;h2&gt;Installing Additional Software&lt;/h2&gt;
&lt;p&gt;This setup does not include preinstalled tools like a web browser or file
manager. You can install them as needed. For example, to install GNOME
Terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install gnome-terminal&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;cite&gt;dmenu&lt;/cite&gt; to launch applications:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Press &lt;cite&gt;&amp;lt;Win&amp;gt; + d&lt;/cite&gt; and type &lt;cite&gt;gnome-terminal&lt;/cite&gt; to open the terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="logging-out-and-powering-off"&gt;
&lt;h2&gt;Logging Out and Powering Off&lt;/h2&gt;
&lt;p&gt;To log out from i3:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Press &lt;cite&gt;&amp;lt;Win&amp;gt; + &amp;lt;Shift&amp;gt; + e&lt;/cite&gt; and confirm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To power off from LightDM:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Press &lt;cite&gt;&amp;lt;Alt&amp;gt; + &amp;lt;F4&amp;gt;&lt;/cite&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This guide provides a streamlined way to set up i3 on Fedora 29, ideal for
lightweight virtual machines or older hardware with limited resources.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 29 Nov 2018 02:53:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2018-11-29:/site/posts/2018/11/29/i3.html</guid><category>floss</category><category>dnf</category><category>fc29</category><category>fedora</category><category>postinstall</category></item><item><title>Fedora 26 Custom Operating System Post-Install</title><link>https://porfiriopaiz.github.io/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</link><description>&lt;p&gt;In the last post, I explained how to make a minimal installation of Fedora 25.
Months have passed since then, and Fedora 26 has been released. Following the
same steps, I installed it on my laptop and will now document my
post-installation process.&lt;/p&gt;
&lt;p&gt;Since this is a minimal installation, the set of installed packages does not
provide support for wireless network cards. Although Anaconda provides such
support during the installation process, the minimal package set lacks the
required drivers. To address this, I connected my laptop to a wired network.&lt;/p&gt;
&lt;div class="section" id="dnf-configuration"&gt;
&lt;h2&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; Configuration&lt;/h2&gt;
&lt;p&gt;After connecting to a wired network, the first thing I did was edit &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt;'s
configuration file and add the following lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;fastestmirror=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;deltarpm=false&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;echo &amp;#39;keepcache=true&amp;#39; &amp;gt;&amp;gt; /etc/dnf/dnf.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ensures that &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; always uses the fastest mirror, avoids using &lt;cite&gt;*.drpm&lt;/cite&gt;
files for upgrades (downloading &lt;cite&gt;*.rpm&lt;/cite&gt; files instead), and retains any
downloaded packages in its cache.&lt;/p&gt;
&lt;p&gt;Now, let's reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-dnf-makecache-service-and-dnf-makecache-timer"&gt;
&lt;h2&gt;Disable &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dnf-makecache.service&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dnf-makecache.timer&lt;/span&gt;&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; has a service and timer that keep the package metadata cache updated
periodically. This behavior annoys me, as I prefer to update the cache when I
want and need to. To disable these, I ran the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl disable dnf-makecache.timer&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's reboot again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rebuilding-package-metadata-cache"&gt;
&lt;h2&gt;Rebuilding Package Metadata Cache&lt;/h2&gt;
&lt;p&gt;After customizing the &lt;tt class="docutils literal"&gt;dnf&lt;/tt&gt; configuration file and disabling the service and
timer, I cleaned the old cache and rebuilt it. Fedora maintains two separate
caches: one for the normal user and another for the root user.&lt;/p&gt;
&lt;p&gt;To rebuild the cache for my normal user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf clean all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;dnf makecache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To rebuild the cache for the root user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf clean all&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf makecache&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="available-upgrades"&gt;
&lt;h2&gt;Available Upgrades&lt;/h2&gt;
&lt;p&gt;During installation, there is an option to download and install the latest
versions of packages. To check for any available upgrades:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf --refresh check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To download and apply the upgrades, if available:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After upgrading, reboot to utilize the latest versions of any upgraded
packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="workstation-product-environment-installation"&gt;
&lt;h2&gt;Workstation Product Environment Installation&lt;/h2&gt;
&lt;p&gt;On my laptop, I use GNOME Shell as my desktop environment. To install it, I
used a package group that provides all the necessary packages to transform this
minimal installation into a Fedora Workstation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf group install workstation-product-environment&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="graphical-boot-mode"&gt;
&lt;h2&gt;Graphical Boot Mode&lt;/h2&gt;
&lt;p&gt;After installing the required packages, we must change the default &lt;cite&gt;init&lt;/cite&gt; mode
from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;multi-user.target&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;graphical.target&lt;/tt&gt;. Otherwise, the system will
not boot into graphical mode. Additionally, we need to enable the graphical
login manager service. Without this, the login will remain a text-based prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl set-default graphical.target&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl enable gdm.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything works correctly, Fedora 26 Workstation with GNOME Shell should
now be running.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fixing-nautilus-behavior"&gt;
&lt;h2&gt;Fixing Nautilus Behavior&lt;/h2&gt;
&lt;p&gt;Before opening any other application, I like to adjust how Nautilus sorts
files. I prefer sorting by type or file extension:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.nautilus.preferences default-sort-order type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ensures files are displayed sorted by extension when opening Nautilus.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repositories"&gt;
&lt;h2&gt;Repositories&lt;/h2&gt;
&lt;div class="section" id="enabling-rpmfusion"&gt;
&lt;h3&gt;Enabling RPMFusion:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refresh the cache to download the RPMFusion package metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-upgrade&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enabling-google-chrome-s-repository"&gt;
&lt;h3&gt;Enabling Google Chrome's Repository:&lt;/h3&gt;
&lt;p&gt;I used to enable the Google Chrome repository as explained in this post:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/"&gt;https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, a simpler method was introduced to me by Mayorga. Simply download the
Google Chrome &lt;tt class="docutils literal"&gt;rpm&lt;/tt&gt; package, install it via the command line, and it will
automatically add the &lt;cite&gt;*.repo&lt;/cite&gt; file to &lt;cite&gt;/etc/yum.repos.d/&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/Downloads&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget -N -t 0 -c https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install google-chrome-stable_current_x86_64.rpm&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf check-update&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-tracker"&gt;
&lt;h2&gt;Disabling Tracker&lt;/h2&gt;
&lt;p&gt;Before copying files from my backups, I disable the annoying &lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt;
service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install tracker-preferences&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mkdir ~/.config/autostart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cp /etc/xdg/autostart/tracker* ~/.config/autostart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd ~/.config/autostart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sed -i &amp;#39;s/X-GNOME-Autostart-enabled=true/X-GNOME-Autostart-enabled=false/&amp;#39; tracker*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check &lt;tt class="docutils literal"&gt;tracker&lt;/tt&gt; status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To perform a &lt;tt class="docutils literal"&gt;hard reset&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;tracker reset --hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disabling-gnome-software-and-packagekit-auto-updates"&gt;
&lt;h2&gt;Disabling GNOME Software and PackageKit Auto-Updates&lt;/h2&gt;
&lt;p&gt;GNOME Software downloads metadata and updates in the background. To disable
this behavior:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;gsettings set org.gnome.software download-updates false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;systemctl mask packagekit.service&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="libraries-and-development-tools"&gt;
&lt;h2&gt;Libraries and Development Tools&lt;/h2&gt;
&lt;p&gt;Finally, I installed package groups and tools for development:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf -y group install c-development development-libs development-tools fedora-packager rpm-development-tools&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install automake gcc gcc-c++ kernel-devel cmake python-devel python3-devel monodevelop golang nodejs rust cargo python3-virtualenv python3-pip&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install spell checkers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;su -c &amp;#39;dnf install hunspell hunspell-en hunspell-es aspell aspell-es aspell-en autocorr-es autocorr-en&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the next post, I will review additional tools I use on Fedora.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Porfirio Páiz</dc:creator><pubDate>Thu, 31 Aug 2017 16:26:00 -0600</pubDate><guid isPermaLink="false">tag:porfiriopaiz.github.io,2017-08-31:/site/posts/2017/08/31/fedora-26-custom-operating-system-post-install.html</guid><category>floss</category><category>dnf</category><category>fc26</category><category>fedora</category><category>postinstall</category></item></channel></rss>